<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LING218</title>
  
  <subtitle>怕，你就会输一辈子！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.ling218.cn/"/>
  <updated>2020-10-11T02:53:39.531Z</updated>
  <id>https://www.ling218.cn/</id>
  
  <author>
    <name>LING218</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>H3CSE园区网-V7-总结</title>
    <link href="https://www.ling218.cn/archives/13089a71.html"/>
    <id>https://www.ling218.cn/archives/13089a71.html</id>
    <published>2020-10-10T13:06:51.124Z</published>
    <updated>2020-10-11T02:53:39.531Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="企业网模型"><a href="#企业网模型" class="headerlink" title="企业网模型"></a>企业网模型</h2><ul><li>企业IT系统发展趋势<ol><li>以计算为中心的静态架构</li><li>以业务为中心的动态架构</li><li>以战略为中心的知识架构</li></ol></li><li>IT资源整合：包括通信、计算、存储等在内的基础资源的整合</li><li>IT管理：内容管理、流量管理、安全管理、配置管理 </li><li>IT业务个性化：传统IT设施难以提供企业所需的灵活性、智能性和个性化</li><li>基于SOA的网络架构：应用层、服务层、基础设施层</li><li>IToIP关键特性：标准、融合、开放、智能</li><li>层级化网络模型：核心层、汇聚层、接入层<ol><li>接入层</li></ol><ul><li>为用户提供网络的访问接口</li><li>丰富大量的接口</li><li>接入安全控制</li><li>接入速率控制、基于策略的分类、数据包标记等 </li><li>较少考虑冗余性</li></ul><ol start="2"><li>汇聚层</li></ol><ul><li>将接入层数据汇集起来，依据策略对数据、信息等实施控制</li><li>必要的冗余设计</li><li>复杂的策略配置</li></ul><ol start="3"><li>核心层</li></ol><ul><li>对来自汇聚层的数据进行尽可能快速的交换</li><li>强大的数据交换能力</li><li>稳定、可靠的高冗余设计</li><li>不配置复杂策略</li></ul></li><li>层级化网络模型的优点：<ol><li>网络结构清晰</li><li>便于规划和维护</li><li>增强网络稳定性</li><li>增强网络可扩展性</li></ol></li><li>典型企业网结构：<ol><li>数据中心</li><li>园区网</li><li>大型分支机构</li><li>中型分支机构</li><li>远程/分布式办公人员</li></ol></li><li>模块化企业网架构：<ol><li>园区网主干</li><li>数据中心</li><li>网管中心</li><li>广域网汇聚</li><li>VPN接入</li><li>Internet接入</li><li>网站/电子商务</li><li>专线/分组交换接入</li><li>拨号接入 </li></ol></li><li>模块化网络架构的益处：<ol><li>确定网络，边界清晰，流量类型清楚</li><li>便于规划，增加伸缩性</li><li>模块化方便增删，降低复杂性</li><li>设计的完整性</li></ol></li><li>IToIP是基于SOA思想的解决方案，具有标准、融合、开放、智能的特性</li><li>H3C模块化企业网架构实现了网络规划、部署、管理的灵活性、伸缩性、可控性、便于构建复杂的大规模网络</li></ul><h2 id="园区网的网络模型发展历程"><a href="#园区网的网络模型发展历程" class="headerlink" title="园区网的网络模型发展历程"></a>园区网的网络模型发展历程</h2><ul><li>小型局域网：<ol><li>网络主机数量少，但都在同一个广播域内</li><li>甚至还存在多个主机在同一冲突域内</li></ol></li><li>中型局域网：<ol><li>虚拟局域网应用：网络主机数量增多，应用虚拟局域网技术隔离广播域</li><li>三层交换应用：应用三层交换技术解决路由转发的性能瓶颈</li></ol></li><li>大型局域网：大型局域网实际上就是多个中型或小型局域网的互连组合</li><li>大型局域网的功能层：核心层、汇聚层、接入层<ol><li>核心层的结构：</li></ol><ul><li>双机主备互连</li><li>多机环网互连 </li><li>多机全网状互连</li></ul><ol start="2"><li>汇聚层的结构：</li></ol><ul><li>双上行</li><li>路由备份</li></ul><ol start="3"><li>接入层的结构：</li></ol><ul><li>单上行</li><li>双上行</li><li>交叉互连 </li></ul></li><li>局域网应用<ol><li>典型两级网络结构：</li></ol><ul><li>双核心</li><li>边缘双上行接入 </li></ul><ol start="2"><li>典型三级网络结构：</li></ol><ul><li>核心汇聚跌幅备份</li><li>双核心</li><li>汇聚、接入双上行</li></ul></li></ul><h2 id="典型园区网的业务部署"><a href="#典型园区网的业务部署" class="headerlink" title="典型园区网的业务部署"></a>典型园区网的业务部署</h2><ul><li>构建高可靠可冗余网络<ol><li>网络的单点故障：星形拓扑和树形拓扑的单点故障可能带来全网性故障</li><li>网状网络：<ul><li>多冗余链路避免单点故障带来的高风险</li><li>STP阻塞冗余链路避免环路的形成</li></ul></li><li>以太环网：<ul><li>多核心环形链路提供核心链路的备份</li><li>接入双上行避免单点故障带来的风险</li><li>RRPP实现高效倒换</li></ul></li><li>双归属网络：<ul><li>双核心双上行提供冗余备份</li><li>Smart Link阻断冗余链路，实现链路的毫秒级切换</li></ul></li><li>链路聚合：<br> 链路聚合提高物理带宽，且实现负载分担和链路备份</li><li>三层路由网络：<ul><li>路由协议 实现最短路径转发，冗余链路提供备份选择</li><li>ECMP提供负载分担</li></ul></li><li>网关冗余备份：<ul><li>边缘网关运行VRRP提供网关的主备备份</li><li>多备份组+MSTP提供负载分担</li></ul></li><li>IRF设备级备份：<ul><li>IRF堆叠实现设备级的N+1冗余备份</li><li>分布式链路聚合实现链路负载分担</li></ul></li></ol></li><li>组播业务的快速开展<ol><li>路由网络中的组播部署：<ul><li>组播三层转发表的建立-组播路由协议 </li><li>网关和主机之间成员关系维护-IGMP</li></ul></li><li>二层网络中的组播部署<ul><li>查询器辅助二层交换机维护成员关系</li><li>IGMP Snooping完成组播表维护</li><li>MVR完成组播复制</li></ul></li></ol></li><li>语音业务的部署<ol><li>网络中的语音业务部署<ul><li>Voice VLAN自动语音识别</li><li>QoS保证</li><li>PoE简化供电</li></ul></li></ol></li><li>网络安全的部署<ol><li>IP网络安全部署：<ul><li>接入身份认证</li><li>流量控制</li></ul></li><li>综合防御-EAD<ul><li>EAD+交换机联运检查隔离用户</li></ul></li></ol></li><li>网络管理和维护应用  </li></ul>]]></content>
    
    <summary type="html">
    
      H3CSE
    
    </summary>
    
    
      <category term="H3CSE" scheme="https://www.ling218.cn/categories/H3CSE/"/>
    
    
      <category term="SE" scheme="https://www.ling218.cn/tags/SE/"/>
    
  </entry>
  
  <entry>
    <title>H3CNE-V7-总结</title>
    <link href="https://www.ling218.cn/archives/9887b9ce.html"/>
    <id>https://www.ling218.cn/archives/9887b9ce.html</id>
    <published>2020-10-10T12:01:37.456Z</published>
    <updated>2020-10-10T12:58:24.696Z</updated>
    
    <content type="html"><![CDATA[<h2 id="计算机网络概述"><a href="#计算机网络概述" class="headerlink" title="计算机网络概述"></a>计算机网络概述</h2><ul><li>计算机网络的定义：一组自治计算机互连的集合</li><li>计算机网络的基本功能：资源共享、分布式处理与负载均衡、综合信息服务</li><li>计算机网络的演进：主机互连、局域网、互联网、因特网</li><li>计算机网络的覆盖范围：局域网、城域网、广域网</li><li>计算机网络的拓扑结构：总线型、星型、树型、环型、全网状、部分网状</li><li>计算机网络的数据交换技术：电路交换、报文交换、分组交换</li><li>衡量计算机网络的性能指标：带宽、延迟、吞吐量</li><li>网络标准化组织：ISO、IEEE、EIA、ANSI、ITU、IETF</li></ul><h2 id="OSI参考模型与TCP-IP模型"><a href="#OSI参考模型与TCP-IP模型" class="headerlink" title="OSI参考模型与TCP/IP模型"></a>OSI参考模型与TCP/IP模型</h2><ul><li><p>OSI参考模型定义了网络中设备所遵守的层次结构</p></li><li><p>分层结构的优点：</p><ol><li>开放的标准化接口</li><li>多厂商兼容性</li><li>易于理解、学习和更新协议标准</li><li>实现模块化工程，降低了开发实现的复杂度</li><li>便于故障排除</li></ol></li><li><p>OSI参考模型层次结构：</p><table><thead><tr><th align="center">层次</th><th align="center">传输</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">应用层</td><td align="center">APDU</td><td align="center">提供应用程序间通信</td></tr><tr><td align="center">表示层</td><td align="center">PPDU</td><td align="center">处理数据格式、数据加密等</td></tr><tr><td align="center">会话层</td><td align="center">SPDU</td><td align="center">建立、维护和管理会话</td></tr><tr><td align="center">传输层</td><td align="center">段</td><td align="center">建立主机端到端连接</td></tr><tr><td align="center">网络层</td><td align="center">包</td><td align="center">寻址和跌幅选择</td></tr><tr><td align="center">数据链路层</td><td align="center">帧</td><td align="center">提供介质访问、链路管理等</td></tr><tr><td align="center">物理层</td><td align="center">比特</td><td align="center">比特流传输</td></tr></tbody></table></li><li><p>TCP/IP模型层次结构：</p><table><thead><tr><th align="center">层次</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">应用层</td><td align="center">负责处理特定的应用程序细节、远程访问、资源共享</td></tr><tr><td align="center">传输层</td><td align="center">负责提供端到端通信、数据完整性校验、差错重传、数据重新排序</td></tr><tr><td align="center">网络层</td><td align="center">负责将数据包送达正确的目的、数据包的路由、路由的维护</td></tr><tr><td align="center">网络接口层</td><td align="center">负责处理与传输介质相关的细节、物理线路和接口、链路层通信</td></tr></tbody></table></li></ul><h2 id="局域网基本原理"><a href="#局域网基本原理" class="headerlink" title="局域网基本原理"></a>局域网基本原理</h2><ul><li>主要局域网技术：以太网、令牌环网、FDDI环网、无线局域网</li><li>以太网集线器<ol><li>集线器与主机构成物理星型拓扑</li><li>集线器内部采用总线结构，任意时间只有一台主机能占用总线</li></ol></li><li>MAC地址为48位二进制数，常用12位16进制数表示</li><li>以太网流量控制：<ol><li>背压式流控</li><li>PAUSE流控</li></ol></li></ul><p>～～～未完成！</p>]]></content>
    
    <summary type="html">
    
      H3CNE
    
    </summary>
    
    
      <category term="H3CNE" scheme="https://www.ling218.cn/categories/H3CNE/"/>
    
    
      <category term="NE" scheme="https://www.ling218.cn/tags/NE/"/>
    
  </entry>
  
  <entry>
    <title>项目：创建自定义Kali Linux ISO</title>
    <link href="https://www.ling218.cn/archives/8feaf38e.html"/>
    <id>https://www.ling218.cn/archives/8feaf38e.html</id>
    <published>2020-05-14T01:13:00.889Z</published>
    <updated>2020-10-10T04:05:51.776Z</updated>
    
    <content type="html"><![CDATA[<p>该存储库将允许您构建自定义的Kali ISO。主要好处是可以将其用作<a href="https://docs.kali.org/downloading/kali-linux-live-usb-install" target="_blank" rel="external nofollow noopener noreferrer">可启动USB驱动器</a>。</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>理想情况下，您应该<strong>在现有的Kali环境中</strong>构建自定义的Kali ISO <strong>。</strong>建议使用<a href="https://www.kali.org/downloads/" target="_blank" rel="external nofollow noopener noreferrer">轻量级</a>或虚拟化（<a href="https://www.offensive-security.com/kali-linux-vm-vmware-virtualbox-hyperv-image-download/" target="_blank" rel="external nofollow noopener noreferrer">VMware / VirtualBox</a>）映像。</p><p>作为<code>root</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install curl git live-build cdebootstrap</span><br></pre></td></tr></table></figure><h2 id="自定义"><a href="#自定义" class="headerlink" title="自定义"></a>自定义</h2><p>我在<a href="https://github.com/prateepb/kali-live-build/blob/master/kali-config/variant-custom" target="_blank" rel="external nofollow noopener noreferrer">kali-config / variant-custom</a>目录下使用了一个自定义变量。这包括：</p><ul><li><a href="https://github.com/prateepb/kali-live-build/blob/master/kali-config/variant-custom/package-lists/kali.list.chroot" target="_blank" rel="external nofollow noopener noreferrer">来自默认变体</a>（<code>kali-config/variant-custom/package-lists/kali.list.chroot</code>）的<a href="https://github.com/prateepb/kali-live-build/blob/master/kali-config/variant-custom/package-lists/kali.list.chroot" target="_blank" rel="external nofollow noopener noreferrer">所有软件包</a></li><li><a href="https://github.com/prateepb/kali-live-build/blob/master/kali-config/variant-custom/package-lists/custom.list.chroot" target="_blank" rel="external nofollow noopener noreferrer">根据我的喜好附加包</a>（<code>kali-config/variant-custom/package-lists/custom.list.chroot</code>）</li><li><a href="https://github.com/prateepb/kali-live-build/blob/master/kali-config/variant-custom/hooks/live/customise.chroot" target="_blank" rel="external nofollow noopener noreferrer">自定义脚本</a>（<code>kali-config/variant-custom/hooks/live/customise.chroot</code>）<ul><li>克隆<a href="https://github.com/prateepb/dotfiles" target="_blank" rel="external nofollow noopener noreferrer">我的个人点文件</a></li><li><a href="https://unix.stackexchange.com/questions/387843/how-can-i-resize-the-applications-menu-item-in-gnome" target="_blank" rel="external nofollow noopener noreferrer">调整gnome菜单的大小</a></li></ul></li></ul><p>我还在以下位置自定义了时区，键盘布局和语言环境：</p><ul><li><a href="https://github.com/prateepb/kali-live-build/blob/master/auto/config" target="_blank" rel="external nofollow noopener noreferrer"><code>auto/config</code></a></li><li><a href="https://github.com/prateepb/kali-live-build/blob/master/kali-config/variant-custom/hooks/live/persistence-menu.binary" target="_blank" rel="external nofollow noopener noreferrer"><code>kali-config/variant-custom/hooks/live/persistence-menu.binary</code></a></li></ul><h2 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h2><p>要构建和使用自定义变体：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd kali-live-build</span><br><span class="line">.&#x2F;build.sh --verbose --variant自定义</span><br></pre></td></tr></table></figure><p>完成后，可以在以下位置找到生成的ISO映像： <code>images/kali-linux-custom-rolling-amd64.iso</code></p><h2 id="代理构建"><a href="#代理构建" class="headerlink" title="代理构建"></a>代理构建</h2><p>如果您可能要运行多个构建，那么通过缓存代理（例如<a href="http://www.squid-cache.org/" target="_blank" rel="external nofollow noopener noreferrer">Squid）</a>路由所有内容很有用。这将显着加快后续运行。</p><p>例子<a href="https://github.com/prateepb/kali-live-build/blob/master/squid.conf" target="_blank" rel="external nofollow noopener noreferrer">squid.conf</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd kali-live-build</span><br><span class="line">apt-get install squid</span><br><span class="line">cp squid.conf &#x2F;etc&#x2F;squid&#x2F;squid.conf</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;squid开始</span><br></pre></td></tr></table></figure><p>现在，您可以<code>build.sh</code>使用<code>--apt-http-proxy</code>参数运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">出口http_proxy &#x3D; http：&#x2F;&#x2F; localhost：3128 &#x2F;</span><br><span class="line">.&#x2F;build.sh --verbose --variant自定义-\</span><br><span class="line">--apt-http-proxy &#x3D; $ &#123;http_proxy&#125;</span><br></pre></td></tr></table></figure><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><ul><li><code>https://github.com/prateepb/kali-live-build</code></li></ul>]]></content>
    
    <summary type="html">
    
      在现有的Kali环境中构建自定义的Kali ISO
    
    </summary>
    
    
      <category term="Live-build" scheme="https://www.ling218.cn/categories/Live-build/"/>
    
    
      <category term="kali" scheme="https://www.ling218.cn/tags/kali/"/>
    
  </entry>
  
  <entry>
    <title>项目：bash 脚本轻松生成实时 Linux ISO 镜像</title>
    <link href="https://www.ling218.cn/archives/b73d248a.html"/>
    <id>https://www.ling218.cn/archives/b73d248a.html</id>
    <published>2020-05-14T01:13:00.853Z</published>
    <updated>2020-10-10T04:06:16.920Z</updated>
    
    <content type="html"><![CDATA[<p>一个脚本可以轻松生成功能齐全的实时Linux ISO映像。这是基于<a href="http://github.com/ivandavidov/minimal" target="_blank" rel="external nofollow noopener noreferrer">Minimal Linux Live</a>的第一个发布版本，并在下一版本中进行了一些改进。已删除所有空行和注释，并且已修改脚本以减少总长度。</p><p>下面的脚本使用<strong>Linux内核4.19.12</strong>，<strong>BusyBox 1.29.3</strong>和<strong>Syslinux 6.03</strong>。源包将自动下载和编译。如果您使用的是Ubuntu或Linux Mint，则应该能够通过执行以下命令来解决所有构建依赖项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># sudo apt install wget make gawk gcc bc bison flex xorriso libelf-dev libssl-dev</span><br></pre></td></tr></table></figure><p>之后，只需运行以下脚本。它不需要 <strong>root</strong> 权限。最后，生成<strong>minimal_linux_live.iso</strong>文件，在执行脚本的同一目录中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;kernel.org&#x2F;linux&#x2F;kernel&#x2F;v4.x&#x2F;linux-4.19.12.tar.xz</span><br><span class="line">wget http:&#x2F;&#x2F;busybox.net&#x2F;downloads&#x2F;busybox-1.29.3.tar.bz2</span><br><span class="line">wget http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;kernel.org&#x2F;linux&#x2F;utils&#x2F;boot&#x2F;syslinux&#x2F;syslinux-6.03.tar.xz</span><br><span class="line">mkdir isoimage</span><br><span class="line">tar -xvf linux-4.19.12.tar.xz</span><br><span class="line">tar -xvf busybox-1.29.3.tar.bz2</span><br><span class="line">tar -xvf syslinux-6.03.tar.xz</span><br><span class="line">cd busybox-1.29.3</span><br><span class="line">make distclean defconfig</span><br><span class="line">sed -i &quot;s|.*CONFIG_STATIC.*|CONFIG_STATIC&#x3D;y|&quot; .config</span><br><span class="line">make busybox install</span><br><span class="line">cd _install</span><br><span class="line">rm -f linuxrc</span><br><span class="line">mkdir dev proc sys</span><br><span class="line">echo &#39;#!&#x2F;bin&#x2F;sh&#39; &gt; init</span><br><span class="line">echo &#39;dmesg -n 1&#39; &gt;&gt; init</span><br><span class="line">echo &#39;mount -t devtmpfs none &#x2F;dev&#39; &gt;&gt; init</span><br><span class="line">echo &#39;mount -t proc none &#x2F;proc&#39; &gt;&gt; init</span><br><span class="line">echo &#39;mount -t sysfs none &#x2F;sys&#39; &gt;&gt; init</span><br><span class="line">echo &#39;setsid cttyhack &#x2F;bin&#x2F;sh&#39; &gt;&gt; init</span><br><span class="line">chmod +x init</span><br><span class="line">find . | cpio -R root:root -H newc -o | gzip &gt; ..&#x2F;..&#x2F;isoimage&#x2F;rootfs.gz</span><br><span class="line">cd ..&#x2F;..&#x2F;linux-4.19.12</span><br><span class="line">make mrproper defconfig bzImage</span><br><span class="line">cp arch&#x2F;x86&#x2F;boot&#x2F;bzImage ..&#x2F;isoimage&#x2F;kernel.gz</span><br><span class="line">cd ..&#x2F;isoimage</span><br><span class="line">cp ..&#x2F;syslinux-6.03&#x2F;bios&#x2F;core&#x2F;isolinux.bin .</span><br><span class="line">cp ..&#x2F;syslinux-6.03&#x2F;bios&#x2F;com32&#x2F;elflink&#x2F;ldlinux&#x2F;ldlinux.c32 .</span><br><span class="line">echo &#39;default kernel.gz initrd&#x3D;rootfs.gz&#39; &gt; .&#x2F;isolinux.cfg</span><br><span class="line">xorriso \</span><br><span class="line">  -as mkisofs \</span><br><span class="line">  -o ..&#x2F;minimal_linux_live.iso \</span><br><span class="line">  -b isolinux.bin \</span><br><span class="line">  -c boot.cat \</span><br><span class="line">  -no-emul-boot \</span><br><span class="line">  -boot-load-size 4 \</span><br><span class="line">  -boot-info-table \</span><br><span class="line">  .&#x2F;</span><br><span class="line">cd ..</span><br></pre></td></tr></table></figure><p>请注意，此脚本生成非常小的实时Linux操作系统，仅支持shell，不支持网络。网络功能已在<a href="http://github.com/ivandavidov/minimal" target="_blank" rel="external nofollow noopener noreferrer">Minimal Linux Live</a>项目中正确实现，该项目具有广泛的文档记录和更丰富的功能，但仍然可以生成非常小的实时Linux ISO映像。</p>]]></content>
    
    <summary type="html">
    
      一个脚本可以轻松生成功能齐全的实时Linux ISO映像
    
    </summary>
    
    
      <category term="Live-build" scheme="https://www.ling218.cn/categories/Live-build/"/>
    
    
      <category term="shell" scheme="https://www.ling218.cn/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>防止远程 Linux 主机自动断开 SSH 连接</title>
    <link href="https://www.ling218.cn/archives/e41226c8.html"/>
    <id>https://www.ling218.cn/archives/e41226c8.html</id>
    <published>2020-05-14T01:13:00.829Z</published>
    <updated>2020-10-09T16:43:10.492Z</updated>
    
    <content type="html"><![CDATA[<p>在使用ssh连接远程Linux主机时，如果长时间不操作，ssh会自动断开，只能重新登陆。</p><blockquote><p>由于ssh的安全机制，如果10分钟没有任何操作，本次SSH会话会自动关闭。</p></blockquote><h2 id="怎么防止远程Linux自动断开SSH连接"><a href="#怎么防止远程Linux自动断开SSH连接" class="headerlink" title="怎么防止远程Linux自动断开SSH连接"></a>怎么防止远程Linux自动断开SSH连接</h2><p>下面的操作是在本地ssh客户端上，不是远程主机。</p><p>编辑SSH配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~&#x2F;.ssh&#x2F;config   #当前登录用户生效</span><br></pre></td></tr></table></figure><p>添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Host *</span><br><span class="line">  ServerAliverInterval 30</span><br></pre></td></tr></table></figure><p>*号代表所有主机，你可以指定某个主机，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Host server1</span><br><span class="line">  ServerAliverInterval 30</span><br></pre></td></tr></table></figure><p>ServerAliveInterval 30表示ssh客户端每隔30秒给远程主机发送一个no-op包，no-op是无任何操作的意思，这样远程主机就不会关闭这个SSH会话。</p><p>为了使所有用户生效，你可以在/etc/ssh/ssh_config全局配置文件添加如下一行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ServerAliveInterval 30</span><br></pre></td></tr></table></figure><p>还可以在连接时使用选项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -o ServerAliveInterval&#x3D;30 user@remote-ssh-server-ip</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      ssh终端连接防自动断开
    
    </summary>
    
    
      <category term="Debian" scheme="https://www.ling218.cn/categories/Debian/"/>
    
    
      <category term="ssh" scheme="https://www.ling218.cn/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>重新编译 Kali Linux 内核</title>
    <link href="https://www.ling218.cn/archives/a9289db8.html"/>
    <id>https://www.ling218.cn/archives/a9289db8.html</id>
    <published>2020-05-14T01:13:00.805Z</published>
    <updated>2020-10-10T04:08:09.600Z</updated>
    
    <content type="html"><![CDATA[<p>Kali Linux的可定制性一直扩展到Linux内核。</p><p>根据您的要求，您可能希望添加库存Kali Linux内核中未包含的驱动程序，补丁或内核功能。以下指南将介绍如何快速修改和重新编译Kali Linux内核以满足您的需求。请注意，默认情况下，Kali Linux内核中已经存在全局无线注入补丁。</p><h2 id="安装构建依赖项"><a href="#安装构建依赖项" class="headerlink" title="安装构建依赖项"></a>安装构建依赖项</h2><p>首先安装所有用于重新编译内核的构建依赖项。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install build-essential libncurses5-dev fakeroot unxz</span><br></pre></td></tr></table></figure><h2 id="下载-Kali-Linux-内核源代码"><a href="#下载-Kali-Linux-内核源代码" class="headerlink" title="下载 Kali Linux 内核源代码"></a>下载 Kali Linux 内核源代码</h2><p>本节的其余部分重点介绍4.9版本的Linux内核，但是示例当然可以根据所需的特定内核版本进行调整。我们假设已安装linux-source-4.9二进制软件包。请注意，我们安装了包含上游源代码的二进制软件包，但没有检索名为linux的Kali源代码软件包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">apt install linux-source-4.9</span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree</span><br><span class="line">Reading state information... Done</span><br><span class="line">The following additional packages will be installed:</span><br><span class="line">  bc libreadline7</span><br><span class="line">Suggested packages:</span><br><span class="line">  libncurses-dev | ncurses-dev libqt4-dev</span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">  bc libreadline7 linux-source-4.9</span><br><span class="line">0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.</span><br><span class="line">Need to get 95.4 MB of archives.</span><br><span class="line">After this operation, 95.8 MB of additional disk space will be used.</span><br><span class="line">Do you want to continue? [Y&#x2F;n] y</span><br><span class="line">...SNIP...</span><br><span class="line">ls &#x2F;usr&#x2F;src</span><br><span class="line">linux-config-4.9  linux-patch-4.9-rt.patch.xz  linux-source-4.9.tar.xz</span><br></pre></td></tr></table></figure><p>请注意，该软件包包含<em>/usr/src/linux-source-4.9.tar.xz</em>，这是内核源代码的压缩存档。您必须将这些文件解压缩到新目录中（而不是直接在/ usr / src /下，因为不需要特殊权限来编译Linux内核）。相反，<em>〜/ kernel /</em>更合适。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~&#x2F;kernel; cd ~&#x2F;kernel</span><br><span class="line">tar -xaf &#x2F;usr&#x2F;src&#x2F;linux-source-4.9.tar.xz</span><br></pre></td></tr></table></figure><h2 id="配置内核"><a href="#配置内核" class="headerlink" title="配置内核"></a>配置内核</h2><p>重新编译内核的最新版本（可能带有附加补丁程序）时，配置很可能会尽可能与Kali提出的配置保持接近。在这种情况下，将<em>/ boot / config-version</em>文件（版本是当前使用的内核的版本，可以通过<strong>uname -r</strong>命令找到）复制到<em>本地</em>，而不是从头开始重新配置所有内容<em>。</em>包含内核源代码的目录中的<em>配置</em>文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp &#x2F;boot&#x2F;config-4.9.0-kali1-amd64 ~&#x2F;kernel&#x2F;linux-source-4.9&#x2F;.config</span><br></pre></td></tr></table></figure><p>如果需要进行更改，或者决定从头开始重新配置所有内容，则必须花时间配置内核。这可以通过调用<strong>make menuconfig</strong>命令来完成。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make menuconfig</span><br></pre></td></tr></table></figure><p>使用<strong>menuconfig</strong>设置内核构建的详细信息不在本指南的范围之内。<a href="https://www.linux.org/threads/the-linux-kernel-configuring-the-kernel-part-1.8745/" target="_blank" rel="external nofollow noopener noreferrer">有关</a>在Linux.org <a href="https://www.linux.org/threads/the-linux-kernel-configuring-the-kernel-part-1.8745/" target="_blank" rel="external nofollow noopener noreferrer">上配置内核构建</a>的<a href="https://www.linux.org/threads/the-linux-kernel-configuring-the-kernel-part-1.8745/" target="_blank" rel="external nofollow noopener noreferrer">详细教程</a>。</p><h2 id="建立内核"><a href="#建立内核" class="headerlink" title="建立内核"></a>建立内核</h2><p>准备好内核配置后，一个简单的<strong>make deb-pkg</strong>将生成多达5个Debian软件包：包含内核映像和相关模块的<em>linux-image- *</em>版本<strong>* <em>linux-headers- **version</em></strong>，其中包含构建所需的头文件。外部模块<em>linux-firmware-image- *</em>version<strong><em>，其中包含一些驱动程序所需的固件文件（当从Debian或Kali提供的内核源进行构建时，可能会缺少此软件包），</em>linux-image- **version</strong> -dbg<em>，其中包含内核映像及其模块和</em>linux-libc-dev*的调试符号，其中包含与某些用户空间库（例如GNU glibc）相关的标头。Linux内核映像是一个大型构建，需要花费一些时间才能完成。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">make clean</span><br><span class="line">make deb-pkg LOCALVERSION&#x3D;-custom KDEB_PKGVERSION&#x3D;$(make kernelversion)-1</span><br><span class="line">...SNIP...</span><br><span class="line">ls ..&#x2F;*.deb</span><br><span class="line">..&#x2F;linux-headers-4.9.0-kali1-custom_4.9.2-1_amd64.deb</span><br><span class="line">..&#x2F;linux-image-4.9.0-kali1-custom_4.9.2-1_amd64.deb</span><br><span class="line">..&#x2F;linux-image-4.9.0-kali1-custom-dbg_4.9.2-1_amd64.deb</span><br><span class="line">..&#x2F;linux-libc-dev_4.9.2-1_amd64.deb</span><br></pre></td></tr></table></figure><h2 id="安装修改后的内核"><a href="#安装修改后的内核" class="headerlink" title="安装修改后的内核"></a>安装修改后的内核</h2><p>构建成功完成后，您可以继续安装新的自定义内核并重新引导系统。请注意，特定的内核版本号会有所不同-在我们的示例中，是在Kali 2016.2系统上完成的，为4.9.2。根据要构建的当前内核版本，您将需要相应地调整命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i ..&#x2F;linux-image-4.9.0-kali1-custom_4.9.2-1_amd64.deb</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p>系统重新引导后，新内核应已运行。如果出现问题并且内核无法成功引导，您仍然可以使用GrUB菜单从原始的原始Kali内核引导并解决问题。</p>]]></content>
    
    <summary type="html">
    
      您可能希望添加库存Kali Linux内核中未包含的驱动程序，补丁或内核功能
    
    </summary>
    
    
      <category term="Kali" scheme="https://www.ling218.cn/categories/Kali/"/>
    
    
      <category term="kernl" scheme="https://www.ling218.cn/tags/kernl/"/>
    
  </entry>
  
  <entry>
    <title>适用于Linux的Windows子系统的中文化</title>
    <link href="https://www.ling218.cn/archives/d02e6c08.html"/>
    <id>https://www.ling218.cn/archives/d02e6c08.html</id>
    <published>2020-05-14T01:13:00.781Z</published>
    <updated>2020-10-10T04:05:18.640Z</updated>
    
    <content type="html"><![CDATA[<p>中文化和用户环境定制</p><h2 id="中文化操作"><a href="#中文化操作" class="headerlink" title="中文化操作"></a>中文化操作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 更新Linux系统</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -y upgrade</span><br><span class="line">sudo apt-get -y dist-upgrade</span><br><span class="line"># 安装软件包</span><br><span class="line">sudo apt-get -y install task-chinese-t openssh-server openssh-client curl git </span><br><span class="line"># 中文环境设置</span><br><span class="line">sudo dpkg-reconfigure locales </span><br><span class="line">sudo update-locale --reset</span><br><span class="line">sudo update-locale LANG&#x3D;zh_CN.UTF-8 </span><br><span class="line"># 为Windows共享文件夹创建挂载点</span><br><span class="line">sudo mkdir &#x2F;mnt&#x2F;share</span><br></pre></td></tr></table></figure><h2 id="用户环境设置"><a href="#用户环境设置" class="headerlink" title="用户环境设置"></a>用户环境设置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 用户环境设置</span><br><span class="line">echo -e &quot;set number\nset tabstop&#x3D;4\nset list\nset listchars&#x3D;tab:&gt;_&quot; &gt; ~&#x2F;.vimrc</span><br><span class="line">echo -e &quot;location\nprogress-bar\nremote-time\nshow-error&quot; &gt; ~&#x2F;.curlrc</span><br><span class="line"># 启动SSH</span><br><span class="line">sudo &#x2F;etc&#x2F;init.d&#x2F;ssh start</span><br><span class="line"># 挂载Windows共享文件夹</span><br><span class="line">sudo mount -t drvfs &#39;\\server\share&#39; &#x2F;mnt&#x2F;share</span><br><span class="line"># 命令自动补全</span><br><span class="line">sudo apt-get install bash-completion</span><br><span class="line">cat &lt;&lt;EOF &gt; &#x2F;etc&#x2F;profile</span><br><span class="line">if [ -f &#x2F;etc&#x2F;bash_completion ]; then</span><br><span class="line">. &#x2F;etc&#x2F;bash_completion</span><br><span class="line">fi</span><br><span class="line">EOF</span><br><span class="line">## 使其生效</span><br><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><h2 id="我的项目地址"><a href="#我的项目地址" class="headerlink" title="我的项目地址"></a>我的项目地址</h2><ul><li><a href="https://gitlab.com/ling218" target="_blank" rel="external nofollow noopener noreferrer">https://gitlab.com/ling218</a></li></ul>]]></content>
    
    <summary type="html">
    
      实操记录
    
    </summary>
    
    
      <category term="Debian" scheme="https://www.ling218.cn/categories/Debian/"/>
    
    
      <category term="shell" scheme="https://www.ling218.cn/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>让 Google 搜索引擎重新抓取我的网站</title>
    <link href="https://www.ling218.cn/archives/7a1bc012.html"/>
    <id>https://www.ling218.cn/archives/7a1bc012.html</id>
    <published>2020-05-14T01:13:00.733Z</published>
    <updated>2020-10-10T04:29:47.188Z</updated>
    
    <content type="html"><![CDATA[<h2 id="提交站点地图-（很多个网址）"><a href="#提交站点地图-（很多个网址）" class="headerlink" title="提交站点地图 （很多个网址）"></a>提交站点地图 （很多个网址）</h2><p>站点地图是 Google 发现您网站上网址的重要方法。</p><p>如果自 Google 上次抓取以来您并未更改站点地图，那么重新提交该站点地图不会获得任何其他好处。如果站点地图中有更新过的网页，请将其标记为 <code>&lt;lastmod&gt;</code>。</p><h4 id="以下方法可以提交站点地图："><a href="#以下方法可以提交站点地图：" class="headerlink" title="以下方法可以提交站点地图："></a>以下方法可以提交站点地图：</h4><ul><li>使用站点地图报告提交站点地图。</li><li>使用 ping 工具。在浏览器或命令行中向此地址发送 GET 请求，并指定站点地图的完整网址。请确保 Sitemap 文件可供访问：<br><a href="http://www.google.com/ping?sitemap=" target="_blank" rel="external nofollow noopener noreferrer">http://www.google.com/ping?sitemap=</a><full_url_of_sitemap><br>示例：<br><a href="http://www.google.com/ping?sitemap=https://www.ling218.cn/sitemap.xml" target="_blank" rel="external nofollow noopener noreferrer">http://www.google.com/ping?sitemap=https://www.ling218.cn/sitemap.xml</a></full_url_of_sitemap></li><li>将下面这行内容插入到 robots.txt 文件中的任意位置，以指定指向您站点地图的路径。我们会在下次抓取您的网站时找到该站点地图：<br>  Sitemap: <a href="http://example.com/my_sitemap.xml" target="_blank" rel="external nofollow noopener noreferrer">http://example.com/my_sitemap.xml</a></li></ul>]]></content>
    
    <summary type="html">
    
      让Google搜索引擎抓取我们的网站
    
    </summary>
    
    
      <category term="Hexo" scheme="https://www.ling218.cn/categories/Hexo/"/>
    
    
      <category term="google" scheme="https://www.ling218.cn/tags/google/"/>
    
  </entry>
  
  <entry>
    <title>Kali Linux 系统下解决 root 权限无法运行 Google Chrome</title>
    <link href="https://www.ling218.cn/archives/b691c55.html"/>
    <id>https://www.ling218.cn/archives/b691c55.html</id>
    <published>2020-05-14T01:13:00.701Z</published>
    <updated>2020-10-10T03:53:49.872Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>修改<code>/usr/bin/google-chrome-stable</code>文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec -a &quot;$0&quot; &quot;$HERE&#x2F;chrome&quot; &quot;$@&quot; --no-sandbox --user-data-dir</span><br></pre></td></tr></table></figure></li><li><p>Chromium 也而是类似，修改<code>/usr/share/applications/chromium.desktop</code>文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Exec&#x3D;&#x2F;usr&#x2F;bin&#x2F;chromium %U --no-sandbox --user-data-dir</span><br></pre></td></tr></table></figure></li><li><p>在系统语言为英文的情况下，设置启动 chrome 时显示为中文<br>修改<code>/usr/bin/google-chrome-stable</code>文件，添加一行即可:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export LANGUAGE&#x3D;zh-cn &#x2F;opt&#x2F;google&#x2F;chrome&#x2F;google-chrome %U</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      root 运行 Google Chrome
    
    </summary>
    
    
      <category term="Kali" scheme="https://www.ling218.cn/categories/Kali/"/>
    
    
      <category term="Google-Chrome" scheme="https://www.ling218.cn/tags/Google-Chrome/"/>
    
  </entry>
  
  <entry>
    <title>解决 Debian 终端命令行无法自动补全</title>
    <link href="https://www.ling218.cn/archives/7d602a45.html"/>
    <id>https://www.ling218.cn/archives/7d602a45.html</id>
    <published>2020-05-14T01:13:00.677Z</published>
    <updated>2020-10-10T04:00:17.328Z</updated>
    
    <content type="html"><![CDATA[<p>1、安装命令补全：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># apt-get install bash-completion</span><br></pre></td></tr></table></figure><p>2、在 <code>/etc/profile</code> 添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if [ -f &#x2F;etc&#x2F;bash_completion ]; then</span><br><span class="line">. &#x2F;etc&#x2F;bash_completion</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>3、刷新 <code>/etc/profile</code> 配置文件，使其生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      安装了debian,在终端输入一半命令行再按 &lt;TAB&gt;后，却没有实现自动补全功能。几经搜索，在一篇老外的无政府主义里得到了解决方案
    
    </summary>
    
    
      <category term="Debian" scheme="https://www.ling218.cn/categories/Debian/"/>
    
    
      <category term="shell" scheme="https://www.ling218.cn/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>制作自己的 Debian livecd</title>
    <link href="https://www.ling218.cn/archives/fa204dda.html"/>
    <id>https://www.ling218.cn/archives/fa204dda.html</id>
    <published>2020-05-14T01:13:00.641Z</published>
    <updated>2020-10-10T04:08:41.784Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装需要的软件包"><a href="#安装需要的软件包" class="headerlink" title="安装需要的软件包"></a>安装需要的软件包</h2><p><code>注意：</code> <code>#</code>号表示以 <code>root</code> 身份执行，下同。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># apt-get install \</span><br><span class="line">isolinux \</span><br><span class="line">syslinux \</span><br><span class="line">xorriso \</span><br><span class="line">debootstrap \</span><br><span class="line">squashfs-tools</span><br></pre></td></tr></table></figure><h2 id="创建工作目录"><a href="#创建工作目录" class="headerlink" title="创建工作目录"></a>创建工作目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># mkdir ～&#x2F;livecd</span><br></pre></td></tr></table></figure><p>##下载Debian安装镜像，取得必要的引导及配置文件<br>Debian安装镜像可以从 <a href="http://mirrors.ustc.edu.cn/debian-cd/current/amd64/iso-cd/" target="_blank" rel="external nofollow noopener noreferrer">这儿</a> 下载，得到文件 <code>debian-8.7.1-amd64-CD-1.iso</code> 。然后执行命令，将该文件挂载到系统中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># mount debian-8.7.1-amd64-CD-1.iso &#x2F;mnt</span><br></pre></td></tr></table></figure><p>然后拷贝其中的 <code>boot</code> 目录和 <code>isolinux</code> 目录到工作目录 <code>~/livecd</code> 中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cp -rv &#x2F;mnt&#x2F;boot ~&#x2F;livecd</span><br><span class="line"># cp -rv &#x2F;mnt&#x2F;isolinux ~&#x2F;livecd</span><br></pre></td></tr></table></figure><p>然后修要分别修改配置文件 <code>~/livecd/boot/grub/grub.cfg</code> 和 <code>isolinux/isolinux.cfg</code> 内容如下：</p><h3 id="grub-cfg"><a href="#grub-cfg" class="headerlink" title="grub.cfg"></a>grub.cfg</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">if loadfont $prefix&#x2F;font.pf2 ; then</span><br><span class="line">  set gfxmode&#x3D;800x600</span><br><span class="line">  insmod efi_gop</span><br><span class="line">  insmod efi_uga</span><br><span class="line">  insmod video_bochs</span><br><span class="line">  insmod video_cirrus</span><br><span class="line">  insmod gfxterm</span><br><span class="line">  insmod png</span><br><span class="line">  terminal_output gfxterm</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if background_image &#x2F;isolinux&#x2F;splash.png; then</span><br><span class="line">  set color_normal&#x3D;light-gray&#x2F;black</span><br><span class="line">  set color_highlight&#x3D;white&#x2F;black</span><br><span class="line">else</span><br><span class="line">  set menu_color_normal&#x3D;cyan&#x2F;blue</span><br><span class="line">  set menu_color_highlight&#x3D;white&#x2F;blue</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">insmod play</span><br><span class="line">play 480 440 1</span><br><span class="line">set timeout&#x3D;0</span><br><span class="line">menuentry --hotkey&#x3D;i &#39;Install&#39; &#123;</span><br><span class="line">    set background_color&#x3D;black</span><br><span class="line">    linux    &#x2F;vmlinuz vga&#x3D;788 boot&#x3D;live quiet</span><br><span class="line">    initrd   &#x2F;initrd</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="isolinux-cfg"><a href="#isolinux-cfg" class="headerlink" title="isolinux.cfg"></a>isolinux.cfg</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"># D-I config version 2.0</span><br><span class="line"># search path for the c32 support libraries (libcom32, libutil etc.)</span><br><span class="line">path </span><br><span class="line">menu hshift 7</span><br><span class="line">menu width 61</span><br><span class="line"></span><br><span class="line">menu title Debian GNU&#x2F;Linux installer boot menu</span><br><span class="line">menu background splash.png</span><br><span class="line">menu color title* #FFFFFFFF *</span><br><span class="line">menu color border* #00000000 #00000000 none</span><br><span class="line">menu color sel* #ffffffff #76a1d0ff *</span><br><span class="line">menu color hotsel1;7;37;40 #ffffffff #76a1d0ff *</span><br><span class="line">menu color tabmsg* #ffffffff #00000000 *</span><br><span class="line">menu color help37;40 #ffdddd00 #00000000 none</span><br><span class="line"># XXX When adjusting vshift, take care that rows is set to a small</span><br><span class="line"># enough value so any possible menu will fit on the screen,</span><br><span class="line"># rather than falling off the bottom.</span><br><span class="line">menu vshift 12</span><br><span class="line">menu rows 10</span><br><span class="line">menu helpmsgrow 15</span><br><span class="line"># The command line must be at least one line from the bottom.</span><br><span class="line">menu cmdlinerow 16</span><br><span class="line">menu timeoutrow 16</span><br><span class="line">menu tabmsgrow 18</span><br><span class="line">menu tabmsg Press ENTER to boot or TAB to edit a menu entry</span><br><span class="line">default install</span><br><span class="line">label install</span><br><span class="line">menu label ^Install</span><br><span class="line">menu default</span><br><span class="line">kernel &#x2F;vmlinuz</span><br><span class="line">append vga&#x3D;788 initrd&#x3D;&#x2F;initrd boot&#x3D;live quiet</span><br><span class="line"></span><br><span class="line">#default vesamenu.c32</span><br><span class="line">default install</span><br><span class="line">prompt 0</span><br><span class="line">timeout 0</span><br></pre></td></tr></table></figure><h2 id="用debootstrap构建一个最小环境"><a href="#用debootstrap构建一个最小环境" class="headerlink" title="用debootstrap构建一个最小环境"></a>用debootstrap构建一个最小环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cd ~&#x2F;livecd &amp;&amp; su -</span><br><span class="line"># debootstrap --include&#x3D;linux-image-amd64,live-boot --component&#x3D;main,contrib,non-free --arch&#x3D;amd64 rootfs sid http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F;</span><br></pre></td></tr></table></figure><p>然后 <code>chroot</code> 进入这个最小环境中，做一些定制工作，包括修改root密码，hostname，安装软件，创建用户什么的，这一步我就不展开讲了，根据你自己的需求定制即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># chroot rootfs &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><h2 id="将linux内核和initrd复制到工作目录的最顶层"><a href="#将linux内核和initrd复制到工作目录的最顶层" class="headerlink" title="将linux内核和initrd复制到工作目录的最顶层"></a>将linux内核和initrd复制到工作目录的最顶层</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># cd ~&#x2F;livecd</span><br><span class="line"># cp rootfs&#x2F;boot&#x2F;linuz-*-amd64 vmlinuz</span><br><span class="line"># cp rootfs&#x2F;boot&#x2F;initrd.img* initrd</span><br></pre></td></tr></table></figure><h2 id="构建squashfs压缩文件"><a href="#构建squashfs压缩文件" class="headerlink" title="构建squashfs压缩文件"></a>构建squashfs压缩文件</h2><p>进入工作目录 <code>~/livecd</code> 创建新目录 <code>live</code> 然后把刚才得到的 <code>rootfs</code> 目录压缩成squashfs格式的文件放在 <code>live</code>目录下，重命名为<code>filesystem.squashfs</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># mkdir live</span><br><span class="line"># mksquashfs rootfs live&#x2F;filesystem.squashfs</span><br></pre></td></tr></table></figure><p>然后删除 <code>rootfs</code> 目录即可，或者把他移到其他地方，以备多次对 <code>LiveCD</code> 进行修改。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># rm -rf rootfs</span><br></pre></td></tr></table></figure><h2 id="构建iso文件"><a href="#构建iso文件" class="headerlink" title="构建iso文件"></a>构建iso文件</h2><p>最后一步就是构建定制的 <code>LiveCD</code>，这一步我们使用 <code>xorriso</code> 这个工具来进行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># cd livecd</span><br><span class="line"># xorriso -as mkisofs -r -V &#39;LiveCD&#39; \</span><br><span class="line">    -J -isohybrid-mbr &#x2F;usr&#x2F;lib&#x2F;ISOLINUX&#x2F;isohdpfx.bin \</span><br><span class="line">    -J -joliet-long  \</span><br><span class="line">    -b isolinux&#x2F;isolinux.bin -c isolinux&#x2F;boot.cat -no-emul-boot \</span><br><span class="line">    -boot-load-size 4 -boot-info-table -eltorito-alt-boot \</span><br><span class="line">    -e boot&#x2F;grub&#x2F;efi.img -no-emul-boot -isohybrid-gpt-basdat -isohybrid-apm-hfsplus livecd&#x2F;  \</span><br><span class="line">    -o livecd.iso</span><br></pre></td></tr></table></figure><p>完成之后，我们会得到一个 <code>livecd.iso</code> 的文件，这个就是我们制作出的 <code>LiveCD</code> ，可以把它dd到U盘中使用了。</p><h2 id="文章地址"><a href="#文章地址" class="headerlink" title="文章地址"></a>文章地址</h2><ul><li><a href="https://forums.debiancn.org/t/debian-livecd/582（**Debian" target="_blank" rel="external nofollow noopener noreferrer">https://forums.debiancn.org/t/debian-livecd/582（**Debian</a> 中文论坛**）</li></ul>]]></content>
    
    <summary type="html">
    
      首先，Debian 官方是提供了 LiveCD 的，但是存在一些问题，其中一个最大的问题，就是不支持UEFI启动，另外官方提供的 LiveCD 总是没有自己定制过的顺手，所以在这儿讲解一下如何创建一个自定义的 Debian LiveCD。
    
    </summary>
    
    
      <category term="Live-build" scheme="https://www.ling218.cn/categories/Live-build/"/>
    
    
      <category term="debian" scheme="https://www.ling218.cn/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>自定义 Ubuntu Server 16.04.2 安装 iso</title>
    <link href="https://www.ling218.cn/archives/cf3baf5f.html"/>
    <id>https://www.ling218.cn/archives/cf3baf5f.html</id>
    <published>2020-05-14T01:13:00.613Z</published>
    <updated>2020-10-10T04:08:57.172Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载-Ubuntu-Server-16-04-2-ISO"><a href="#下载-Ubuntu-Server-16-04-2-ISO" class="headerlink" title="下载 Ubuntu Server 16.04.2 ISO"></a>下载 Ubuntu Server 16.04.2 ISO</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;debian.linux.org.tw&#x2F;ubuntu-releases&#x2F;16.04.2&#x2F;ubuntu-16.04.2-server-amd64.iso**</span><br></pre></td></tr></table></figure><h2 id="挂载光盘"><a href="#挂载光盘" class="headerlink" title="挂载光盘"></a>挂载光盘</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -o loop ubuntu-16.04.2-server-amd64.iso &#x2F;mnt</span><br></pre></td></tr></table></figure><h2 id="复制目录"><a href="#复制目录" class="headerlink" title="复制目录"></a>复制目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~&#x2F;Ubuntu16042</span><br><span class="line">cp -a &#x2F;mnt&#x2F;* ~&#x2F;Ubuntu16042</span><br><span class="line">cp -r &#x2F;mnt&#x2F;.disk ~&#x2F;Ubuntu16042</span><br></pre></td></tr></table></figure><h2 id="修改-Ubuntu16042-isolinux-txt-cfg"><a href="#修改-Ubuntu16042-isolinux-txt-cfg" class="headerlink" title="修改 ~/Ubuntu16042/isolinux/txt.cfg"></a>修改 ~/Ubuntu16042/isolinux/txt.cfg</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vim ~&#x2F;Ubuntu16042&#x2F;isolinux&#x2F;txt.cfg</span><br><span class="line"></span><br><span class="line">default ainstall</span><br><span class="line">label ainstall</span><br><span class="line"> menu label ^Auto Install Ubuntu Server</span><br><span class="line"> kernel &#x2F;install&#x2F;vmlinuz</span><br><span class="line"> append file&#x3D;&#x2F;cdrom&#x2F;preseed&#x2F;aubuntu-server.seed vga&#x3D;788 initrd&#x3D;&#x2F;install&#x2F;initrd.gz quiet debian-installer&#x2F;language&#x3D;en debian-installer&#x2F;country&#x3D;TW console-setup&#x2F;ask_detect&#x3D;false keyboard-configuration&#x2F;layoutcode&#x3D;us debian-installer&#x2F;locale&#x3D;en_US ---</span><br><span class="line">label install</span><br><span class="line"> menu label ^Install Ubuntu Server</span><br><span class="line"> kernel &#x2F;install&#x2F;vmlinuz</span><br><span class="line"> append file&#x3D;&#x2F;cdrom&#x2F;preseed&#x2F;ubuntu-server.seed vga&#x3D;788 initrd&#x3D;&#x2F;install&#x2F;initrd.gz quiet ---</span><br></pre></td></tr></table></figure><h2 id="建立-Ubuntu16042-preseed-aubuntu-server-seed"><a href="#建立-Ubuntu16042-preseed-aubuntu-server-seed" class="headerlink" title="建立 ~/Ubuntu16042/preseed/aubuntu-server.seed"></a>建立 ~/Ubuntu16042/preseed/aubuntu-server.seed</h2><h3 id="准备安装-LAMP-OpenSSH-Server"><a href="#准备安装-LAMP-OpenSSH-Server" class="headerlink" title="准备安装 LAMP / OpenSSH Server"></a>准备安装 LAMP / OpenSSH Server</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">vim ~&#x2F;Ubuntu16042&#x2F;preseed&#x2F;aubuntu-server.seed</span><br><span class="line"></span><br><span class="line">d-i debian-installer&#x2F;locale string en_US.UTF-8</span><br><span class="line">d-i debian-installer&#x2F;locale string en_US</span><br><span class="line">d-i console-setup&#x2F;ask_detect boolean false</span><br><span class="line">d-i console-setup&#x2F;layout string USA</span><br><span class="line">d-i debian-installer&#x2F;language string en</span><br><span class="line">d-i debian-installer&#x2F;country string TW</span><br><span class="line">d-i console-setup&#x2F;ask_detect boolean false</span><br><span class="line">d-i keyboard-configuration&#x2F;xkb-keymap select us </span><br><span class="line">Default user, change</span><br><span class="line">d-i passwd&#x2F;root-login boolean true</span><br><span class="line">d-i passwd&#x2F;make-user boolean false</span><br><span class="line">d-i user-setup&#x2F;encrypt-home boolean false</span><br><span class="line">d-i user-setup&#x2F;allow-password-weak boolean true</span><br><span class="line">d-i netcfg&#x2F;choose_interface select auto</span><br><span class="line">d-i netcfg&#x2F;get_hostname string unassigned-hostname</span><br><span class="line">d-i netcfg&#x2F;get_domain string unassigned-domain</span><br><span class="line">d-i mirror&#x2F;country string manual</span><br><span class="line">d-i mirror&#x2F;http&#x2F;hostname string http:&#x2F;&#x2F;tw.archive.ubuntu.com</span><br><span class="line">d-i mirror&#x2F;http&#x2F;hostname string http:&#x2F;&#x2F;free.nchc.org.tw</span><br><span class="line">d-i mirror&#x2F;http&#x2F;directory string &#x2F;ubuntu</span><br><span class="line">d-i apt-setup&#x2F;services-select multiselect security</span><br><span class="line">d-i apt-setup&#x2F;security_host string free.nchc.org.tw</span><br><span class="line">d-i apt-setup&#x2F;security_path string &#x2F;ubuntu</span><br><span class="line">d-i mirror&#x2F;http&#x2F;proxy string</span><br><span class="line">d-i clock-setup&#x2F;utc boolean false</span><br><span class="line">d-i clock-setup&#x2F;ntp boolean true</span><br><span class="line">d-i time&#x2F;zone string Asia&#x2F;Taipei</span><br><span class="line">d-i partman&#x2F;confirm boolean true</span><br><span class="line">d-i partman&#x2F;choose_partition select finish</span><br><span class="line">d-i partman&#x2F;confirm_nooverwrite boolean true</span><br><span class="line">d-i partman-auto&#x2F;disk string &#x2F;dev&#x2F;[sv]da</span><br><span class="line">d-i partman-auto&#x2F;method string lvm</span><br><span class="line">d-i partman-auto&#x2F;choose_recipe select atomic</span><br><span class="line">d-i partman-lvm&#x2F;device_remove_lvm boolean true</span><br><span class="line">d-i partman-lvm&#x2F;confirm boolean true</span><br><span class="line">d-i partman-lvm&#x2F;confirm_nooverwrite boolean true</span><br><span class="line">d-i partman-auto-lvm&#x2F;guided_size string max</span><br><span class="line">d-i partman-partitioning&#x2F;confirm_write_new_label boolean true</span><br><span class="line">d-i grub-installer&#x2F;grub2_instead_of_grub_legacy boolean true</span><br><span class="line">d-i grub-installer&#x2F;only_debian boolean true</span><br><span class="line">d-i grub-installer&#x2F;bootdev string &#x2F;dev&#x2F;[sv]da</span><br><span class="line">d-i pkgsel&#x2F;update-policy select none</span><br><span class="line">d-i pkgsel&#x2F;include string unity ubuntu-desktop openssh-server</span><br><span class="line">tasksel tasksel&#x2F;first multiselect lamp-server, openssh-server</span><br><span class="line">d-i pkgsel&#x2F;include string openssh-server ntp build-essential rsync less vim ethtool curl lsscsi dstat htop strace</span><br><span class="line">d-i finish-install&#x2F;reboot_in_progress note</span><br></pre></td></tr></table></figure><h2 id="制作成-ISO-文件"><a href="#制作成-ISO-文件" class="headerlink" title="制作成 ISO 文件"></a>制作成 ISO 文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;Ubuntu16042</span><br><span class="line">mkisofs -r -V &quot;Ubuntu-Server 16.04.2&quot; -J -l -b isolinux&#x2F;isolinux.bin -c isolinux&#x2F;boot.cat -no-emul -boot-load-size 4 -boot-info-table -o ~&#x2F;ubuntu-16.04.2-server-amd6_0501.iso .</span><br></pre></td></tr></table></figure><h2 id="安装测试"><a href="#安装测试" class="headerlink" title="安装测试"></a>安装测试</h2><p>省略</p><h2 id="参考网站："><a href="#参考网站：" class="headerlink" title="参考网站："></a>参考网站：</h2><p><a href="https://github.com/express42/ubuntu-autoinstaller/blob/master/txt.cfg" target="_blank" rel="external nofollow noopener noreferrer">ubuntu-autoinstaller/txt.cfg at master · express42/ubuntu-autoinstaller · GitHub</a></p><p><a href="https://help.ubuntu.com/community/InstallCDCustomization" target="_blank" rel="external nofollow noopener noreferrer">InstallCDCustomization - Community Help Wiki</a></p><p><a href="https://www.hiroom2.com/2016/05/19/ubuntu-16-04-debian-8-run-pxe-boot-server-for-automated-install/" target="_blank" rel="external nofollow noopener noreferrer">Ubuntu 16.04 / Debian 8: Run PXE boot server for automated install - Narrow Escape</a></p><p><a href="https://help.ubuntu.com/16.04/installation-guide/i386/apbs04.html" target="_blank" rel="external nofollow noopener noreferrer">B.4. Contents of the preconfiguration file (for xenial)</a><br><a href="https://help.ubuntu.com/16.04/installation-guide/example-preseed.txt" target="_blank" rel="external nofollow noopener noreferrer">https://help.ubuntu.com/16.04/installation-guide/example-preseed.txt</a></p><p><a href="https://askubuntu.com/questions/122505/how-do-i-create-a-completely-unattended-install-of-ubuntu" target="_blank" rel="external nofollow noopener noreferrer">system installation - How do I create a completely unattended install of Ubuntu? - Ask Ubuntu</a></p>]]></content>
    
    <summary type="html">
    
      自定义安装 Ubuntu Server
    
    </summary>
    
    
      <category term="Live-build" scheme="https://www.ling218.cn/categories/Live-build/"/>
    
    
      <category term="ubuntu" scheme="https://www.ling218.cn/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>清除 Debian/Ubuntu 系统 DNS 缓存</title>
    <link href="https://www.ling218.cn/archives/e9ef5079.html"/>
    <id>https://www.ling218.cn/archives/e9ef5079.html</id>
    <published>2020-05-14T01:13:00.593Z</published>
    <updated>2020-10-10T04:32:31.268Z</updated>
    
    <content type="html"><![CDATA[<p>当你访问一个网站时，需要对网站域名进行解析，也就是获得域名指向的IP。Linux系统有DNS Cache机制，缓存了域名对应的IP，这样再下次访问同一个网站时，就不再需要执行域名查询，提高访问速度。</p><p>有些网络问题可以通过清理系统DNS缓存来解决，如本地缓存的域名对应错误的IP。</p><h4 id="Debian-Ubuntu清理DNS缓存"><a href="#Debian-Ubuntu清理DNS缓存" class="headerlink" title="Debian/Ubuntu清理DNS缓存"></a>Debian/Ubuntu清理DNS缓存</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo &#x2F;etc&#x2F;init.d&#x2F;dns-clean</span><br></pre></td></tr></table></figure><p>dns-clean其实就是bash脚本，如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">PATH&#x3D;&#x2F;sbin:&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin</span><br><span class="line"> </span><br><span class="line">test -f &#x2F;usr&#x2F;sbin&#x2F;pppconfig || exit 0</span><br><span class="line">mkdir &#x2F;var&#x2F;run&#x2F;pppconfig &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1 || true</span><br><span class="line">test -f &#x2F;etc&#x2F;ppp&#x2F;ip-down.d&#x2F;0dns-down || exit 0</span><br><span class="line"> </span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">  start)</span><br><span class="line">        &#x2F;bin&#x2F;echo -n &quot;Running 0dns-down to make sure resolv.conf is ok...&quot;</span><br><span class="line">        &#x2F;etc&#x2F;ppp&#x2F;ip-down.d&#x2F;0dns-down &quot;0dns-clean&quot; &amp;&amp; &#x2F;bin&#x2F;echo &quot;done.&quot;</span><br><span class="line">        ;;</span><br><span class="line">  stop|restart|force-reload)</span><br><span class="line">        ;;</span><br><span class="line">  *)</span><br><span class="line">        ;;</span><br><span class="line">esac</span><br><span class="line"> </span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      当你访问一个网站时，需要对网站域名进行解析，也就是获得域名指向的IP。Linux系统有DNS Cache机制，缓存了域名对应的IP，这样再下次访问同一个网站时，就不再需要执行域名查询，提高访问速度。
    
    </summary>
    
    
      <category term="Debian" scheme="https://www.ling218.cn/categories/Debian/"/>
    
    
      <category term="dns" scheme="https://www.ling218.cn/tags/dns/"/>
    
  </entry>
  
  <entry>
    <title>查询Linux发行版名称与版本</title>
    <link href="https://www.ling218.cn/archives/ab7d1113.html"/>
    <id>https://www.ling218.cn/archives/ab7d1113.html</id>
    <published>2020-05-14T01:13:00.569Z</published>
    <updated>2020-10-10T03:55:09.704Z</updated>
    
    <content type="html"><![CDATA[<p>在Linux系统下查询发行版名称和版本有许多种方法,而不同的Linux发行版查询的方式也不所同,以下整理了一些常见的方法。</p><h2 id="查询-Linux-发行版与版本"><a href="#查询-Linux-发行版与版本" class="headerlink" title="查询 Linux 发行版与版本"></a>查询 Linux 发行版与版本</h2><p>Linux 发行版与版本就是指大家常听到的 Ubuntu 16.04、Fedora 24、CentOS 7 这些名字,而要查询 Linux 的发行版有以下几中方式。</p><h2 id="查看-etc-release-文件"><a href="#查看-etc-release-文件" class="headerlink" title="查看 /etc/*-release 文件"></a>查看 /etc/*-release 文件</h2><p>通常在/etc目录中会有几个*-release文件,从这里面的内容可以看出Linux的发行版名称与版本号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;etc&#x2F;redhat-release</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;etc&#x2F;os-release</span><br><span class="line"></span><br><span class="line">NAME&#x3D;&quot;Ubuntu&quot;</span><br><span class="line">VERSION&#x3D;&quot;16.04.1 LTS (Xenial Xerus)&quot;</span><br><span class="line">ID&#x3D;ubuntu</span><br><span class="line">ID_LIKE&#x3D;debian</span><br><span class="line">PRETTY_NAME&#x3D;&quot;Ubuntu 16.04.1 LTS&quot;</span><br><span class="line">VERSION_ID&#x3D;&quot;16.04&quot;</span><br><span class="line">HOME_URL&#x3D;&quot;http:&#x2F;&#x2F;www.ubuntu.com&#x2F;&quot;</span><br><span class="line">SUPPORT_URL&#x3D;&quot;http:&#x2F;&#x2F;help.ubuntu.com&#x2F;&quot;</span><br><span class="line">BUG_REPORT_URL&#x3D;&quot;http:&#x2F;&#x2F;bugs.launchpad.net&#x2F;ubuntu&#x2F;&quot;</span><br><span class="line">UBUNTU_CODENAME&#x3D;xenial</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;etc&#x2F;lsb-release</span><br><span class="line"></span><br><span class="line">DISTRIB_ID&#x3D;Ubuntu</span><br><span class="line">DISTRIB_RELEASE&#x3D;16.04</span><br><span class="line">DISTRIB_CODENAME&#x3D;xenial</span><br><span class="line">DISTRIB_DESCRIPTION&#x3D;&quot;Ubuntu 16.04.1 LTS&quot;</span><br></pre></td></tr></table></figure><h2 id="使用-lsb-release-命令"><a href="#使用-lsb-release-命令" class="headerlink" title="使用 lsb_release 命令"></a>使用 lsb_release 命令</h2><p>lsb_release是一个用来查询 Linux 发行版信息的命令,但是并不是每一种 Linux 发行版都会预装这个指令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">lsb_release -a</span><br><span class="line"></span><br><span class="line">No LSB modules are available.</span><br><span class="line">Distributor ID: Ubuntu</span><br><span class="line">Description:Ubuntu 16.04.1 LTS</span><br><span class="line">Release:16.04</span><br><span class="line">Codename:xenial</span><br></pre></td></tr></table></figure><h2 id="查询-Linux-内核版本"><a href="#查询-Linux-内核版本" class="headerlink" title="查询 Linux 内核版本"></a>查询 Linux 内核版本</h2><p>uname是一个用来查询 Linux 系统内核版本的命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uname -a</span><br><span class="line"></span><br><span class="line">Linux snail 4.4.0-31-generic #50-Ubuntu SMP Wed Jul 13 00:07:12 UTC 2016 x8</span><br></pre></td></tr></table></figure><h2 id="查看-proc-version"><a href="#查看-proc-version" class="headerlink" title="查看 /proc/version"></a>查看 /proc/version</h2><p>在 /proc/version 中也会纪录一些 Linux 的内核版本信息:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;proc&#x2F;version</span><br><span class="line"></span><br><span class="line">Linux version 4.4.0-31-generic (buildd@lgw01-16) (gcc version 5.3.1 2016041</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      怎么查看Linux系统的发行版和版本?
    
    </summary>
    
    
      <category term="Debian" scheme="https://www.ling218.cn/categories/Debian/"/>
    
    
      <category term="shell" scheme="https://www.ling218.cn/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>更改SSH服务默认端口</title>
    <link href="https://www.ling218.cn/archives/ebc5ab1c.html"/>
    <id>https://www.ling218.cn/archives/ebc5ab1c.html</id>
    <published>2020-05-14T01:13:00.549Z</published>
    <updated>2020-10-09T16:44:21.644Z</updated>
    
    <content type="html"><![CDATA[<p>SSH服务默认使用22端口，为了防止端口扫描及暴力破解，我们可以更改SSH的默认端口。</p><h2 id="更改SSH服务默认端口-Linux"><a href="#更改SSH服务默认端口-Linux" class="headerlink" title="更改SSH服务默认端口(Linux)"></a>更改SSH服务默认端口(Linux)</h2><p>编辑ssh配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config</span><br></pre></td></tr></table></figure><p>找到如下一行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Port 22</span><br></pre></td></tr></table></figure><p>更改你要使用的端口，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Port 3399</span><br></pre></td></tr></table></figure><p>如果你操作的是远程主机要格外小心，确保没有其它程序使用这个端口并检查防火墙。一旦出错，可能导致SSH连接不上远程服务器。</p><p>更改完成之后，重启SSH服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart ssh</span><br></pre></td></tr></table></figure><p>查看SSH服务监听的端口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo netstat -tunlp | grep ssh</span><br></pre></td></tr></table></figure><p>连接时需使用-p选项指定端口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@server_domain_OR_IP -p 3399</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      SSH服务默认使用22端口，为了防止端口扫描及暴力破解，我们可以更改SSH的默认端口
    
    </summary>
    
    
      <category term="Debian" scheme="https://www.ling218.cn/categories/Debian/"/>
    
    
      <category term="ssh" scheme="https://www.ling218.cn/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>更改 Kali Linux MAC 地址</title>
    <link href="https://www.ling218.cn/archives/c566ca23.html"/>
    <id>https://www.ling218.cn/archives/c566ca23.html</id>
    <published>2020-05-14T01:13:00.517Z</published>
    <updated>2020-10-10T04:29:11.636Z</updated>
    
    <content type="html"><![CDATA[<h2 id="更改计算机的MAC地址-使用情形如下"><a href="#更改计算机的MAC地址-使用情形如下" class="headerlink" title="更改计算机的MAC地址,使用情形如下:"></a>更改计算机的MAC地址,使用情形如下:</h2><ul><li>防止某些软件记录你真实的MAC地址</li><li>网络管理员屏蔽了你的MAC地址</li></ul><h2 id="查看原始MAC地址"><a href="#查看原始MAC地址" class="headerlink" title="查看原始MAC地址:"></a>查看原始MAC地址:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>我以无线网卡(wlan0)为例,00:17:c4:bb:13:b7。有线网卡是eth0,方法一样。</p><h2 id="为了临时改变mac地址-我们首先关闭这个网卡"><a href="#为了临时改变mac地址-我们首先关闭这个网卡" class="headerlink" title="为了临时改变mac地址,我们首先关闭这个网卡:"></a>为了临时改变mac地址,我们首先关闭这个网卡:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig wlan0 down</span><br></pre></td></tr></table></figure><p>配置新的mac地址:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig wlan0 hw ether 00:00:00:00:00:11</span><br></pre></td></tr></table></figure><p>mac地址格式是十六进制:XX:XX:XX:XX:XX:XX</p><h2 id="开启网卡接口"><a href="#开启网卡接口" class="headerlink" title="开启网卡接口:"></a>开启网卡接口:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig wlan0 up</span><br></pre></td></tr></table></figure><p>上面的方法是临时生效,在系统重启之后会恢复为初始的mac地址。如果你想永久生效,请看下一节。</p><h2 id="MAC地址永久生效"><a href="#MAC地址永久生效" class="headerlink" title="MAC地址永久生效:"></a>MAC地址永久生效:</h2><p>Kail Linux基于Debian,而Debian的所有网络接口配置都位于/etc/network/interfaces文件中。</p><p>编辑/etc/network/interfaces:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;network&#x2F;interfaces</span><br></pre></td></tr></table></figure><p>添加一行脚本:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pre-up ifconfig wlan0 hw ether 00:00:00:00:00:11</span><br></pre></td></tr></table></figure><p>如果你想恢复初始mac地址,只要注释掉这一行就可以了。</p><h2 id="使用macchanger更改mac地址"><a href="#使用macchanger更改mac地址" class="headerlink" title="使用macchanger更改mac地址"></a>使用macchanger更改mac地址</h2><p>例如我要更改无线网卡的mac地址,依次执行如下命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ifconfig wlan0 down</span><br><span class="line">macchanger -r wlan0</span><br><span class="line">service network-manager restart</span><br></pre></td></tr></table></figure><p>上面命令设置的mac地址是随机的。</p>]]></content>
    
    <summary type="html">
    
      防止某些软件记录你真实的MAC地址
    
    </summary>
    
    
      <category term="Kali" scheme="https://www.ling218.cn/categories/Kali/"/>
    
    
      <category term="mac" scheme="https://www.ling218.cn/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>把一个大 tar 包分割成多个小文件-Linux</title>
    <link href="https://www.ling218.cn/archives/f4c68735.html"/>
    <id>https://www.ling218.cn/archives/f4c68735.html</id>
    <published>2020-05-14T01:13:00.493Z</published>
    <updated>2020-10-09T15:52:31.956Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本文内容"><a href="#本文内容" class="headerlink" title="本文内容"></a>本文内容</h2><ul><li>把大文件分割成多个小文件</li><li>把分割成的小文件合并成大文件</li></ul><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>创建一个大tar包:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -cvjf home1.tar.bz2 &#x2F;home&#x2F;snail&#x2F;*</span><br></pre></td></tr></table></figure><p>把tar包分成多个小文件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">split -b 40M home1.tar.bz2 &quot;home.tar.bz2.part&quot;</span><br></pre></td></tr></table></figure><p>把多个小文件合并:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat home.tar.bz2.parta* &gt; home2.tar.bz2</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      打包程序
    
    </summary>
    
    
      <category term="Tools" scheme="https://www.ling218.cn/categories/Tools/"/>
    
    
      <category term="tar" scheme="https://www.ling218.cn/tags/tar/"/>
    
  </entry>
  
  <entry>
    <title>把 IMG 镜像文件转换为 VDI 文件-VirtualBox</title>
    <link href="https://www.ling218.cn/archives/3454c8ba.html"/>
    <id>https://www.ling218.cn/archives/3454c8ba.html</id>
    <published>2020-05-14T01:13:00.473Z</published>
    <updated>2020-10-09T15:58:39.120Z</updated>
    
    <content type="html"><![CDATA[<p>假如你下载了一个IMG格式的系统镜像,然后想使用VirtualBox启动,这时你苦逼的发现VirtualBox不支持IMG格式。为了能在VirtualBox上启动这个IMG镜像,我们可以把它转换为VDI格式的镜像,洋文全称 Virtual Disk Image,这是VirtualBox默认使用的硬盘镜像格式。</p><blockquote><p>IMG镜像文件和ISO文件类似,QEMU虚拟机把IMG做为默认磁盘映像格式。</p></blockquote><h2 id="使用VirtualBox把IMG文件转换为VDI文件"><a href="#使用VirtualBox把IMG文件转换为VDI文件" class="headerlink" title="使用VirtualBox把IMG文件转换为VDI文件"></a>使用VirtualBox把IMG文件转换为VDI文件</h2><p>首先确保已安装VirtualBox。</p><p>需要使用的命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage -v</span><br><span class="line"></span><br><span class="line">5.0.28r111378</span><br></pre></td></tr></table></figure><p>语法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage convertdd input.img output.vdi</span><br></pre></td></tr></table></figure><p>示例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage convertdd eos3.0.base.img eos.vdi</span><br></pre></td></tr></table></figure><p>根据转换文件大小,你可能需要等待几分钟。</p><p>新建虚拟机时只需选择’使用已有的虚拟硬盘文件。</p>]]></content>
    
    <summary type="html">
    
      IMG 镜像转 VDI
    
    </summary>
    
    
      <category term="Tools" scheme="https://www.ling218.cn/categories/Tools/"/>
    
    
      <category term="VirtualBox" scheme="https://www.ling218.cn/tags/VirtualBox/"/>
    
  </entry>
  
  <entry>
    <title>将自定义 Debian 安装到硬盘</title>
    <link href="https://www.ling218.cn/archives/df9fb8e4.html"/>
    <id>https://www.ling218.cn/archives/df9fb8e4.html</id>
    <published>2020-05-14T01:13:00.449Z</published>
    <updated>2020-10-10T03:58:11.428Z</updated>
    
    <content type="html"><![CDATA[<p>Debian提供的库存Debian安装程序非常棒。它直观，简单。但是，如果出于某种原因（特定配置，计算机部署，最小映像）想要自定义安装，则可以使用以下步骤来完成。</p><p>为此，我们将需要任何基于Debian的实时CD。您可以使用我的指南来<a href="https://willhaley.com/blog/custom-debian-live-environment/" target="_blank" rel="external nofollow noopener noreferrer">创建自定义的Debian Live CD或USB</a>来生成该文件，也可以仅使用Ubuntu或Debian Live CD或USB。</p><p>使用自定义实时环境的优势在于您可以将所需工具打包在实时环境中，以便它们始终可用。如果您使用库存的Ubuntu或Debian Live CD，则可能需要网络连接才能安装所需的工具。</p><p><strong>警告</strong>：我已<strong>突出显示</strong>您应该在目标安装chroot中的所有位置。</p><ol><li><p>使用实时CD或USB引导计算机并安装必要的工具（假设它们尚不可用）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install debootstrap</span><br></pre></td></tr></table></figure></li><li><p>确定要在其中安装自定义Debian的设备。</p><p>我假设您打算使用的硬盘位于<code>/dev/sdz</code>，您只希望该磁盘上有一个分区，并且希望将MBR与grub2一起使用。</p><p>您<strong>必须</strong>替换的任何实例<code>/dev/sdz</code>与同位置在这些步骤中<strong>您的</strong>硬盘驱动器或会不小心丢失数据。</p></li><li><p>用一个可引导的Linux分区创建一个MBR表。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo -e &quot;o\nn\np\n1\n\n\nw&quot; | sudo fdisk &#x2F;dev&#x2F;sdz</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo -e &quot;a\nw\n&quot; | sudo fdisk &#x2F;dev&#x2F;sdz</span><br></pre></td></tr></table></figure></li><li><p>格式化分区。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkfs.ext4 &#x2F;dev&#x2F;sdz1</span><br></pre></td></tr></table></figure></li><li><p>如果安装点尚不存在，请创建一个。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p &#x2F;mnt</span><br></pre></td></tr></table></figure></li><li><p>挂载分区。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount &#x2F;dev&#x2F;sdz1 &#x2F;mnt</span><br></pre></td></tr></table></figure></li><li><p>设置基本的Debian安装。我在我的发行版中使用Stretch，在架构上使用i386。如果您不在美国，或者您知道更近的镜子，请更换镜子。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo debootstrap \</span><br><span class="line">    --arch&#x3D;i386 \</span><br><span class="line">    --variant&#x3D;minbase \</span><br><span class="line">    stretch &#x2F;mnt http:&#x2F;&#x2F;ftp.us.debian.org&#x2F;debian&#x2F;</span><br></pre></td></tr></table></figure></li><li><p>绑定<code>/dev</code>并<code>/proc</code>从主机到chroot。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -o bind &#x2F;dev &#x2F;mnt&#x2F;dev</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -t proc &#x2F;proc &#x2F;mnt&#x2F;proc</span><br></pre></td></tr></table></figure></li><li><p>Chroot到我们的Debian安装。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chroot &#x2F;mnt</span><br></pre></td></tr></table></figure></li><li><p><strong>chroot</strong></p><p>找出要在安装中使用的Linux内核。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-cache search linux-image</span><br></pre></td></tr></table></figure><p>我选择了图像<code>linux-image-586</code>。<code>systemd-sys</code>（或等效项）是必须提供的<code>init</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; \</span><br><span class="line">apt-get install --no-install-recommends \</span><br><span class="line">    linux-image-586 systemd-sysv</span><br></pre></td></tr></table></figure></li><li><p><strong>chroot</strong></p><p>安装您选择的程序。我使用<code>--no-install-recommends</code>以避免多余的程序包。您应该确定安装所需的内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt-get install --no-install-recommends \</span><br><span class="line">    network-manager net-tools wireless-tools wpagui \</span><br><span class="line">    tcpdump wget openssh-client \</span><br><span class="line">    blackbox xserver-xorg-core xserver-xorg x11-xserver-utils \</span><br><span class="line">    xinit xterm \</span><br><span class="line">    pciutils usbutils gparted nano</span><br></pre></td></tr></table></figure></li><li><p><strong>chroot</strong></p><p>创建<code>/etc/fstab</code>用于安装的文件。</p><p>我们可以使用类似的脚本来生成它。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UUID&#x3D;&#96;blkid -s UUID -o value &#x2F;dev&#x2F;sdz1&#96;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;UUID&#x3D;$&#123;UUID&#125; &#x2F; ext4 defaults 1 1&quot; &gt; &#x2F;etc&#x2F;fstab</span><br></pre></td></tr></table></figure></li><li><p><strong>chroot</strong></p><p>安装grub引导加载程序。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install grub2</span><br></pre></td></tr></table></figure><p>出现提示时，请确保选择<code>/dev/sdz</code>（<strong>不是</strong> <code>/dev/sdz1</code>）作为<code>Grub install device</code>。</p></li><li><p><strong>chroot</strong></p><p>设置root密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd root</span><br></pre></td></tr></table></figure></li><li><p><strong>chroot</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure></li><li><p>重新启动您的Debian安装！</p></li></ol><h2 id="原文地址："><a href="#原文地址：" class="headerlink" title="原文地址："></a>原文地址：</h2><ul><li><a href="https://willhaley.com/blog/custom-debian-hard-drive-install/" target="_blank" rel="external nofollow noopener noreferrer">https://willhaley.com/blog/custom-debian-hard-drive-install/</a></li></ul>]]></content>
    
    <summary type="html">
    
      将自定义Debian安装到硬盘
    
    </summary>
    
    
      <category term="Live-build" scheme="https://www.ling218.cn/categories/Live-build/"/>
    
    
      <category term="debian" scheme="https://www.ling218.cn/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>将自定义 Debian Live 安装到USB驱动器 (img格式)</title>
    <link href="https://www.ling218.cn/archives/93f8863.html"/>
    <id>https://www.ling218.cn/archives/93f8863.html</id>
    <published>2020-05-14T01:13:00.421Z</published>
    <updated>2020-10-10T03:58:26.476Z</updated>
    
    <content type="html"><![CDATA[<p>这些说明<strong>不是</strong>用于实时安装，而是用于将Debian安装到USB闪存介质。</p><p>这里的一个额外好处是，我们将首先在<code>img</code>作为环回设备安装的文件中准备Debian chroot 。</p><p>然后，我们可以将该<code>img</code>文件用作通用基础映像，然后将其部署到大量USB驱动器中。</p><p>你为什么想做这个？好吧，一方面，该<code>img</code>文件有助于减少混乱，并为您提供易于管理的文件，该文件可以一次又一次地重新部署。这对于创建将在多台计算机上重用的通用映像也是理想的。就像您在网吧中所做的那样，每次启动时都会重新安装Debian，或者在教室中。</p><p><strong>警告</strong>：我已<strong>突出显示</strong>您应该在chroot环境中的所有位置。小心！在本地环境而不是chroot中运行其中一些命令可能会导致问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install \</span><br><span class="line">    debootstrap</span><br></pre></td></tr></table></figure><p>创建图像文件并将其格式化。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fallocate -l 2G debian.img</span><br><span class="line">echo -e &quot;o\nn\np\n1\n\n\nw&quot; | sudo fdisk debian.img</span><br><span class="line">echo -e &quot;a\nw\n&quot; | sudo fdisk debian.img</span><br></pre></td></tr></table></figure><p><strong>请注意以下命令返回的内容。</strong>对我来说，回送设备是<code>/dev/loop0</code>，但它可能因您而异。如果您的回送设备地址不同，请相应地更新以下说明。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo losetup --partscan --show --find debian.img</span><br></pre></td></tr></table></figure><p>格式化回送设备的linux分区，就像我们对真实物理设备所做的一样。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkfs.ext4 &#x2F;dev&#x2F;loop0p1</span><br></pre></td></tr></table></figure><p>挂载分区。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p &#x2F;mnt&#x2F;debian</span><br><span class="line">sudo mount &#x2F;dev&#x2F;loop0p1 &#x2F;mnt&#x2F;debian</span><br></pre></td></tr></table></figure><p>引导chroot。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo debootstrap \</span><br><span class="line">    --arch&#x3D;i386 \</span><br><span class="line">    --variant&#x3D;minbase \</span><br><span class="line">    stretch &#x2F;mnt&#x2F;debian http:&#x2F;&#x2F;ftp.us.debian.org&#x2F;debian&#x2F;</span><br></pre></td></tr></table></figure><p>将特殊设备安装到chroot。这对于以后安装grub非常重要。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -t proc &#x2F;proc &#x2F;mnt&#x2F;debian&#x2F;proc</span><br><span class="line">sudo mount -t sysfs &#x2F;sys &#x2F;mnt&#x2F;debian&#x2F;sys</span><br><span class="line">sudo mount -o bind &#x2F;dev &#x2F;mnt&#x2F;debian&#x2F;dev</span><br></pre></td></tr></table></figure><p>将root更改为chroot环境。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chroot &#x2F;mnt&#x2F;debian</span><br></pre></td></tr></table></figure><p><strong>chroot</strong></p><p>至少需要这些软件包，但根据需要添加更多。</p><p><strong>当提示您将grub安装到设备上时，请勿安装它。只需单击“ Enter”，然后选择不将其安装到任何设备。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; \</span><br><span class="line">apt-get install --no-install-recommends \</span><br><span class="line">    linux-image-586 systemd-sysv \</span><br><span class="line">grub2-common grub-pc</span><br></pre></td></tr></table></figure><p><strong>chroot</strong></p><p>我们要基于磁盘标签而不是UUID或类似的命名磁盘<code>fstab</code>进行装载。这是因为，根据计算机的不同，USB驱动器<em>可能不是/ dev / sda</em>，而且因为UUID会根据文件的部署位置而有所不同。<code>/``/dev/sda``img</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;LABEL&#x3D;DEBUSB &#x2F; ext4 defaults 0 1&quot; &gt; &#x2F;etc&#x2F;fstab</span><br></pre></td></tr></table></figure><p><strong>chroot</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd root</span><br></pre></td></tr></table></figure><p><strong>chroot</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">grub-install \</span><br><span class="line">    --target&#x3D;i386-pc \</span><br><span class="line">    --boot-directory&#x3D;&#x2F;boot \</span><br><span class="line">    --force-file-id \</span><br><span class="line">    --skip-fs-probe \</span><br><span class="line">    --recheck &#x2F;dev&#x2F;loop0</span><br></pre></td></tr></table></figure><p><strong>chroot</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure><p>在中编辑<code>grub.cfg</code>文件<code>img</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano &#x2F;mnt&#x2F;debian&#x2F;boot&#x2F;grub&#x2F;grub.cfg</span><br></pre></td></tr></table></figure><p>将此内容粘贴到<code>grub.cfg</code>文件中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># grub.cfg</span><br><span class="line">set default&#x3D;&quot;0&quot;</span><br><span class="line">set timeout&#x3D;10</span><br><span class="line"></span><br><span class="line">menuentry &quot;Debian&quot; &#123;</span><br><span class="line">    linux &#x2F;vmlinuz root&#x3D;&#x2F;dev&#x2F;disk&#x2F;by-label&#x2F;DEBUSB quiet</span><br><span class="line">    initrd &#x2F;initrd.img</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用与我们<code>fstab</code>上面相同的名称标记映像分区。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo e2label &#x2F;dev&#x2F;loop0p1 DEBUSB</span><br></pre></td></tr></table></figure><p>设置的主机名<code>img</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;debian-usb&quot; | sudo tee &#x2F;mnt&#x2F;debian&#x2F;etc&#x2F;hostname</span><br></pre></td></tr></table></figure><p>清理特殊设备。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo umount &#x2F;mnt&#x2F;debian&#x2F;&#123;dev,sys,proc&#125;</span><br></pre></td></tr></table></figure><p>卸载回路设备。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo umount &#x2F;mnt&#x2F;debian</span><br></pre></td></tr></table></figure><p>卸下<code>img</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo losetup -d &#x2F;dev&#x2F;loop0</span><br></pre></td></tr></table></figure><p>现在，您具有通用的Debian安装，可以像这样将其部署到多个设备。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if&#x3D;debian.img of&#x3D;&#x2F;dev&#x2F;sdz</span><br></pre></td></tr></table></figure><h1 id="引文"><a href="#引文" class="headerlink" title="引文"></a>引文</h1><ul><li><a href="https://wiki.archlinux.org/index.php/Installing_Arch_Linux_on_a_USB_key" target="_blank" rel="external nofollow noopener noreferrer">在USB密钥上安装Arch Linux</a></li><li><a href="http://www.wyae.de/docs/boot-usb3/" target="_blank" rel="external nofollow noopener noreferrer">从USB 3启动</a></li><li><a href="https://www.cyberciti.biz/faq/linux-partition-howto-set-labels/" target="_blank" rel="external nofollow noopener noreferrer">标记Linux分区</a></li><li><a href="https://ubuntuforums.org/showthread.php?t=1529777" target="_blank" rel="external nofollow noopener noreferrer">如何生成使用LABEL而不是UUID的grub.cfg？</a></li><li><a href="https://wiki.archlinux.org/index.php/GRUB" target="_blank" rel="external nofollow noopener noreferrer">格鲁布</a></li><li><a href="https://www.gnu.org/software/grub/manual/html_node/Multi_002dboot-manual-config.html" target="_blank" rel="external nofollow noopener noreferrer">6.3多引导手动配置</a></li><li><a href="https://unix.stackexchange.com/questions/10010/safe-to-delete-system-map-files-in-boot" target="_blank" rel="external nofollow noopener noreferrer">可以安全删除/ boot中的System.map- *文件吗？</a></li><li><a href="https://ubuntuforums.org/showthread.php?t=1530532" target="_blank" rel="external nofollow noopener noreferrer">使用标签引导GRUB2（无UUID）</a></li><li><a href="https://www.gnu.org/software/grub/manual/grub.html#search" target="_blank" rel="external nofollow noopener noreferrer">16.3.64搜索</a></li><li><a href="https://ubuntuforums.org/showthread.php?t=1854142" target="_blank" rel="external nofollow noopener noreferrer">错误：没有这样的设备：grub抢救&gt;</a></li><li><a href="https://askubuntu.com/questions/491604/grub-rescue-no-such-partition" target="_blank" rel="external nofollow noopener noreferrer">grub救援-&gt;没有这样的分区[重复]</a></li><li><a href="https://superuser.com/questions/130955/how-to-install-grub-into-an-img-file" target="_blank" rel="external nofollow noopener noreferrer">如何将grub安装到.img文件中？</a></li><li><a href="https://unix.stackexchange.com/questions/120198/how-to-fix-boot-into-initramfs-prompt-and-mount-cant-read-etc-fstab-no-su" target="_blank" rel="external nofollow noopener noreferrer">如何解决引导进入initramfs提示符和“装载：无法读取’/ etc / fstab’：无此文件或目录”和“找不到init”的问题？</a></li><li><a href="https://serverfault.com/questions/540492/sudo-echo-bla-etc-sysctl-conf-permission-denied" target="_blank" rel="external nofollow noopener noreferrer"><code>sudo echo “bla” &gt;&gt; /etc/sysctl.conf</code> 没有权限</a></li><li><a href="https://superuser.com/questions/165116/mount-dev-proc-sys-in-a-chroot-environment" target="_blank" rel="external nofollow noopener noreferrer">在chroot环境中挂载dev，proc，sys？</a></li></ul><h2 id="原文地址："><a href="#原文地址：" class="headerlink" title="原文地址："></a>原文地址：</h2><ul><li><a href="https://willhaley.com/blog/install-debian-usb/" target="_blank" rel="external nofollow noopener noreferrer">https://willhaley.com/blog/install-debian-usb/</a></li></ul>]]></content>
    
    <summary type="html">
    
      将自定义Debian Live安装到USB驱动器 (img格式)
    
    </summary>
    
    
      <category term="Live-build" scheme="https://www.ling218.cn/categories/Live-build/"/>
    
    
      <category term="debian" scheme="https://www.ling218.cn/tags/debian/"/>
    
  </entry>
  
</feed>
