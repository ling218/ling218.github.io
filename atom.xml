<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LING218</title>
  
  <subtitle>做最好的自己！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.ling218.cn/"/>
  <updated>2021-05-11T08:35:14.131Z</updated>
  <id>https://www.ling218.cn/</id>
  
  <author>
    <name>LinG218</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>live build项目收集</title>
    <link href="https://www.ling218.cn/archives/3311a575.html"/>
    <id>https://www.ling218.cn/archives/3311a575.html</id>
    <published>2021-05-14T02:56:10.043Z</published>
    <updated>2021-05-11T08:35:14.131Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="创建-Ubuntu-live-脚本"><a href="#创建-Ubuntu-live-脚本" class="headerlink" title="创建 Ubuntu live 脚本"></a>创建 Ubuntu live 脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;RTXI&#x2F;live-image</span><br></pre></td></tr></table></figure><h3 id="构建-Debain-live-脚本-（基于-debian-live）"><a href="#构建-Debain-live-脚本-（基于-debian-live）" class="headerlink" title="构建 Debain live 脚本 （基于 debian live）"></a>构建 Debain live 脚本 （基于 debian live）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;s-vincent&#x2F;debian-live-image</span><br></pre></td></tr></table></figure><h3 id="构建-Debain-live-脚本-分步骤小脚本"><a href="#构建-Debain-live-脚本-分步骤小脚本" class="headerlink" title="构建 Debain live 脚本 (分步骤小脚本)"></a>构建 Debain live 脚本 (分步骤小脚本)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;dinooz&#x2F;devuanos</span><br></pre></td></tr></table></figure><h3 id="构建-NIIX-LINUX-中文项目，项目完整度高"><a href="#构建-NIIX-LINUX-中文项目，项目完整度高" class="headerlink" title="构建 NIIX-LINUX (中文项目，项目完整度高)"></a>构建 NIIX-LINUX (中文项目，项目完整度高)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;etony&#x2F;niix-linux</span><br></pre></td></tr></table></figure><h3 id="构建-Debian-live-（非常完整的项目，没成功构建过）"><a href="#构建-Debian-live-（非常完整的项目，没成功构建过）" class="headerlink" title="构建 Debian live （非常完整的项目，没成功构建过）"></a>构建 Debian live （非常完整的项目，没成功构建过）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;nodiscc&#x2F;debian-live-config</span><br></pre></td></tr></table></figure><h3 id="构建-Debian-live-（非常完整的项目）"><a href="#构建-Debian-live-（非常完整的项目）" class="headerlink" title="构建 Debian live （非常完整的项目）"></a>构建 Debian live （非常完整的项目）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;StamusNetworks&#x2F;SELKS</span><br></pre></td></tr></table></figure><h3 id="构建-Debain-live-（日文项目，很好的项目）"><a href="#构建-Debain-live-（日文项目，很好的项目）" class="headerlink" title="构建 Debain live （日文项目，很好的项目）"></a>构建 Debain live （日文项目，很好的项目）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;homelith&#x2F;debian-live-custom</span><br></pre></td></tr></table></figure><p>网站详情：<a href="https://qiita.com/homelith/items/f30a1fbac89dc977c1ff" target="_blank" rel="external nofollow noopener noreferrer">https://qiita.com/homelith/items/f30a1fbac89dc977c1ff</a></p><h3 id="构建-Debian-live-（非常不错的项目）"><a href="#构建-Debian-live-（非常不错的项目）" class="headerlink" title="构建 Debian live （非常不错的项目）"></a>构建 Debian live （非常不错的项目）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;mafredri&#x2F;debian-my-live-build</span><br></pre></td></tr></table></figure><h3 id="构建-Minimal-linux-live-（研究linux系统基础）"><a href="#构建-Minimal-linux-live-（研究linux系统基础）" class="headerlink" title="构建 Minimal linux live （研究linux系统基础）"></a>构建 Minimal linux live （研究linux系统基础）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;ivandavidov&#x2F;minimal-linux-script</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      live build项目收集
    
    </summary>
    
    
      <category term="项目总结" scheme="https://www.ling218.cn/categories/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="log" scheme="https://www.ling218.cn/tags/log/"/>
    
  </entry>
  
  <entry>
    <title>下载Youtube视频和播放列表</title>
    <link href="https://www.ling218.cn/archives/17677cc8.html"/>
    <id>https://www.ling218.cn/archives/17677cc8.html</id>
    <published>2021-05-14T02:56:02.650Z</published>
    <updated>2021-05-11T08:32:13.490Z</updated>
    
    <content type="html"><![CDATA[<p>youtube-dl是由某大佬开发的专攻YouTube视频下载的python脚本，使用简单、功能齐全、体积小巧。</p><a id="more"></a><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="普通下载"><a href="#普通下载" class="headerlink" title="普通下载"></a>普通下载</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">youtube-dl &#39;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v&#x3D;y8CPXkP2CKc&amp;pbjreload&#x3D;10&#39;</span><br></pre></td></tr></table></figure><h3 id="下载列表"><a href="#下载列表" class="headerlink" title="下载列表"></a>下载列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">youtube-dl -cit &#39;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v&#x3D;y8CPXkP2CKc&amp;pbjreload&#x3D;10&#39;</span><br></pre></td></tr></table></figure><h3 id="使用代理下载"><a href="#使用代理下载" class="headerlink" title="使用代理下载"></a>使用代理下载</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">youtube-dl --proxy 127.0.0.1:1080 https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v&#x3D;y8CPXkP2CKc&amp;pbjreload&#x3D;10</span><br></pre></td></tr></table></figure><h3 id="输出文件的名字"><a href="#输出文件的名字" class="headerlink" title="输出文件的名字"></a>输出文件的名字</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">youtube-dl &#39;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v&#x3D;y8CPXkP2CKc&amp;pbjreload&#x3D;10&#39; -o &#39;%(title)s.%(ext)s&#39;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;youtube-dl是由某大佬开发的专攻YouTube视频下载的python脚本，使用简单、功能齐全、体积小巧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="tools" scheme="https://www.ling218.cn/categories/tools/"/>
    
    
      <category term="youtube-dl" scheme="https://www.ling218.cn/tags/youtube-dl/"/>
    
  </entry>
  
  <entry>
    <title>WSL Kali linux 默认使用root用户</title>
    <link href="https://www.ling218.cn/archives/8e1931da.html"/>
    <id>https://www.ling218.cn/archives/8e1931da.html</id>
    <published>2021-05-14T02:55:55.582Z</published>
    <updated>2021-05-14T02:56:43.637Z</updated>
    
    <content type="html"><![CDATA[<ul><li>一开始会让你创建用户名和密码。注意：用户名最好用小写英文，密码不要忘记。后面要用到。</li><li>当然，我们也可以用root用户，这样就可以避免频繁输入sudo，避免因权限而带来的操作问题。</li></ul><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>按<code>Ctrl+D</code>退出登录，并打开Windows命令行（WIN+R 输入CMD）输入如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kali config --default-user root</span><br><span class="line">net stop LxssManager</span><br><span class="line">net start LxssManager</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;一开始会让你创建用户名和密码。注意：用户名最好用小写英文，密码不要忘记。后面要用到。&lt;/li&gt;
&lt;li&gt;当然，我们也可以用root用户，这样就可以避免频繁输入sudo，避免因权限而带来的操作问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;开始&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="WSL" scheme="https://www.ling218.cn/categories/WSL/"/>
    
    
      <category term="WSL" scheme="https://www.ling218.cn/tags/WSL/"/>
    
  </entry>
  
  <entry>
    <title>Windows子系统(linux)的中文化</title>
    <link href="https://www.ling218.cn/archives/d02e6c08.html"/>
    <id>https://www.ling218.cn/archives/d02e6c08.html</id>
    <published>2021-05-14T02:55:55.582Z</published>
    <updated>2021-05-11T07:55:43.738Z</updated>
    
    <content type="html"><![CDATA[<p>中文化和用户环境定制</p><a id="more"></a><h2 id="中文化操作"><a href="#中文化操作" class="headerlink" title="中文化操作"></a>中文化操作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 更新Linux系统</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -y upgrade</span><br><span class="line">sudo apt-get -y dist-upgrade</span><br><span class="line"># 安装软件包</span><br><span class="line">sudo apt-get -y install task-chinese-t openssh-server openssh-client curl git </span><br><span class="line"># 中文环境设置</span><br><span class="line">sudo dpkg-reconfigure locales </span><br><span class="line">sudo update-locale --reset</span><br><span class="line">sudo update-locale LANG&#x3D;zh_CN.UTF-8 </span><br><span class="line"># 为Windows共享文件夹创建挂载点</span><br><span class="line">sudo mkdir &#x2F;mnt&#x2F;share</span><br></pre></td></tr></table></figure><h2 id="用户环境设置"><a href="#用户环境设置" class="headerlink" title="用户环境设置"></a>用户环境设置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 用户环境设置</span><br><span class="line">echo -e &quot;set number\nset tabstop&#x3D;4\nset list\nset listchars&#x3D;tab:&gt;_&quot; &gt; ~&#x2F;.vimrc</span><br><span class="line">echo -e &quot;location\nprogress-bar\nremote-time\nshow-error&quot; &gt; ~&#x2F;.curlrc</span><br><span class="line"># 启动SSH</span><br><span class="line">sudo &#x2F;etc&#x2F;init.d&#x2F;ssh start</span><br><span class="line"># 挂载Windows共享文件夹</span><br><span class="line">sudo mount -t drvfs &#39;\\server\share&#39; &#x2F;mnt&#x2F;share</span><br><span class="line"># 命令自动补全</span><br><span class="line">sudo apt-get install bash-completion</span><br><span class="line">cat &lt;&lt;EOF &gt; &#x2F;etc&#x2F;profile</span><br><span class="line">if [ -f &#x2F;etc&#x2F;bash_completion ]; then</span><br><span class="line">. &#x2F;etc&#x2F;bash_completion</span><br><span class="line">fi</span><br><span class="line">EOF</span><br><span class="line">## 使其生效</span><br><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;中文化和用户环境定制&lt;/p&gt;
    
    </summary>
    
    
      <category term="WSL" scheme="https://www.ling218.cn/categories/WSL/"/>
    
    
      <category term="WSL" scheme="https://www.ling218.cn/tags/WSL/"/>
    
  </entry>
  
  <entry>
    <title>WSL Kali linux安装图形桌面</title>
    <link href="https://www.ling218.cn/archives/3afb2d97.html"/>
    <id>https://www.ling218.cn/archives/3afb2d97.html</id>
    <published>2021-05-14T02:55:55.577Z</published>
    <updated>2021-05-14T02:56:43.634Z</updated>
    
    <content type="html"><![CDATA[<h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p><strong>1、在WSL执行以下命令</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">apt-get install kali-desktop-xfce</span><br><span class="line">apt-get install xorg</span><br><span class="line">apt-get install xfce4</span><br><span class="line">apt-get isntall xrdp</span><br><span class="line">sudo sed -i &#39;s&#x2F;port&#x3D;3389&#x2F;port&#x3D;3390&#x2F;g&#39; &#x2F;etc&#x2F;xrdp&#x2F;xrdp.ini</span><br><span class="line">sudo echo xfce4-session &gt; ~&#x2F;.xsession</span><br><span class="line">sudo service xrdp restart</span><br></pre></td></tr></table></figure><p><strong>2、在Windows10环境，快捷键win+R打开CMD界面</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mstsc - 192.168.1.10:3390</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;操作步骤&quot;&gt;&lt;a href=&quot;#操作步骤&quot; class=&quot;headerlink&quot; title=&quot;操作步骤&quot;&gt;&lt;/a&gt;操作步骤&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1、在WSL执行以下命令&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight pla
      
    
    </summary>
    
    
      <category term="WSL" scheme="https://www.ling218.cn/categories/WSL/"/>
    
    
      <category term="WSL" scheme="https://www.ling218.cn/tags/WSL/"/>
    
  </entry>
  
  <entry>
    <title>制作自己的 Debian livecd</title>
    <link href="https://www.ling218.cn/archives/fa204dda.html"/>
    <id>https://www.ling218.cn/archives/fa204dda.html</id>
    <published>2021-05-14T02:55:49.061Z</published>
    <updated>2021-05-11T15:34:15.822Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装需要的软件包"><a href="#安装需要的软件包" class="headerlink" title="安装需要的软件包"></a>安装需要的软件包</h2><p><code>注意：</code> <code>#</code>号表示以 <code>root</code> 身份执行，下同。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># apt-get install \</span><br><span class="line">isolinux \</span><br><span class="line">syslinux \</span><br><span class="line">xorriso \</span><br><span class="line">debootstrap \</span><br><span class="line">squashfs-tools</span><br></pre></td></tr></table></figure><h2 id="创建工作目录"><a href="#创建工作目录" class="headerlink" title="创建工作目录"></a>创建工作目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># mkdir ～&#x2F;livecd</span><br></pre></td></tr></table></figure><p>##下载Debian安装镜像，取得必要的引导及配置文件<br>Debian安装镜像可以从 <a href="http://mirrors.ustc.edu.cn/debian-cd/current/amd64/iso-cd/" target="_blank" rel="external nofollow noopener noreferrer">这儿</a> 下载，得到文件 <code>debian-8.7.1-amd64-CD-1.iso</code> 。然后执行命令，将该文件挂载到系统中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># mount debian-8.7.1-amd64-CD-1.iso &#x2F;mnt</span><br></pre></td></tr></table></figure><p>然后拷贝其中的 <code>boot</code> 目录和 <code>isolinux</code> 目录到工作目录 <code>~/livecd</code> 中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cp -rv &#x2F;mnt&#x2F;boot ~&#x2F;livecd</span><br><span class="line"># cp -rv &#x2F;mnt&#x2F;isolinux ~&#x2F;livecd</span><br></pre></td></tr></table></figure><p>然后修要分别修改配置文件 <code>~/livecd/boot/grub/grub.cfg</code> 和 <code>isolinux/isolinux.cfg</code> 内容如下：</p><h3 id="grub-cfg"><a href="#grub-cfg" class="headerlink" title="grub.cfg"></a>grub.cfg</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">if loadfont $prefix&#x2F;font.pf2 ; then</span><br><span class="line">  set gfxmode&#x3D;800x600</span><br><span class="line">  insmod efi_gop</span><br><span class="line">  insmod efi_uga</span><br><span class="line">  insmod video_bochs</span><br><span class="line">  insmod video_cirrus</span><br><span class="line">  insmod gfxterm</span><br><span class="line">  insmod png</span><br><span class="line">  terminal_output gfxterm</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if background_image &#x2F;isolinux&#x2F;splash.png; then</span><br><span class="line">  set color_normal&#x3D;light-gray&#x2F;black</span><br><span class="line">  set color_highlight&#x3D;white&#x2F;black</span><br><span class="line">else</span><br><span class="line">  set menu_color_normal&#x3D;cyan&#x2F;blue</span><br><span class="line">  set menu_color_highlight&#x3D;white&#x2F;blue</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">insmod play</span><br><span class="line">play 480 440 1</span><br><span class="line">set timeout&#x3D;0</span><br><span class="line">menuentry --hotkey&#x3D;i &#39;Install&#39; &#123;</span><br><span class="line">    set background_color&#x3D;black</span><br><span class="line">    linux    &#x2F;vmlinuz vga&#x3D;788 boot&#x3D;live quiet</span><br><span class="line">    initrd   &#x2F;initrd</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="isolinux-cfg"><a href="#isolinux-cfg" class="headerlink" title="isolinux.cfg"></a>isolinux.cfg</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"># D-I config version 2.0</span><br><span class="line"># search path for the c32 support libraries (libcom32, libutil etc.)</span><br><span class="line">path </span><br><span class="line">menu hshift 7</span><br><span class="line">menu width 61</span><br><span class="line"></span><br><span class="line">menu title Debian GNU&#x2F;Linux installer boot menu</span><br><span class="line">menu background splash.png</span><br><span class="line">menu color title* #FFFFFFFF *</span><br><span class="line">menu color border* #00000000 #00000000 none</span><br><span class="line">menu color sel* #ffffffff #76a1d0ff *</span><br><span class="line">menu color hotsel1;7;37;40 #ffffffff #76a1d0ff *</span><br><span class="line">menu color tabmsg* #ffffffff #00000000 *</span><br><span class="line">menu color help37;40 #ffdddd00 #00000000 none</span><br><span class="line"># XXX When adjusting vshift, take care that rows is set to a small</span><br><span class="line"># enough value so any possible menu will fit on the screen,</span><br><span class="line"># rather than falling off the bottom.</span><br><span class="line">menu vshift 12</span><br><span class="line">menu rows 10</span><br><span class="line">menu helpmsgrow 15</span><br><span class="line"># The command line must be at least one line from the bottom.</span><br><span class="line">menu cmdlinerow 16</span><br><span class="line">menu timeoutrow 16</span><br><span class="line">menu tabmsgrow 18</span><br><span class="line">menu tabmsg Press ENTER to boot or TAB to edit a menu entry</span><br><span class="line">default install</span><br><span class="line">label install</span><br><span class="line">menu label ^Install</span><br><span class="line">menu default</span><br><span class="line">kernel &#x2F;vmlinuz</span><br><span class="line">append vga&#x3D;788 initrd&#x3D;&#x2F;initrd boot&#x3D;live quiet</span><br><span class="line"></span><br><span class="line">#default vesamenu.c32</span><br><span class="line">default install</span><br><span class="line">prompt 0</span><br><span class="line">timeout 0</span><br></pre></td></tr></table></figure><h2 id="用debootstrap构建一个最小环境"><a href="#用debootstrap构建一个最小环境" class="headerlink" title="用debootstrap构建一个最小环境"></a>用debootstrap构建一个最小环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cd ~&#x2F;livecd &amp;&amp; su -</span><br><span class="line"># debootstrap --include&#x3D;linux-image-amd64,live-boot --component&#x3D;main,contrib,non-free --arch&#x3D;amd64 rootfs sid http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F;</span><br></pre></td></tr></table></figure><p>然后 <code>chroot</code> 进入这个最小环境中，做一些定制工作，包括修改root密码，hostname，安装软件，创建用户什么的，这一步我就不展开讲了，根据你自己的需求定制即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># chroot rootfs &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><h2 id="将linux内核和initrd复制到工作目录的最顶层"><a href="#将linux内核和initrd复制到工作目录的最顶层" class="headerlink" title="将linux内核和initrd复制到工作目录的最顶层"></a>将linux内核和initrd复制到工作目录的最顶层</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># cd ~&#x2F;livecd</span><br><span class="line"># cp rootfs&#x2F;boot&#x2F;linuz-*-amd64 vmlinuz</span><br><span class="line"># cp rootfs&#x2F;boot&#x2F;initrd.img* initrd</span><br></pre></td></tr></table></figure><h2 id="构建squashfs压缩文件"><a href="#构建squashfs压缩文件" class="headerlink" title="构建squashfs压缩文件"></a>构建squashfs压缩文件</h2><p>进入工作目录 <code>~/livecd</code> 创建新目录 <code>live</code> 然后把刚才得到的 <code>rootfs</code> 目录压缩成squashfs格式的文件放在 <code>live</code>目录下，重命名为<code>filesystem.squashfs</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># mkdir live</span><br><span class="line"># mksquashfs rootfs live&#x2F;filesystem.squashfs</span><br></pre></td></tr></table></figure><p>然后删除 <code>rootfs</code> 目录即可，或者把他移到其他地方，以备多次对 <code>LiveCD</code> 进行修改。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># rm -rf rootfs</span><br></pre></td></tr></table></figure><h2 id="构建iso文件"><a href="#构建iso文件" class="headerlink" title="构建iso文件"></a>构建iso文件</h2><p>最后一步就是构建定制的 <code>LiveCD</code>，这一步我们使用 <code>xorriso</code> 这个工具来进行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># cd livecd</span><br><span class="line"># xorriso -as mkisofs -r -V &#39;LiveCD&#39; \</span><br><span class="line">    -J -isohybrid-mbr &#x2F;usr&#x2F;lib&#x2F;ISOLINUX&#x2F;isohdpfx.bin \</span><br><span class="line">    -J -joliet-long  \</span><br><span class="line">    -b isolinux&#x2F;isolinux.bin -c isolinux&#x2F;boot.cat -no-emul-boot \</span><br><span class="line">    -boot-load-size 4 -boot-info-table -eltorito-alt-boot \</span><br><span class="line">    -e boot&#x2F;grub&#x2F;efi.img -no-emul-boot -isohybrid-gpt-basdat -isohybrid-apm-hfsplus livecd&#x2F;  \</span><br><span class="line">    -o livecd.iso</span><br></pre></td></tr></table></figure><p>完成之后，我们会得到一个 <code>livecd.iso</code> 的文件，这个就是我们制作出的 <code>LiveCD</code> ，可以把它dd到U盘中使用了。</p><h2 id="文章地址"><a href="#文章地址" class="headerlink" title="文章地址"></a>文章地址</h2><ul><li><a href="https://forums.debiancn.org/t/debian-livecd/582（**Debian" target="_blank" rel="external nofollow noopener noreferrer">https://forums.debiancn.org/t/debian-livecd/582（**Debian</a> 中文论坛**）</li></ul>]]></content>
    
    <summary type="html">
    
      首先，Debian 官方是提供了 LiveCD 的，但是存在一些问题，其中一个最大的问题，就是不支持UEFI启动，另外官方提供的 LiveCD 总是没有自己定制过的顺手，所以在这儿讲解一下如何创建一个自定义的 Debian LiveCD。
    
    </summary>
    
    
      <category term="live" scheme="https://www.ling218.cn/categories/live/"/>
    
    
      <category term="debian" scheme="https://www.ling218.cn/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>自定义 Ubuntu Server 16.04.2 安装 iso</title>
    <link href="https://www.ling218.cn/archives/cf3baf5f.html"/>
    <id>https://www.ling218.cn/archives/cf3baf5f.html</id>
    <published>2021-05-14T02:55:49.059Z</published>
    <updated>2021-05-11T15:34:02.922Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载-Ubuntu-Server-16-04-2-ISO"><a href="#下载-Ubuntu-Server-16-04-2-ISO" class="headerlink" title="下载 Ubuntu Server 16.04.2 ISO"></a>下载 Ubuntu Server 16.04.2 ISO</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;debian.linux.org.tw&#x2F;ubuntu-releases&#x2F;16.04.2&#x2F;ubuntu-16.04.2-server-amd64.iso**</span><br></pre></td></tr></table></figure><h2 id="挂载光盘"><a href="#挂载光盘" class="headerlink" title="挂载光盘"></a>挂载光盘</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -o loop ubuntu-16.04.2-server-amd64.iso &#x2F;mnt</span><br></pre></td></tr></table></figure><h2 id="复制目录"><a href="#复制目录" class="headerlink" title="复制目录"></a>复制目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~&#x2F;Ubuntu16042</span><br><span class="line">cp -a &#x2F;mnt&#x2F;* ~&#x2F;Ubuntu16042</span><br><span class="line">cp -r &#x2F;mnt&#x2F;.disk ~&#x2F;Ubuntu16042</span><br></pre></td></tr></table></figure><h2 id="修改-Ubuntu16042-isolinux-txt-cfg"><a href="#修改-Ubuntu16042-isolinux-txt-cfg" class="headerlink" title="修改 ~/Ubuntu16042/isolinux/txt.cfg"></a>修改 ~/Ubuntu16042/isolinux/txt.cfg</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vim ~&#x2F;Ubuntu16042&#x2F;isolinux&#x2F;txt.cfg</span><br><span class="line"></span><br><span class="line">default ainstall</span><br><span class="line">label ainstall</span><br><span class="line"> menu label ^Auto Install Ubuntu Server</span><br><span class="line"> kernel &#x2F;install&#x2F;vmlinuz</span><br><span class="line"> append file&#x3D;&#x2F;cdrom&#x2F;preseed&#x2F;aubuntu-server.seed vga&#x3D;788 initrd&#x3D;&#x2F;install&#x2F;initrd.gz quiet debian-installer&#x2F;language&#x3D;en debian-installer&#x2F;country&#x3D;TW console-setup&#x2F;ask_detect&#x3D;false keyboard-configuration&#x2F;layoutcode&#x3D;us debian-installer&#x2F;locale&#x3D;en_US ---</span><br><span class="line">label install</span><br><span class="line"> menu label ^Install Ubuntu Server</span><br><span class="line"> kernel &#x2F;install&#x2F;vmlinuz</span><br><span class="line"> append file&#x3D;&#x2F;cdrom&#x2F;preseed&#x2F;ubuntu-server.seed vga&#x3D;788 initrd&#x3D;&#x2F;install&#x2F;initrd.gz quiet ---</span><br></pre></td></tr></table></figure><h2 id="建立-Ubuntu16042-preseed-aubuntu-server-seed"><a href="#建立-Ubuntu16042-preseed-aubuntu-server-seed" class="headerlink" title="建立 ~/Ubuntu16042/preseed/aubuntu-server.seed"></a>建立 ~/Ubuntu16042/preseed/aubuntu-server.seed</h2><h3 id="准备安装-LAMP-OpenSSH-Server"><a href="#准备安装-LAMP-OpenSSH-Server" class="headerlink" title="准备安装 LAMP / OpenSSH Server"></a>准备安装 LAMP / OpenSSH Server</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">vim ~&#x2F;Ubuntu16042&#x2F;preseed&#x2F;aubuntu-server.seed</span><br><span class="line"></span><br><span class="line">d-i debian-installer&#x2F;locale string en_US.UTF-8</span><br><span class="line">d-i debian-installer&#x2F;locale string en_US</span><br><span class="line">d-i console-setup&#x2F;ask_detect boolean false</span><br><span class="line">d-i console-setup&#x2F;layout string USA</span><br><span class="line">d-i debian-installer&#x2F;language string en</span><br><span class="line">d-i debian-installer&#x2F;country string TW</span><br><span class="line">d-i console-setup&#x2F;ask_detect boolean false</span><br><span class="line">d-i keyboard-configuration&#x2F;xkb-keymap select us </span><br><span class="line">Default user, change</span><br><span class="line">d-i passwd&#x2F;root-login boolean true</span><br><span class="line">d-i passwd&#x2F;make-user boolean false</span><br><span class="line">d-i user-setup&#x2F;encrypt-home boolean false</span><br><span class="line">d-i user-setup&#x2F;allow-password-weak boolean true</span><br><span class="line">d-i netcfg&#x2F;choose_interface select auto</span><br><span class="line">d-i netcfg&#x2F;get_hostname string unassigned-hostname</span><br><span class="line">d-i netcfg&#x2F;get_domain string unassigned-domain</span><br><span class="line">d-i mirror&#x2F;country string manual</span><br><span class="line">d-i mirror&#x2F;http&#x2F;hostname string http:&#x2F;&#x2F;tw.archive.ubuntu.com</span><br><span class="line">d-i mirror&#x2F;http&#x2F;hostname string http:&#x2F;&#x2F;free.nchc.org.tw</span><br><span class="line">d-i mirror&#x2F;http&#x2F;directory string &#x2F;ubuntu</span><br><span class="line">d-i apt-setup&#x2F;services-select multiselect security</span><br><span class="line">d-i apt-setup&#x2F;security_host string free.nchc.org.tw</span><br><span class="line">d-i apt-setup&#x2F;security_path string &#x2F;ubuntu</span><br><span class="line">d-i mirror&#x2F;http&#x2F;proxy string</span><br><span class="line">d-i clock-setup&#x2F;utc boolean false</span><br><span class="line">d-i clock-setup&#x2F;ntp boolean true</span><br><span class="line">d-i time&#x2F;zone string Asia&#x2F;Taipei</span><br><span class="line">d-i partman&#x2F;confirm boolean true</span><br><span class="line">d-i partman&#x2F;choose_partition select finish</span><br><span class="line">d-i partman&#x2F;confirm_nooverwrite boolean true</span><br><span class="line">d-i partman-auto&#x2F;disk string &#x2F;dev&#x2F;[sv]da</span><br><span class="line">d-i partman-auto&#x2F;method string lvm</span><br><span class="line">d-i partman-auto&#x2F;choose_recipe select atomic</span><br><span class="line">d-i partman-lvm&#x2F;device_remove_lvm boolean true</span><br><span class="line">d-i partman-lvm&#x2F;confirm boolean true</span><br><span class="line">d-i partman-lvm&#x2F;confirm_nooverwrite boolean true</span><br><span class="line">d-i partman-auto-lvm&#x2F;guided_size string max</span><br><span class="line">d-i partman-partitioning&#x2F;confirm_write_new_label boolean true</span><br><span class="line">d-i grub-installer&#x2F;grub2_instead_of_grub_legacy boolean true</span><br><span class="line">d-i grub-installer&#x2F;only_debian boolean true</span><br><span class="line">d-i grub-installer&#x2F;bootdev string &#x2F;dev&#x2F;[sv]da</span><br><span class="line">d-i pkgsel&#x2F;update-policy select none</span><br><span class="line">d-i pkgsel&#x2F;include string unity ubuntu-desktop openssh-server</span><br><span class="line">tasksel tasksel&#x2F;first multiselect lamp-server, openssh-server</span><br><span class="line">d-i pkgsel&#x2F;include string openssh-server ntp build-essential rsync less vim ethtool curl lsscsi dstat htop strace</span><br><span class="line">d-i finish-install&#x2F;reboot_in_progress note</span><br></pre></td></tr></table></figure><h2 id="制作成-ISO-文件"><a href="#制作成-ISO-文件" class="headerlink" title="制作成 ISO 文件"></a>制作成 ISO 文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;Ubuntu16042</span><br><span class="line">mkisofs -r -V &quot;Ubuntu-Server 16.04.2&quot; -J -l -b isolinux&#x2F;isolinux.bin -c isolinux&#x2F;boot.cat -no-emul -boot-load-size 4 -boot-info-table -o ~&#x2F;ubuntu-16.04.2-server-amd6_0501.iso .</span><br></pre></td></tr></table></figure><h2 id="安装测试"><a href="#安装测试" class="headerlink" title="安装测试"></a>安装测试</h2><p>省略</p><h2 id="参考网站："><a href="#参考网站：" class="headerlink" title="参考网站："></a>参考网站：</h2><p><a href="https://github.com/express42/ubuntu-autoinstaller/blob/master/txt.cfg" target="_blank" rel="external nofollow noopener noreferrer">ubuntu-autoinstaller/txt.cfg at master · express42/ubuntu-autoinstaller · GitHub</a></p><p><a href="https://help.ubuntu.com/community/InstallCDCustomization" target="_blank" rel="external nofollow noopener noreferrer">InstallCDCustomization - Community Help Wiki</a></p><p><a href="https://www.hiroom2.com/2016/05/19/ubuntu-16-04-debian-8-run-pxe-boot-server-for-automated-install/" target="_blank" rel="external nofollow noopener noreferrer">Ubuntu 16.04 / Debian 8: Run PXE boot server for automated install - Narrow Escape</a></p><p><a href="https://help.ubuntu.com/16.04/installation-guide/i386/apbs04.html" target="_blank" rel="external nofollow noopener noreferrer">B.4. Contents of the preconfiguration file (for xenial)</a><br><a href="https://help.ubuntu.com/16.04/installation-guide/example-preseed.txt" target="_blank" rel="external nofollow noopener noreferrer">https://help.ubuntu.com/16.04/installation-guide/example-preseed.txt</a></p><p><a href="https://askubuntu.com/questions/122505/how-do-i-create-a-completely-unattended-install-of-ubuntu" target="_blank" rel="external nofollow noopener noreferrer">system installation - How do I create a completely unattended install of Ubuntu? - Ask Ubuntu</a></p>]]></content>
    
    <summary type="html">
    
      自定义安装 Ubuntu Server
    
    </summary>
    
    
      <category term="live" scheme="https://www.ling218.cn/categories/live/"/>
    
    
      <category term="ubuntu" scheme="https://www.ling218.cn/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>专业创建自定义实时 Debian Live CD</title>
    <link href="https://www.ling218.cn/archives/3be04a71.html"/>
    <id>https://www.ling218.cn/archives/3be04a71.html</id>
    <published>2021-05-14T02:55:49.057Z</published>
    <updated>2021-05-11T15:33:49.180Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装创建环境软件"><a href="#安装创建环境软件" class="headerlink" title="安装创建环境软件"></a>安装创建环境软件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># apt install live-build</span><br></pre></td></tr></table></figure><h2 id="加快-DebianLiveCD-创建速度"><a href="#加快-DebianLiveCD-创建速度" class="headerlink" title="加快 DebianLiveCD 创建速度"></a>加快 DebianLiveCD 创建速度</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># mkdir -p &#x2F;etc&#x2F;live</span><br><span class="line"># vim &#x2F;etc&#x2F;live&#x2F;build.conf</span><br><span class="line">LB_MIRROR_BOOTSTRAP&#x3D;&quot;http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F;&quot;</span><br><span class="line">LB_MIRROR_CHROOT_SECURITY&#x3D;&quot;http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F;&quot;</span><br><span class="line">LB_MIRROR_CHROOT_BACKPORTS&#x3D;&quot;http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F;&quot;</span><br></pre></td></tr></table></figure><h2 id="创建-DebianLiveCD"><a href="#创建-DebianLiveCD" class="headerlink" title="创建 DebianLiveCD"></a>创建 DebianLiveCD</h2><p>创建构建的过程如下：</p><ol><li>我们<code>lb config</code> 在空白目录中执行，生成一堆文件，这些文件代表了我们将来的ISO的文件结构。我们将参数传递给 <em>lb config</em>来个性化这些文件的生成。</li><li>我们通过手动修改文件结构来进一步个性化这些文件结构：添加要在ISO生成的不同步骤或ISO引导时执行的脚本，将文件添加到ISO的用户文件夹等。</li><li>我们执行<code>lb build</code>，读取这些文件和脚本并神奇地构建ISO，从而生成预期的 <em>.iso</em>文件。</li></ol><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># mkdir live</span><br><span class="line"># cd live</span><br><span class="line"># cp &#x2F;usr&#x2F;share&#x2F;doc&#x2F;live-build&#x2F;examples&#x2F;auto&#x2F;* auto&#x2F;</span><br><span class="line"># cat auto&#x2F;config</span><br><span class="line">#!&#x2F;bin&#x2F;sh</span><br><span class="line"></span><br><span class="line">set -e</span><br><span class="line"></span><br><span class="line">lb config noauto \</span><br><span class="line">        &quot;$&#123;@&#125;&quot;</span><br></pre></td></tr></table></figure><h3 id="添加个性化配置"><a href="#添加个性化配置" class="headerlink" title="添加个性化配置"></a>添加个性化配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># vim auto&#x2F;config</span><br><span class="line">#!&#x2F;bin&#x2F;sh</span><br><span class="line"></span><br><span class="line">set -e</span><br><span class="line"></span><br><span class="line">lb config noauto \</span><br><span class="line">    --mode debian \</span><br><span class="line">    --architectures i386 \</span><br><span class="line">    --debian-installer false \</span><br><span class="line">    --archive-areas &quot;main contrib non-free&quot; \</span><br><span class="line">    --apt-indices false \</span><br><span class="line">    --memtest none \</span><br><span class="line">    &quot;$&#123;@&#125;&quot;</span><br></pre></td></tr></table></figure><h3 id="为LiveCD安装软件"><a href="#为LiveCD安装软件" class="headerlink" title="为LiveCD安装软件"></a>为LiveCD安装软件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># echo vlc &gt;&gt; config&#x2F;package-lists&#x2F;my.list.chroot</span><br></pre></td></tr></table></figure><h3 id="开始创建"><a href="#开始创建" class="headerlink" title="开始创建"></a>开始创建</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># lb clean</span><br><span class="line"># lb build</span><br></pre></td></tr></table></figure><h2 id="原文地址"><a href="#原文地址" class="headerlink" title="原文地址"></a>原文地址</h2><ul><li><a href="https://www.bustawin.com/create-a-custom-live-debian-9-the-pro-way/#Speed-up_the_building_optional" target="_blank" rel="external nofollow noopener noreferrer">https://www.bustawin.com/create-a-custom-live-debian-9-the-pro-way/#Speed-up_the_building_optional</a></li><li><a href="https://github.com/ereuse/workbench-live" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/ereuse/workbench-live</a></li></ul>]]></content>
    
    <summary type="html">
    
      创建 LiveCD
    
    </summary>
    
    
      <category term="live" scheme="https://www.ling218.cn/categories/live/"/>
    
    
      <category term="debian" scheme="https://www.ling218.cn/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>项目：创建自定义Kali Linux ISO</title>
    <link href="https://www.ling218.cn/archives/8feaf38e.html"/>
    <id>https://www.ling218.cn/archives/8feaf38e.html</id>
    <published>2021-05-14T02:55:49.054Z</published>
    <updated>2021-05-11T15:33:36.298Z</updated>
    
    <content type="html"><![CDATA[<p>该存储库将允许您构建自定义的Kali ISO。主要好处是可以将其用作<a href="https://docs.kali.org/downloading/kali-linux-live-usb-install" target="_blank" rel="external nofollow noopener noreferrer">可启动USB驱动器</a>。</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>理想情况下，您应该<strong>在现有的Kali环境中</strong>构建自定义的Kali ISO <strong>。</strong>建议使用<a href="https://www.kali.org/downloads/" target="_blank" rel="external nofollow noopener noreferrer">轻量级</a>或虚拟化（<a href="https://www.offensive-security.com/kali-linux-vm-vmware-virtualbox-hyperv-image-download/" target="_blank" rel="external nofollow noopener noreferrer">VMware / VirtualBox</a>）映像。</p><p>作为<code>root</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install curl git live-build cdebootstrap</span><br></pre></td></tr></table></figure><h2 id="自定义"><a href="#自定义" class="headerlink" title="自定义"></a>自定义</h2><p>我在<a href="https://github.com/prateepb/kali-live-build/blob/master/kali-config/variant-custom" target="_blank" rel="external nofollow noopener noreferrer">kali-config / variant-custom</a>目录下使用了一个自定义变量。这包括：</p><ul><li><a href="https://github.com/prateepb/kali-live-build/blob/master/kali-config/variant-custom/package-lists/kali.list.chroot" target="_blank" rel="external nofollow noopener noreferrer">来自默认变体</a>（<code>kali-config/variant-custom/package-lists/kali.list.chroot</code>）的<a href="https://github.com/prateepb/kali-live-build/blob/master/kali-config/variant-custom/package-lists/kali.list.chroot" target="_blank" rel="external nofollow noopener noreferrer">所有软件包</a></li><li><a href="https://github.com/prateepb/kali-live-build/blob/master/kali-config/variant-custom/package-lists/custom.list.chroot" target="_blank" rel="external nofollow noopener noreferrer">根据我的喜好附加包</a>（<code>kali-config/variant-custom/package-lists/custom.list.chroot</code>）</li><li><a href="https://github.com/prateepb/kali-live-build/blob/master/kali-config/variant-custom/hooks/live/customise.chroot" target="_blank" rel="external nofollow noopener noreferrer">自定义脚本</a>（<code>kali-config/variant-custom/hooks/live/customise.chroot</code>）<ul><li>克隆<a href="https://github.com/prateepb/dotfiles" target="_blank" rel="external nofollow noopener noreferrer">我的个人点文件</a></li><li><a href="https://unix.stackexchange.com/questions/387843/how-can-i-resize-the-applications-menu-item-in-gnome" target="_blank" rel="external nofollow noopener noreferrer">调整gnome菜单的大小</a></li></ul></li></ul><p>我还在以下位置自定义了时区，键盘布局和语言环境：</p><ul><li><a href="https://github.com/prateepb/kali-live-build/blob/master/auto/config" target="_blank" rel="external nofollow noopener noreferrer"><code>auto/config</code></a></li><li><a href="https://github.com/prateepb/kali-live-build/blob/master/kali-config/variant-custom/hooks/live/persistence-menu.binary" target="_blank" rel="external nofollow noopener noreferrer"><code>kali-config/variant-custom/hooks/live/persistence-menu.binary</code></a></li></ul><h2 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h2><p>要构建和使用自定义变体：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd kali-live-build</span><br><span class="line">.&#x2F;build.sh --verbose --variant自定义</span><br></pre></td></tr></table></figure><p>完成后，可以在以下位置找到生成的ISO映像： <code>images/kali-linux-custom-rolling-amd64.iso</code></p><h2 id="代理构建"><a href="#代理构建" class="headerlink" title="代理构建"></a>代理构建</h2><p>如果您可能要运行多个构建，那么通过缓存代理（例如<a href="http://www.squid-cache.org/" target="_blank" rel="external nofollow noopener noreferrer">Squid）</a>路由所有内容很有用。这将显着加快后续运行。</p><p>例子<a href="https://github.com/prateepb/kali-live-build/blob/master/squid.conf" target="_blank" rel="external nofollow noopener noreferrer">squid.conf</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd kali-live-build</span><br><span class="line">apt-get install squid</span><br><span class="line">cp squid.conf &#x2F;etc&#x2F;squid&#x2F;squid.conf</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;squid开始</span><br></pre></td></tr></table></figure><p>现在，您可以<code>build.sh</code>使用<code>--apt-http-proxy</code>参数运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">出口http_proxy &#x3D; http：&#x2F;&#x2F; localhost：3128 &#x2F;</span><br><span class="line">.&#x2F;build.sh --verbose --variant自定义-\</span><br><span class="line">--apt-http-proxy &#x3D; $ &#123;http_proxy&#125;</span><br></pre></td></tr></table></figure><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><ul><li><code>https://github.com/prateepb/kali-live-build</code></li></ul>]]></content>
    
    <summary type="html">
    
      在现有的Kali环境中构建自定义的Kali ISO
    
    </summary>
    
    
      <category term="live" scheme="https://www.ling218.cn/categories/live/"/>
    
    
      <category term="kali" scheme="https://www.ling218.cn/tags/kali/"/>
    
  </entry>
  
  <entry>
    <title>项目：bash 脚本轻松生成实时 Linux ISO 镜像</title>
    <link href="https://www.ling218.cn/archives/b73d248a.html"/>
    <id>https://www.ling218.cn/archives/b73d248a.html</id>
    <published>2021-05-14T02:55:49.052Z</published>
    <updated>2021-05-11T15:33:21.431Z</updated>
    
    <content type="html"><![CDATA[<p>一个脚本可以轻松生成功能齐全的实时Linux ISO映像。这是基于<a href="http://github.com/ivandavidov/minimal" target="_blank" rel="external nofollow noopener noreferrer">Minimal Linux Live</a>的第一个发布版本，并在下一版本中进行了一些改进。已删除所有空行和注释，并且已修改脚本以减少总长度。</p><p>下面的脚本使用<strong>Linux内核4.19.12</strong>，<strong>BusyBox 1.29.3</strong>和<strong>Syslinux 6.03</strong>。源包将自动下载和编译。如果您使用的是Ubuntu或Linux Mint，则应该能够通过执行以下命令来解决所有构建依赖项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># sudo apt install wget make gawk gcc bc bison flex xorriso libelf-dev libssl-dev</span><br></pre></td></tr></table></figure><p>之后，只需运行以下脚本。它不需要 <strong>root</strong> 权限。最后，生成<strong>minimal_linux_live.iso</strong>文件，在执行脚本的同一目录中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;kernel.org&#x2F;linux&#x2F;kernel&#x2F;v4.x&#x2F;linux-4.19.12.tar.xz</span><br><span class="line">wget http:&#x2F;&#x2F;busybox.net&#x2F;downloads&#x2F;busybox-1.29.3.tar.bz2</span><br><span class="line">wget http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;kernel.org&#x2F;linux&#x2F;utils&#x2F;boot&#x2F;syslinux&#x2F;syslinux-6.03.tar.xz</span><br><span class="line">mkdir isoimage</span><br><span class="line">tar -xvf linux-4.19.12.tar.xz</span><br><span class="line">tar -xvf busybox-1.29.3.tar.bz2</span><br><span class="line">tar -xvf syslinux-6.03.tar.xz</span><br><span class="line">cd busybox-1.29.3</span><br><span class="line">make distclean defconfig</span><br><span class="line">sed -i &quot;s|.*CONFIG_STATIC.*|CONFIG_STATIC&#x3D;y|&quot; .config</span><br><span class="line">make busybox install</span><br><span class="line">cd _install</span><br><span class="line">rm -f linuxrc</span><br><span class="line">mkdir dev proc sys</span><br><span class="line">echo &#39;#!&#x2F;bin&#x2F;sh&#39; &gt; init</span><br><span class="line">echo &#39;dmesg -n 1&#39; &gt;&gt; init</span><br><span class="line">echo &#39;mount -t devtmpfs none &#x2F;dev&#39; &gt;&gt; init</span><br><span class="line">echo &#39;mount -t proc none &#x2F;proc&#39; &gt;&gt; init</span><br><span class="line">echo &#39;mount -t sysfs none &#x2F;sys&#39; &gt;&gt; init</span><br><span class="line">echo &#39;setsid cttyhack &#x2F;bin&#x2F;sh&#39; &gt;&gt; init</span><br><span class="line">chmod +x init</span><br><span class="line">find . | cpio -R root:root -H newc -o | gzip &gt; ..&#x2F;..&#x2F;isoimage&#x2F;rootfs.gz</span><br><span class="line">cd ..&#x2F;..&#x2F;linux-4.19.12</span><br><span class="line">make mrproper defconfig bzImage</span><br><span class="line">cp arch&#x2F;x86&#x2F;boot&#x2F;bzImage ..&#x2F;isoimage&#x2F;kernel.gz</span><br><span class="line">cd ..&#x2F;isoimage</span><br><span class="line">cp ..&#x2F;syslinux-6.03&#x2F;bios&#x2F;core&#x2F;isolinux.bin .</span><br><span class="line">cp ..&#x2F;syslinux-6.03&#x2F;bios&#x2F;com32&#x2F;elflink&#x2F;ldlinux&#x2F;ldlinux.c32 .</span><br><span class="line">echo &#39;default kernel.gz initrd&#x3D;rootfs.gz&#39; &gt; .&#x2F;isolinux.cfg</span><br><span class="line">xorriso \</span><br><span class="line">  -as mkisofs \</span><br><span class="line">  -o ..&#x2F;minimal_linux_live.iso \</span><br><span class="line">  -b isolinux.bin \</span><br><span class="line">  -c boot.cat \</span><br><span class="line">  -no-emul-boot \</span><br><span class="line">  -boot-load-size 4 \</span><br><span class="line">  -boot-info-table \</span><br><span class="line">  .&#x2F;</span><br><span class="line">cd ..</span><br></pre></td></tr></table></figure><p>请注意，此脚本生成非常小的实时Linux操作系统，仅支持shell，不支持网络。网络功能已在<a href="http://github.com/ivandavidov/minimal" target="_blank" rel="external nofollow noopener noreferrer">Minimal Linux Live</a>项目中正确实现，该项目具有广泛的文档记录和更丰富的功能，但仍然可以生成非常小的实时Linux ISO映像。</p>]]></content>
    
    <summary type="html">
    
      一个脚本可以轻松生成功能齐全的实时Linux ISO映像
    
    </summary>
    
    
      <category term="live" scheme="https://www.ling218.cn/categories/live/"/>
    
    
      <category term="bash" scheme="https://www.ling218.cn/tags/bash/"/>
    
  </entry>
  
  <entry>
    <title>使用 Debian-Live 创建小型 Debain/Ubuntu LiveCD</title>
    <link href="https://www.ling218.cn/archives/c2eb39f.html"/>
    <id>https://www.ling218.cn/archives/c2eb39f.html</id>
    <published>2021-05-14T02:55:49.050Z</published>
    <updated>2021-05-11T15:33:07.440Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装构建环境的应用程序"><a href="#安装构建环境的应用程序" class="headerlink" title="安装构建环境的应用程序"></a>安装构建环境的应用程序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># apt install \</span><br><span class="line">live-build \</span><br><span class="line">debootstrap \</span><br><span class="line">xorriso \</span><br><span class="line">squashfs-tools \</span><br><span class="line">live-boot</span><br></pre></td></tr></table></figure><h2 id="创建最小化UbuntuLiveCD"><a href="#创建最小化UbuntuLiveCD" class="headerlink" title="创建最小化UbuntuLiveCD"></a>创建最小化UbuntuLiveCD</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># mkdir ubuntu-livecd</span><br><span class="line"># cd ubuntu-livecd</span><br><span class="line"># lb config --mode &quot;ubuntu&quot;</span><br><span class="line"># lb config -d &quot;eoan&quot;</span><br><span class="line"># lb config -p minimal</span><br><span class="line"># lb config --parent-distribution &quot;eoan&quot;</span><br><span class="line"># lb config --parent-archive-areas &quot;main universe&quot;</span><br><span class="line"># lb config --mirror-bootstrap &quot;http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F;&quot;</span><br><span class="line"># lb config --mirror-chroot &quot;http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F;&quot;</span><br><span class="line"># lb config --mirror-binary &quot;http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F;&quot;</span><br><span class="line"># lb build</span><br></pre></td></tr></table></figure><h2 id="创建DebianLiveCD"><a href="#创建DebianLiveCD" class="headerlink" title="创建DebianLiveCD"></a>创建DebianLiveCD</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># mkidr debian-livecd</span><br><span class="line"># cd debian-livecd</span><br><span class="line"># lb config --mode &quot;debian&quot;</span><br><span class="line"># lb config -d &quot;stretch&quot;</span><br><span class="line"># lb config -p minimal</span><br><span class="line"># lb config --parent-distribution &quot;stretch&quot;</span><br><span class="line"># lb config --username future</span><br><span class="line"># lb config --parent-archive-areas &quot;main non-free contrib&quot;</span><br><span class="line"># lb config --mirror-bootstrap &quot;http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;debian&#x2F;&quot;</span><br><span class="line"># lb config --mirror-chroot &quot;http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;debian&#x2F;&quot;</span><br><span class="line"># lb config --mirror-binary &quot;http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;debian&#x2F;&quot;</span><br><span class="line"># lb config --mirror-chroot-security &quot;http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F;&quot;</span><br><span class="line"># lb config --mirror-binary-security &quot;http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F;&quot;</span><br><span class="line"># lb config --mirror-chroot-volatile &quot;http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F;&quot;</span><br><span class="line"># lb config --mirror-debian-installer &quot;http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F;&quot;</span><br></pre></td></tr></table></figure><p>为DebianLiveCD添加软件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># cat &lt;&lt; EOF &gt; config&#x2F;package-lists&#x2F;custom.list.chroot</span><br><span class="line">byobu</span><br><span class="line">bzip2</span><br><span class="line">ca-certificates</span><br><span class="line">curl</span><br><span class="line">dnsutils</span><br><span class="line">dstat</span><br><span class="line">ftp</span><br><span class="line">isc-dhcp-client</span><br><span class="line">less</span><br><span class="line">lftp</span><br><span class="line">lsb-release</span><br><span class="line">lsof</span><br><span class="line">lsscsi</span><br><span class="line">net-tools</span><br><span class="line">nmap</span><br><span class="line">ntfs-3g</span><br><span class="line">ntpdate</span><br><span class="line">openssh-client</span><br><span class="line">openssl</span><br><span class="line">parted</span><br><span class="line">patch</span><br><span class="line">procps</span><br><span class="line">psmisc</span><br><span class="line">stress</span><br><span class="line">tcpdump</span><br><span class="line">tree</span><br><span class="line">unzip</span><br><span class="line">vim</span><br><span class="line">wget</span><br><span class="line">whois</span><br><span class="line">zsh</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="开始构建DebainLiveCD"><a href="#开始构建DebainLiveCD" class="headerlink" title="开始构建DebainLiveCD"></a>开始构建DebainLiveCD</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># lb build</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      在很多情况下，您都希望从外部媒体启动操作系统并在服务器上执行一些维护。
    
    </summary>
    
    
      <category term="live" scheme="https://www.ling218.cn/categories/live/"/>
    
    
      <category term="debian" scheme="https://www.ling218.cn/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>使用 Debian-Live 创建 LiveCD</title>
    <link href="https://www.ling218.cn/archives/9169e7b2.html"/>
    <id>https://www.ling218.cn/archives/9169e7b2.html</id>
    <published>2021-05-14T02:55:49.047Z</published>
    <updated>2021-05-11T15:32:53.447Z</updated>
    
    <content type="html"><![CDATA[<h2 id="操作环境"><a href="#操作环境" class="headerlink" title="操作环境"></a>操作环境</h2><ul><li><strong>Debian10 (Buster)</strong></li></ul><h2 id="添加中文源"><a href="#添加中文源" class="headerlink" title="添加中文源"></a>添加中文源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># cat &lt;&lt; EOF &gt; &#x2F;etc&#x2F;apt&#x2F;sources.list</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;debian&#x2F; buster main contrib non-free</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debain&#x2F; buster main contrib non-free</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F; buster main contrib non-free</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="安装构建环境的应用程序"><a href="#安装构建环境的应用程序" class="headerlink" title="安装构建环境的应用程序"></a>安装构建环境的应用程序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># apt update</span><br><span class="line"># apt install \</span><br><span class="line">live-build \</span><br><span class="line">debootstrap \</span><br><span class="line">xorriso \</span><br><span class="line">squashfs-tools</span><br></pre></td></tr></table></figure><h2 id="创建最小化的LiveCD"><a href="#创建最小化的LiveCD" class="headerlink" title="创建最小化的LiveCD"></a>创建最小化的LiveCD</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># mkdir livecd &amp;&amp; cd livecd</span><br><span class="line"># lb clean</span><br><span class="line"># lb build</span><br></pre></td></tr></table></figure><h2 id="创建带有救援工具的LiveCD"><a href="#创建带有救援工具的LiveCD" class="headerlink" title="创建带有救援工具的LiveCD"></a>创建带有救援工具的LiveCD</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># mkdir livecd &amp;&amp; cd livecd</span><br><span class="line"># lb clean</span><br><span class="line"># lb config --bootappend-live &quot;boot&#x3D;live components locales&#x3D;zh_CN.UTF-8 keyboard-layouts&#x3D;zh&quot;</span><br><span class="line"># echo &quot;aptitude gdebi mc less testdisk ntfs-3g exfat-fuse exfat-utils parted parted-doc links2 gddrescue memtester nullmailer smartmontools lm-sensors&quot; &gt;&gt; config&#x2F;package-lists&#x2F;terminal-rescue.list.chroot</span><br><span class="line"># lb build</span><br></pre></td></tr></table></figure><h2 id="创建带有XFCE桌面的LiveCD"><a href="#创建带有XFCE桌面的LiveCD" class="headerlink" title="创建带有XFCE桌面的LiveCD"></a>创建带有XFCE桌面的LiveCD</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># lb clean</span><br><span class="line"># lb config --bootappend-live &quot;boot&#x3D;live components locales&#x3D;zh_CN.UTF-8 keyboard-layouts&#x3D;zh&quot;</span><br><span class="line"># echo &quot;task-german-desktop task-xfce-desktop aptitude bleachbit bluez bluez-hcidump bluez-tools python-bluez bluez hwinfo hwloc libhwloc-plugins libhwloc-doc linux-cpupower gdebi hdparm hotswap hotswap-gui hotswap-text parted parted-doc gparted safecopy testdisk virt-manager wammu distro-info osinfo-db-tools emacs jedit libreoffice libreoffice-l10n-de libreoffice-help-de libreoffice-pdfimport lyx childsplay childsplay-alphabet-sounds-de pysolfc pysolfc-cardsets etherape simple-scan nautilus rhythmbox digikam digikam-doc gtkam gtkam-gimp gimp gimp-data-extras gimp-dds gimp-gap gimp-gluas gimp-gmic gimp-gutenprint gimp-lensfun gimp-plugin-registry gimp-texturize gimp-ufraw gimp-help-de gimp-help-en gwenview inkscape krita krita-l10n okular okular-backend-odp okular-backend-odt okular-extra-backends kdiff3 kdiff3-doc konsole nullmailer icedove icedove-l10n-de hwdata isenkram inxi undistract-me ethstats ethstatus ethtool gftp hashcat macchanger qbittorrent rsync grsync pidgin uget wicd wicd-gtk wifi-radar dosbox dvdisaster dvdisaster-doc exfat-fuse exfat-utils isomaster ntfs-3g screen screenie alsa-tools alsa-tools-gui kile kile-doc kile-l10n less clamav clamdscan clamtk doublecmd-gtk doublecmd-plugins gddrescue ddrescueview locate mbw mc memtester gscan2pdf hddtemp lm-sensors smartmontools smart-notifier gsmartcontrol ultracopier unison-gtk handbrake handbrake-cli recordmydesktop gtk-recordmydesktop vlc vlc-l10n chromium chromium-l10n firefox-esr firefox-esr-l10n-de firefox-esr-ublock-origin firefox-esr-toggle-proxy firefox-esr-useragentswitcher firefox-esr-webdeveloper firefox-esr-noscript firefox-esr-https-everywhere firefox-esr-downthemall links2 privoxy wireless-tools wireshark guake mesa-utils mesa-utils-extra terminator totem kdenlive openshot simplescreenrecorder smplayer nload iftop iptraf-ng nethogs bmon slurm tcptrack vnstat bwm-ng cbm speedometer pktstat ifstat&quot; &gt;&gt; config&#x2F;package-lists&#x2F;xfce-desktop.list.chroot</span><br><span class="line"># lb build</span><br></pre></td></tr></table></figure><h2 id="创建带有XFCE桌面的LiveCD-1"><a href="#创建带有XFCE桌面的LiveCD-1" class="headerlink" title="创建带有XFCE桌面的LiveCD"></a>创建带有XFCE桌面的LiveCD</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># lb clean</span><br><span class="line"># lb config --bootappend-live &quot;boot&#x3D;live components locales&#x3D;zh_CN.UTF-8 keyboard-layouts&#x3D;zh&quot;</span><br><span class="line"># echo &quot;task-german-desktop task-xfce-desktop games-finest-light&quot; &gt;&gt; config&#x2F;package-lists&#x2F;xfce-desktop-games-finest-light.list.chroot</span><br><span class="line"># lb build</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      创建 LiveCD
    
    </summary>
    
    
      <category term="live" scheme="https://www.ling218.cn/categories/live/"/>
    
    
      <category term="debian" scheme="https://www.ling218.cn/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>使用 bash 脚本创建自定义的 Debian Live ISO</title>
    <link href="https://www.ling218.cn/archives/e7b274ff.html"/>
    <id>https://www.ling218.cn/archives/e7b274ff.html</id>
    <published>2021-05-14T02:55:49.045Z</published>
    <updated>2021-05-11T15:32:39.424Z</updated>
    
    <content type="html"><![CDATA[<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><ul><li><a href="https://gitlab.com/ling218" target="_blank" rel="external nofollow noopener noreferrer">https://gitlab.com/ling218</a></li></ul><h2 id="操作环境"><a href="#操作环境" class="headerlink" title="操作环境"></a>操作环境</h2><ul><li>Debian 10 Buster</li></ul><h2 id="自定义"><a href="#自定义" class="headerlink" title="自定义"></a>自定义</h2><ul><li>user: root</li><li>passwd：toor</li><li>hostname: live</li><li>mirror: <a href="http://mirrors.ustc.edu.cn/debian/" target="_blank" rel="external nofollow noopener noreferrer">http://mirrors.ustc.edu.cn/debian/</a></li></ul><h2 id="运行方式"><a href="#运行方式" class="headerlink" title="运行方式"></a>运行方式</h2><ul><li><code>nano build.sh</code> #把下列脚本的内容复制到该脚本</li><li><code>chmod u+x build.sh</code></li><li><code>./build.sh</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">#</span><br><span class="line"># Debian Live Image Custom</span><br><span class="line">#</span><br><span class="line"># Author: Mathias Fredriksson</span><br><span class="line"></span><br><span class="line">set -e</span><br><span class="line"></span><br><span class="line">IN_CHROOT&#x3D;0</span><br><span class="line">if [[ $1 &#x3D;&#x3D; chroot ]]; then</span><br><span class="line">IN_CHROOT&#x3D;1</span><br><span class="line">shift</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">SCRIPT&#x3D;&quot;$0&quot;</span><br><span class="line">MIRROR&#x3D;&quot;http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;debian&#x2F;&quot;</span><br><span class="line">#WORK&#x3D;$(mktemp -d -t live-image.XXXX)</span><br><span class="line">WORK&#x3D;$HOME&#x2F;build</span><br><span class="line">CHROOT&#x3D;&quot;$WORK&#x2F;chroot&quot;</span><br><span class="line">mkdir -p &quot;$WORK&quot;</span><br><span class="line"></span><br><span class="line">prepare() &#123;</span><br><span class="line">apt-get -y install \</span><br><span class="line">debootstrap \</span><br><span class="line">squashfs-tools \</span><br><span class="line">xorriso \</span><br><span class="line">grub-pc-bin \</span><br><span class="line">grub-efi-amd64-bin \</span><br><span class="line">mtools</span><br><span class="line"></span><br><span class="line">debootstrap \</span><br><span class="line">--arch&#x3D;amd64 \</span><br><span class="line">--variant&#x3D;minbase \</span><br><span class="line">stretch \</span><br><span class="line">&quot;$CHROOT&quot; \</span><br><span class="line">$MIRROR</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cont_in_chroot() &#123;</span><br><span class="line">local name</span><br><span class="line"></span><br><span class="line">name&#x3D;&quot;$(basename &quot;$SCRIPT&quot;)&quot;</span><br><span class="line">cp -a &quot;$SCRIPT&quot; &quot;$CHROOT&quot;</span><br><span class="line"></span><br><span class="line">mount --rbind &#x2F;dev &quot;$CHROOT&quot;&#x2F;dev</span><br><span class="line">mount --make-rslave &quot;$CHROOT&quot;&#x2F;dev</span><br><span class="line">mount --rbind &#x2F;proc &quot;$CHROOT&quot;&#x2F;proc</span><br><span class="line">mount --make-rslave &quot;$CHROOT&quot;&#x2F;proc</span><br><span class="line">mount --rbind &#x2F;sys &quot;$CHROOT&quot;&#x2F;sys</span><br><span class="line">mount --make-rslave &quot;$CHROOT&quot;&#x2F;sys</span><br><span class="line"></span><br><span class="line">chroot &quot;$CHROOT&quot; &#x2F;bin&#x2F;bash .&#x2F;&quot;$name&quot; chroot &quot;$@&quot;</span><br><span class="line"></span><br><span class="line"># Try to unmount a few times since this doesn&#39;t alway work on the first try...</span><br><span class="line">grep &quot;$CHROOT&quot; &#x2F;proc&#x2F;mounts | cut -f2 -d&quot; &quot; | sort -r | xargs umount -n || \</span><br><span class="line">grep &quot;$CHROOT&quot; &#x2F;proc&#x2F;mounts | cut -f2 -d&quot; &quot; | sort -r | xargs umount -n || \</span><br><span class="line">grep &quot;$CHROOT&quot; &#x2F;proc&#x2F;mounts | cut -f2 -d&quot; &quot; | sort -r | xargs umount -n</span><br><span class="line"></span><br><span class="line">rm &quot;$CHROOT&#x2F;$name&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">chroot_prepare() &#123;</span><br><span class="line">echo live &gt; &#x2F;etc&#x2F;hostname</span><br><span class="line"></span><br><span class="line"># Set root password to &#39;live&#39;.</span><br><span class="line">echo $&#39;toor\ntoor&#39; | passwd root</span><br><span class="line"></span><br><span class="line">apt-get update</span><br><span class="line">apt-get -y install --no-install-recommends \</span><br><span class="line">linux-image-amd64 \</span><br><span class="line">live-boot \</span><br><span class="line">systemd-sysv</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">chroot_install_tools() &#123;</span><br><span class="line">cat &lt;&lt;-EOS &gt; &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;contrib-non-free.list</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;debian&#x2F; stretch main contrib non-free</span><br><span class="line">EOS</span><br><span class="line"></span><br><span class="line">apt update</span><br><span class="line">apt-get -y install --no-install-recommends \</span><br><span class="line">grub-pc-bin \</span><br><span class="line">grub-efi-amd64-bin \</span><br><span class="line">sudo \</span><br><span class="line">curl \</span><br><span class="line">hdparm \</span><br><span class="line">sdparm \</span><br><span class="line">pciutils \</span><br><span class="line">usbutils \</span><br><span class="line">dnsutils \</span><br><span class="line">moreutils \</span><br><span class="line">net-tools \</span><br><span class="line">dosfstools \</span><br><span class="line">openssh-server \</span><br><span class="line">openssh-client \</span><br><span class="line">nano \</span><br><span class="line">vim \</span><br><span class="line">zsh \</span><br><span class="line">lsof \</span><br><span class="line">lshw \</span><br><span class="line">less \</span><br><span class="line">rsync \</span><br><span class="line">smartmontools \</span><br><span class="line">intel-microcode \</span><br><span class="line">cryptsetup \</span><br><span class="line">lvm2 \</span><br><span class="line">mdadm</span><br><span class="line"></span><br><span class="line">chsh -s &#x2F;bin&#x2F;zsh</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">chroot_install_zfs() &#123;</span><br><span class="line">cat &lt;&lt;-EOS &gt; &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;zfs.list</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F; stretch-backports main contrib non-free</span><br><span class="line">EOS</span><br><span class="line"></span><br><span class="line">apt-get update</span><br><span class="line">apt-get -y install dpkg-dev linux-headers-amd64</span><br><span class="line">apt-get -y install -t stretch-backports zfs-dkms</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">chroot_finalize() &#123;</span><br><span class="line">apt-get clean</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">finalize() &#123;</span><br><span class="line">mkdir -p &quot;$WORK&quot;&#x2F;&#123;scratch,image&#x2F;live&#125;</span><br><span class="line"></span><br><span class="line">mksquashfs \</span><br><span class="line">&quot;$CHROOT&quot; \</span><br><span class="line">&quot;$WORK&quot;&#x2F;image&#x2F;live&#x2F;filesystem.squashfs \</span><br><span class="line">-e boot</span><br><span class="line"></span><br><span class="line">cp &quot;$CHROOT&quot;&#x2F;boot&#x2F;vmlinuz-* &quot;$CHROOT&quot;&#x2F;boot&#x2F;initrd.img-* \</span><br><span class="line">&quot;$WORK&quot;&#x2F;image&#x2F;live</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt; &quot;$WORK&quot;&#x2F;scratch&#x2F;grub.cfg</span><br><span class="line">insmod all_video</span><br><span class="line">insmod play</span><br><span class="line">play 960 440 1 0 4 440 1</span><br><span class="line">if [ \$&#123;iso_path&#125; ] ; then</span><br><span class="line">  set loopback&#x3D;&quot;findiso&#x3D;\$&#123;iso_path&#125;&quot;</span><br><span class="line">fi</span><br><span class="line">search --set&#x3D;root --file &#x2F;DEBIAN_LIVE</span><br><span class="line">set default&#x3D;&quot;0&quot;</span><br><span class="line">set timeout&#x3D;5</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">(cd &quot;$CHROOT&quot;&#x2F;boot || exit 1</span><br><span class="line">for kernel in vmlinuz-*; do</span><br><span class="line">version&#x3D;$&#123;kernel#vmlinuz-&#125;</span><br><span class="line">cat &lt;&lt;EOF &gt;&gt; &quot;$WORK&quot;&#x2F;scratch&#x2F;grub.cfg</span><br><span class="line">menuentry &quot;Debian GNU&#x2F;Linux Live (kernel $version)&quot; &#123;</span><br><span class="line">  linux  &#x2F;live&#x2F;vmlinuz-$version boot&#x3D;live components &quot;\$&#123;loopback&#125;&quot;</span><br><span class="line">  initrd &#x2F;live&#x2F;initrd.img-$version</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">done</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"># Create file used by grub to search for boot device.</span><br><span class="line">touch &quot;$WORK&quot;&#x2F;image&#x2F;DEBIAN_LIVE</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">create_iso() &#123;</span><br><span class="line">grub-mkstandalone \</span><br><span class="line">--format&#x3D;x86_64-efi \</span><br><span class="line">--output&#x3D;&quot;$WORK&quot;&#x2F;scratch&#x2F;bootx64.efi \</span><br><span class="line">--locales&#x3D;&quot;&quot; \</span><br><span class="line">--fonts&#x3D;&quot;&quot; \</span><br><span class="line">&quot;boot&#x2F;grub&#x2F;grub.cfg&#x3D;$WORK&#x2F;scratch&#x2F;grub.cfg&quot;</span><br><span class="line"></span><br><span class="line">(cd &quot;$WORK&quot;&#x2F;scratch</span><br><span class="line">dd if&#x3D;&#x2F;dev&#x2F;zero of&#x3D;efiboot.img bs&#x3D;1M count&#x3D;10</span><br><span class="line">mkfs.vfat efiboot.img</span><br><span class="line">mmd -i efiboot.img efi efi&#x2F;boot</span><br><span class="line">mcopy -i efiboot.img .&#x2F;bootx64.efi ::efi&#x2F;boot&#x2F;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">grub-mkstandalone \</span><br><span class="line">--format&#x3D;i386-pc \</span><br><span class="line">--output&#x3D;&quot;$WORK&quot;&#x2F;scratch&#x2F;core.img \</span><br><span class="line">--install-modules&#x3D;&quot;linux normal iso9660 biosdisk memdisk search tar ls&quot; \</span><br><span class="line">--modules&#x3D;&quot;linux normal iso9660 biosdisk search&quot; \</span><br><span class="line">--locales&#x3D;&quot;&quot; \</span><br><span class="line">--fonts&#x3D;&quot;&quot; \</span><br><span class="line">&quot;boot&#x2F;grub&#x2F;grub.cfg&#x3D;$WORK&#x2F;scratch&#x2F;grub.cfg&quot;</span><br><span class="line"></span><br><span class="line">cat &#x2F;usr&#x2F;lib&#x2F;grub&#x2F;i386-pc&#x2F;cdboot.img &quot;$WORK&quot;&#x2F;scratch&#x2F;core.img \</span><br><span class="line">&gt; &quot;$WORK&quot;&#x2F;scratch&#x2F;bios.img</span><br><span class="line"></span><br><span class="line">xorriso \</span><br><span class="line">-as mkisofs \</span><br><span class="line">-iso-level 3 \</span><br><span class="line">-full-iso9660-filenames \</span><br><span class="line">-volid &quot;DEBIAN_LIVE&quot; \</span><br><span class="line">-eltorito-boot boot&#x2F;grub&#x2F;bios.img \</span><br><span class="line">-no-emul-boot \</span><br><span class="line">-boot-load-size 4 \</span><br><span class="line">-boot-info-table \</span><br><span class="line">--eltorito-catalog boot&#x2F;grub&#x2F;boot.cat \</span><br><span class="line">--grub2-boot-info \</span><br><span class="line">--grub2-mbr &#x2F;usr&#x2F;lib&#x2F;grub&#x2F;i386-pc&#x2F;boot_hybrid.img \</span><br><span class="line">-eltorito-alt-boot \</span><br><span class="line">-e EFI&#x2F;efiboot.img \</span><br><span class="line">-no-emul-boot \</span><br><span class="line">-append_partition 2 0xef &quot;$WORK&quot;&#x2F;scratch&#x2F;efiboot.img \</span><br><span class="line">-output &quot;$WORK&#x2F;ling218_linux.iso&quot; \</span><br><span class="line">-graft-points \</span><br><span class="line">&quot;$WORK&#x2F;image&quot; \</span><br><span class="line">&#x2F;boot&#x2F;grub&#x2F;bios.img&#x3D;&quot;$WORK&quot;&#x2F;scratch&#x2F;bios.img \</span><br><span class="line">&#x2F;EFI&#x2F;efiboot.img&#x3D;&quot;$WORK&quot;&#x2F;scratch&#x2F;efiboot.img</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (( IN_CHROOT )); then</span><br><span class="line">chroot_prepare</span><br><span class="line">chroot_install_tools</span><br><span class="line">chroot_install_zfs</span><br><span class="line">chroot_finalize</span><br><span class="line">exit 0</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">prepare</span><br><span class="line">cont_in_chroot &quot;$@&quot;</span><br><span class="line">finalize</span><br><span class="line">create_iso</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      实操记录
    
    </summary>
    
    
      <category term="live" scheme="https://www.ling218.cn/categories/live/"/>
    
    
      <category term="debian" scheme="https://www.ling218.cn/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>如何构建可安装的 DEBIAN LIVE CD</title>
    <link href="https://www.ling218.cn/archives/fa8c066e.html"/>
    <id>https://www.ling218.cn/archives/fa8c066e.html</id>
    <published>2021-05-14T02:55:49.042Z</published>
    <updated>2021-05-11T15:32:25.838Z</updated>
    
    <content type="html"><![CDATA[<h2 id="它是什么？"><a href="#它是什么？" class="headerlink" title="它是什么？"></a>它是什么？</h2><p>Live-build（以前称为live-helper）是一个命令行工具，其中包含用于从配置目录构建实时系统的组件。它是一组脚本，用于完全自动化地构建debian live系统映像，并自定义构建Live映像的各个方面。安装时，Live-build会使用三个命令：lb clean清理chroot环境，lb config指定构建选项以及lb build开始构建。显然lb config，这将是唯一困难的命令。</p><p>让我们从您最喜欢的终端仿真器开始，并在您想要的任何目录下工作（我从mate-terminal转储我的位置开始/home/user）。</p><h2 id="安装实时构建工具"><a href="#安装实时构建工具" class="headerlink" title="安装实时构建工具"></a>安装实时构建工具</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su -</span><br><span class="line">apt-get update</span><br><span class="line">apt-get install live-build</span><br></pre></td></tr></table></figure><h2 id="使用实时构建"><a href="#使用实时构建" class="headerlink" title="使用实时构建"></a>使用实时构建</h2><p>现在，我们为现场CD项目创建一个文件夹，以使所有内容都保持良好状态。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir live</span><br><span class="line">cd live</span><br><span class="line">lb clean</span><br></pre></td></tr></table></figure><p>现在，我们为lb config创建脚本。<br>使用除config之外的任何名称保存此脚本，否则lb config将无法创建/usr/lib/live/build/config/common（我称为tempy）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">lb config \</span><br><span class="line">--mode debian \</span><br><span class="line">--system live \</span><br><span class="line">--interactive shell \</span><br><span class="line">--distribution jessie \</span><br><span class="line">--debian-installer live \</span><br><span class="line">--architecture i386 \</span><br><span class="line">--archive-areas &quot;main contrib non-free&quot; \</span><br><span class="line">--security true \</span><br><span class="line">--updates true \</span><br><span class="line">--binary-images iso-hybrid \</span><br><span class="line">--memtest memtest86+ \</span><br></pre></td></tr></table></figure><p>特殊考虑：<br>该脚本主要是自我解释。当然，它指定的是debian，jessie，debian的实时安装程序，32位（如果您想要64位构建，请更改–architecture i386为–architecture amd64，存储库的所有区域，所有更新，isohybrid（在具有持久性的闪存驱动器上工作）和memtest86 +。奇怪的是–interactive shell；作为构建过程的一部分，您将被转储到chroot环境中以配置新的发行版。您将需要这样做，以便可以在将系统压缩到最小容量之前安装软件包并进行其他配置。 iso。</p><p>通过lb config对手册中其他选项的大量故障排除，我发现诸如–checksums和的其他选项–grub-splash不起作用。它们是需要固定的选项（我想还有很多其他选项），但是确实可以轻松解决，例如…</p><p>构建完iso之后，用于md5sum生成md5校验和。对于–grub-splash，请转到/usr/share/live/build/bootloaders，您将看到一堆用于引导加载程序配置的文件夹。进入每个文件夹并删除splash.svg，并用所需的任何图像替换，只要它被调用即可splash.png。</p><p>回到它。<br>config需要成为可执行文件。<br><code>chmod 700 tempy</code><br>然后我们执行。<br><code>./tempy</code><br>让我们开始吧。<br>lb build<br>不要忘记我们–interactive shell在执行的脚本中指定了。输入该命令lb build将开始构建过程，下载所需的一切并将它们放在一起，最终将您转储到chroot环境中进行更多配置。<br>我们现在要安装软件包。我将为此使用分发包列表。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install task-ssh-server task-laptop task-print-server xorg alsa-base laptop-mode-tools cryptsetup live-config-systemd tor firmware-linux-nonfree firmware-ralink firmware-realtek firmware-atheros firmware-iwlwifi firmware-brcm80211 firmware-b43-installer flashplugin-nonfree lightdm mate-desktop-environment-core caja ufw dconf-editor caja-gksu caja-open-terminal mate-user-share mate-applets mate-settings-daemon mate-utils mate-control-center mate-notification-daemon mate-system-tools mate-screensaver mate-power-manager mate-system-monitor openvpn network-manager-gnome samba hardinfo pavucontrol leafpad iceweasel libreoffice-calc libreoffice-writer vlc gimp atril pidgin deluge gparted gdebi brasero engrampa galculator gpicview gksu synaptic xsane system-config-printer grub2-common frozen-bubble chromium-bsu quadrapassel gweled remmina xrdp extlinux florence</span><br></pre></td></tr></table></figure><p>特别注意事项：请<br>密切注意，您将看到包装grub2-common。这是为了节省时间，无需找出偶数–bootloader选项是否lb config有效。如果我们现在不在软件包中包含引导加载程序，您将看到生成的构建中的debian安装程序无法安装引导加载程序。这就是为什么我们现在在此包括此软件包的原因。</p><p>是的，我们要安装这些软件包。<br>其他配置。<br>一旦安装了所需的所有软件包，我们就可以在这里完成构建。但是，您可能还不想。我推荐三件事。首先在内部/etc/Network-manager/Network-manager.conf并将其更改为managed=false，managed=true以便网络管理员可以管理网络接口。</p><p>第二，我还建议配置构建的默认用户参数。为此，您可以将用户主目录的全部内容复制到/live/chroot/etc/skel（隐藏的文件夹和所有文件夹）中。我要做的是在系统上创建一个新用户，然后进行配置。屏幕保护程序，电源设置，程序规范，主题等。然后，我收获新用户主目录的内容（隐藏的文件夹和所有内容；请不要提供个人文档），然后将它们全部放入/live/chroot/etc/skel。现在，您在构建中已为每个将来的用户指定了查看桌面的方式。</p><p>第三是安装在debian仓库中找不到的软件包。再次，如前所述；我们可以将文档复制到chroot环境。一旦安装了这些额外的软件包，请删除软件包文件，因为它们将显示在最终产品的文件结构中，这对将来的用户或您自己忘记的情况都没有意义。</p><p>如果需要，您可以继续配置其他内容。例如更名（我不在这里，因此我不在此关注）。但是，如果您对事情的现状感到满意，请继续执行下一步。</p><p>完成构建。 这样，您将退出chroot环境，并通过下载所需的任何内容完成其工作，并最终将构建压缩到文件系统中，然后将其包含在iso文件中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br><span class="line">lb build</span><br></pre></td></tr></table></figure><p>命名您的iso，创建md5校验和文件，然后仔细检查md5校验和。 我们已经重命名了iso，创建了一个md5校验和文件，并将md5校验和与iso（通过了它）进行了比较。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv live-image-i386.hybrid.iso mybuild.iso</span><br><span class="line">md5sum mybuild.iso &gt; mybuild.md5</span><br><span class="line">md5sum -c mybuild.md5</span><br></pre></td></tr></table></figure><p><strong>原文地址：</strong></p><ul><li><a href="https://terkeyberger.wordpress.com/2016/05/14/live-build-how-to-build-an-installable-debian-live-cd/" target="_blank" rel="external nofollow noopener noreferrer">https://terkeyberger.wordpress.com/2016/05/14/live-build-how-to-build-an-installable-debian-live-cd/</a></li></ul>]]></content>
    
    <summary type="html">
    
      整理记录
    
    </summary>
    
    
      <category term="live" scheme="https://www.ling218.cn/categories/live/"/>
    
    
      <category term="debian" scheme="https://www.ling218.cn/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>如何：自定义您的 Ubuntu Live CD</title>
    <link href="https://www.ling218.cn/archives/7138f05c.html"/>
    <id>https://www.ling218.cn/archives/7138f05c.html</id>
    <published>2021-05-14T02:55:49.039Z</published>
    <updated>2021-05-11T15:32:11.560Z</updated>
    
    <content type="html"><![CDATA[<p>Live CD 非常棒，它们使您无需安装即可试用发行版。它们使您可以在任何计算机上运行自己喜欢的发行版，除此之外，它们还可以方便地恢复系统。</p><p>Ubuntu live CD已经打包了一些漂亮的软件，可以让您使用Live CD进行几乎所有的事情，但是仍然，它们可能是一些您不需要的软件，或者其中包含一些软件，不见了。</p><p>另一个为此的专业人士是，通过自定义图像，您将能够安装</p><p>本教程将显示一些步骤，以通过删除一些组件并添加一些其他组件来根据需要自定义Ubuntu Live CD。</p><p>在本教程中，我们将按照以下规范重新制作Ubuntu Gutsy Gibbon 7.10 Live CD：</p><ul><li>删除非英语语言包</li><li>更新实时CD中随附的软件版本</li><li>启用Universe和Multiverse存储库</li><li>包括divx，mp3支持，realplayer…。</li><li>包括ndiswrapper支持</li><li>添加Firefox Flash-nonfree插件，添加Skype。</li><li>添加一些网络故障排除工具：traceroute，wireshark，kismet…</li></ul><p>生成的图像将大于800M，因此它不适合CD，但可以适合DVD。</p><h2 id="准备主机"><a href="#准备主机" class="headerlink" title="准备主机"></a>准备主机</h2><p>首先，我们需要获取当前的Gutsy Gibbon Live CD映像并将其存储在〜/ Desktop上，而且，我们将需要安装额外的软件来重建我们的gutsy live CD squashfs：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install squashfs-tools chroot</span><br></pre></td></tr></table></figure><p>现在让我们开始设置工作环境。首先，我们将iso安装在/ tmp / livecd下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir &#x2F;tmp&#x2F;livecd</span><br><span class="line">$ sudo mount -o loop ~&#x2F;Desktop&#x2F;ubuntu-7.10-desktop-i386.iso &#x2F;tmp&#x2F;livecd</span><br></pre></td></tr></table></figure><p>然后在工作目录（<em>〜/ livecd</em>）中创建一个包含未来CD映像（<em>cd</em>）的目录，并将所有CD内容（但<em>casper / filesystem.squashfs</em>）复制到我们的〜/ livecd / cd目录中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir ~&#x2F;livecd</span><br><span class="line">$ mkdir ~&#x2F;livecd&#x2F;cd</span><br><span class="line">$ rsync --exclude&#x3D;&#x2F;casper&#x2F;filesystem.squashfs -a &#x2F;tmp&#x2F;livecd&#x2F; ~&#x2F;livecd&#x2F;cd</span><br></pre></td></tr></table></figure><p>这将复制squashfs文件以外的所有文件，该文件是包含我们实时CD文件系统的压缩文件。</p><p>现在，我们需要将casper / filesystem.squashfs挂载到名为〜/ livecd / squashfs的目录中，以便将其内容复制到要编辑实时CD文件系统的目录中：<em>〜/ livecd / custom</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir ~&#x2F;livecd&#x2F;squashfs</span><br><span class="line">$ mkdir ~&#x2F;livecd&#x2F;custom</span><br><span class="line">$ sudo modprobe squashfs</span><br><span class="line">$ sudo mount -t squashfs -o loop &#x2F;tmp&#x2F;livecd&#x2F;casper&#x2F;filesystem.squashfs ~&#x2F;livecd&#x2F;squashfs&#x2F;</span><br><span class="line">$ sudo cp -a ~&#x2F;livecd&#x2F;squashfs&#x2F;* ~&#x2F;livecd&#x2F;custom</span><br></pre></td></tr></table></figure><p>最后，让/etc/resolv.conf和/ etc / hosts复制到我们的〜/ livecd / custom / etc中，这样我们就可以从要定制的映像中访问网络（通过chroot）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo cp &#x2F;etc&#x2F;resolv.conf &#x2F;etc&#x2F;hosts ~&#x2F;livecd&#x2F;custom&#x2F;etc&#x2F;</span><br></pre></td></tr></table></figure><h2 id="进入我们的未来形象："><a href="#进入我们的未来形象：" class="headerlink" title="进入我们的未来形象："></a>进入我们的未来形象：</h2><p>为了自定义映像，我们将<em>chroot</em>更改为〜/ livecd / custom目录，并安装一些必要的伪文件系统（/ proc和/ sys）。从那里，我们将能够自定义Live CD。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chroot ~&#x2F;livecd&#x2F;custom</span><br><span class="line"># mount -t proc none &#x2F;proc&#x2F;</span><br><span class="line"># mount -t sysfs none &#x2F;sys&#x2F;</span><br><span class="line"># export HOME&#x3D;&#x2F;root</span><br></pre></td></tr></table></figure><h2 id="定制我们未来的现场CD"><a href="#定制我们未来的现场CD" class="headerlink" title="定制我们未来的现场CD"></a>定制我们未来的现场CD</h2><h3 id="移除包装"><a href="#移除包装" class="headerlink" title="移除包装"></a>移除包装</h3><p>首先，我们将删除非英语语言包，并且为了释放更多空间，我们将删除gnome-games包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># apt-get remove --purge gnome-games*</span><br><span class="line"> # apt-get remove --purge &#96;dpkg-query -W --showformat&#x3D;&#39;$&#123;Package&#125;\n&#39; | grep language-pack | egrep -v &#39;\-en&#39;&#96;</span><br></pre></td></tr></table></figure><p>请注意，您可能想删除其他一些软件。为了查看已安装的软件，您可以运行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># dpkg-query -W --showformat&#x3D;&#39;$&#123;Package&#125;\n&#39; | less</span><br></pre></td></tr></table></figure><h3 id="更新现有图像"><a href="#更新现有图像" class="headerlink" title="更新现有图像"></a>更新现有图像</h3><p>现在我们已经删除了不需要的软件，我们可以更新<em>/etc/apt/sources.list</em>以便启用<em>gutsy-updates</em>，<em>gutsy-security</em>和<em>合作伙伴</em>存储库以及<em>Universe</em>和<em>Multiverse</em>存储库，以便我们可以安装vmware-服务器。</p><p>打开并编辑<em>/etc/apt/sources.list</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># vim &#x2F;etc&#x2F;apt&#x2F;sources.list</span><br></pre></td></tr></table></figure><p>并使它看起来像：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">deb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu gutsy main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu gutsy main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu gutsy-updates main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu gutsy-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http:&#x2F;&#x2F;security.ubuntu.com&#x2F;ubuntu gutsy-security main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;security.ubuntu.com&#x2F;ubuntu gutsy-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http:&#x2F;&#x2F;archive.canonical.com&#x2F;ubuntu gutsy partner</span><br><span class="line">deb-src http:&#x2F;&#x2F;archive.canonical.com&#x2F;ubuntu gutsy partner</span><br></pre></td></tr></table></figure><p>现在，我们可以通过运行以下命令更新映像：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># apt-get update</span><br><span class="line"># apt-get dist-upgrade</span><br></pre></td></tr></table></figure><h3 id="安装新软件包"><a href="#安装新软件包" class="headerlink" title="安装新软件包"></a>安装新软件包</h3><p>让我们安装可能需要的所有多媒体包。按照<a href="https://www.debuntu.org/how-to-play-dvd-under-ubuntu/" target="_blank" rel="external nofollow noopener noreferrer">在Ubuntu下播放DVD</a>，我们需要安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># apt-get install gstreamer0.10-ffmpeg gstreamer0.10-plugins-ugly gstreamer0.10-plugins-ugly-multiverse gstreamer0.10-plugins-bad gstreamer0.10-plugins-bad-multiverse vlc mplayer mplayer-fonts</span><br><span class="line"># &#x2F;usr&#x2F;share&#x2F;doc&#x2F;libdvdread3&#x2F;install-css.sh</span><br></pre></td></tr></table></figure><p>然后，安装<strong>RealPlayer</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># wget http:&#x2F;&#x2F;www.debian-multimedia.org&#x2F;pool&#x2F;main&#x2F;r&#x2F;realplay&#x2F;realplayer_10.0.9-0.1_i386.deb -O &#x2F;tmp&#x2F;realplay.deb</span><br><span class="line"># dpkg -i &#x2F;tmp&#x2F;realplay.deb</span><br></pre></td></tr></table></figure><p>现在，让我们安装一些未在Ubuntu live cd上默认包含的utils，但在大多数情况下它们都非常方便：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># apt-get install rar unrar unace-nonfree</span><br></pre></td></tr></table></figure><p>另外，让我们安装一些无线网络实用程序，以便我们可以通过实时CD来实现无线功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># apt-get install ndiswrapper-common ndiswrapper-utils-1.9 cabextract unshield \</span><br><span class="line"> bcm43xx-fwcutter \</span><br><span class="line"> kismet aircrack-ng</span><br></pre></td></tr></table></figure><p>让我们添加其他一些网络网络实用工具：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># apt-get install wireshark nmap ettercap traceroute</span><br></pre></td></tr></table></figure><p>另外，我们将添加一些Firefox插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># apt-get install flashplugin-nonfree mozilla-plugin-vlc</span><br></pre></td></tr></table></figure><p>在此之上，我希望能够使用skype和vmware-server：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># apt-get install libqt4-core libqt4-gui</span><br><span class="line"># wget http:&#x2F;&#x2F;skype.com&#x2F;go&#x2F;getskype-linux-ubuntu -O &#x2F;tmp&#x2F;skype.deb</span><br><span class="line"># dpkg -i &#x2F;tmp&#x2F;skype.deb</span><br><span class="line"># apt-get install vmware-server</span><br></pre></td></tr></table></figure><p>好了，就是这样，我们现在拥有使用实时CD时需要的任何软件。</p><p>现在是时候进行一些清理了。</p><h2 id="清理chroot"><a href="#清理chroot" class="headerlink" title="清理chroot"></a>清理chroot</h2><p>当我们安装软件包时，<em>apt</em>缓存软件包，我们将需要删除它们以节省一些空间：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># apt-get clean</span><br></pre></td></tr></table></figure><p>另外，/ tmp中有一些文件需要删除：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># rm -rf &#x2F;tmp&#x2F;*</span><br></pre></td></tr></table></figure><p>在chroot之前，我们添加了2个文件：/ etc / hosts和/etc/resolv.conf，让我们删除它们：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># rm -f &#x2F;etc&#x2F;hosts &#x2F;etc&#x2F;resolv.conf</span><br></pre></td></tr></table></figure><p>最后，我们准备退出chroot并重新打包CD。我们首先需要卸载/ proc和/ sys：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># umount &#x2F;proc&#x2F;</span><br><span class="line"># umount &#x2F;sys&#x2F;</span><br><span class="line"># exit</span><br></pre></td></tr></table></figure><p>最后，回到主机，修改了一些软件包，我们需要重建一些清单文件，重新创建squashfs和重新创建ISO。</p><h2 id="重新创建ISO"><a href="#重新创建ISO" class="headerlink" title="重新创建ISO"></a>重新创建ISO</h2><p>Fisrt，让我们重新创建清单文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ chmod +w ~&#x2F;livecd&#x2F;cd&#x2F;casper&#x2F;filesystem.manifest</span><br><span class="line">$ sudo chroot ~&#x2F;livecd&#x2F;custom dpkg-query -W --showformat&#x3D;&#39;$&#123;Package&#125; $&#123;Version&#125;\n&#39; &gt; ~&#x2F;livecd&#x2F;cd&#x2F;casper&#x2F;filesystem.manifest</span><br><span class="line">sudo cp ~&#x2F;livecd&#x2F;cd&#x2F;casper&#x2F;filesystem.manifest ~&#x2F;livecd&#x2F;cd&#x2F;casper&#x2F;filesystem.manifest-desktop</span><br></pre></td></tr></table></figure><p>并重新生成squashfs文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mksquashfs ~&#x2F;livecd&#x2F;custom ~&#x2F;livecd&#x2F;cd&#x2F;casper&#x2F;filesystem.squashfs</span><br><span class="line">Parallel mksquashfs: Using 2 processors</span><br><span class="line">Creating little endian 3.0 filesystem on ~&#x2F;livecd&#x2F;cd&#x2F;casper&#x2F;filesystem.squashfs, block size 65536.</span><br><span class="line">....</span><br><span class="line">....</span><br></pre></td></tr></table></figure><p>现在，或者，您可能想要自定义文件：〜/ livecd / cd / README.diskdefines</p><p>最后，更新〜/ livecd / cd / md5sum.txt，其中包含〜/ livecd / cd md5和中的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo rm ~&#x2F;livecd&#x2F;cd&#x2F;md5sum.txt</span><br><span class="line"> $ sudo -s</span><br><span class="line"> # (cd ~&#x2F;livecd&#x2F;cd &amp;&amp; find . -type f -print0 | xargs -0 md5sum &gt; md5sum.txt)</span><br></pre></td></tr></table></figure><p>现在我们差不多完成了，剩下的最后一件事就是也可以使用以下命令创建ISO：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~&#x2F;livecd&#x2F;cd</span><br><span class="line">$ sudo mkisofs -r -V &quot;Ubuntu-Live-Custom&quot; -b isolinux&#x2F;isolinux.bin -c isolinux&#x2F;boot.cat -cache-inodes -J -l -no-emul-boot -boot-load-size 4 -boot-info-table -o ~&#x2F;Desktop&#x2F;Ubuntu-Live-7.10-custom.iso .</span><br></pre></td></tr></table></figure><p>在这里，您现在可以通过使用或使用虚拟化/仿真软件（例如qemu，kvm，vmware…）启动计算机来测试映像。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>只需做一些工作，就可以自定义Ubuntu Live CD，以删除/包含某些软件，确保该Live CD是最新的，并且最重要的是，允许管理员部署预先定制的Ubuntu发行版。 </p>]]></content>
    
    <summary type="html">
    
      自定义Ubuntu Live CD
    
    </summary>
    
    
      <category term="live" scheme="https://www.ling218.cn/categories/live/"/>
    
    
      <category term="ubuntu" scheme="https://www.ling218.cn/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>如何：创建完全无人值守的 Ubuntu 安装</title>
    <link href="https://www.ling218.cn/archives/9e84e35.html"/>
    <id>https://www.ling218.cn/archives/9e84e35.html</id>
    <published>2021-05-14T02:55:49.037Z</published>
    <updated>2021-05-11T15:31:59.014Z</updated>
    
    <content type="html"><![CDATA[<p>把Ubuntu镜像文件刻录到CD或U盘存储介质中，插入计算机上，引导起动，无需手动操作，自动安装Ubuntu。</p><a id="more"></a><h2 id="完整的解决方案是："><a href="#完整的解决方案是：" class="headerlink" title="完整的解决方案是："></a>完整的解决方案是：</h2><p>重新制作CD，即下载非图形Ubuntu安装ISO镜像文件，并挂载。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># sudo su -</span><br><span class="line"># mkdir -p &#x2F;mnt&#x2F;iso</span><br><span class="line"># mount -o loop ubuntu.iso &#x2F;mnt&#x2F;iso</span><br></pre></td></tr></table></figure><p>将相关文件复制到其他目录。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># mkdir -p &#x2F;opt&#x2F;ubuntuiso</span><br><span class="line"># cp -rT &#x2F;mnt&#x2F;iso &#x2F;opt&#x2F;ubuntuiso</span><br></pre></td></tr></table></figure><p>防止出现语言选择菜单。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cd &#x2F;opt&#x2F;ubuntuiso</span><br><span class="line"># echo en &gt; isolinux&#x2F;lang</span><br></pre></td></tr></table></figure><p>使用GUI程序添加名为的kickstart文件 <code>ks.cfg</code> 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># apt-get install system-config-kickstart</span><br><span class="line"># system-config-kickstart # save file to ks.cfg</span><br></pre></td></tr></table></figure><p>要为安装添加软件包，请在kickstart文件中添加一个<code>%package</code>部分，然后在<code>ks.cfg</code>文件末尾附加<code>ks.cfg</code>类似内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">%packages</span><br><span class="line">@ ubuntu-server</span><br><span class="line">openssh-server</span><br><span class="line">ftp</span><br><span class="line">build-essential</span><br></pre></td></tr></table></figure><p>这将安装Ubuntu的服务器“捆绑”，并会增加的<code>openssh-server</code>，<code>ftp</code>和<code>build-essential</code>包。</p><p>添加预置文件，以消除其他问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># echo &#39;d-i partman&#x2F;confirm_write_new_label boolean true</span><br><span class="line">d-i partman&#x2F;choose_partition \</span><br><span class="line">select Finish partitioning and write changes to disk</span><br><span class="line">d-i partman&#x2F;confirm boolean true&#39; &gt; ks.preseed</span><br></pre></td></tr></table></figure><p>设置启动命令行以使用kickstart和预置文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># vi isolinux&#x2F;txt.cfg</span><br></pre></td></tr></table></figure><p>搜索：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">label install</span><br><span class="line">  menu label ^Install Ubuntu Server</span><br><span class="line">  kernel &#x2F;install&#x2F;vmlinuz</span><br><span class="line">  append  file&#x3D;&#x2F;cdrom&#x2F;preseed&#x2F;ubuntu-server.seed vga&#x3D;788 initrd&#x3D;&#x2F;install&#x2F;initrd.gz quiet --</span><br></pre></td></tr></table></figure><p>添加<code>ks=cdrom:/ks.cfg</code>并添加<code>preseed/file=/cdrom/ks.preseed</code>到附加行。您可以删除<code>quiet</code>和<code>vga=788</code>词。它看起来像。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">append file&#x3D;&#x2F;cdrom&#x2F;preseed&#x2F;ubuntu-server.seed \</span><br><span class="line">   initrd&#x3D;&#x2F;install&#x2F;initrd.gz \</span><br><span class="line">   ks&#x3D;cdrom:&#x2F;ks.cfg preseed&#x2F;file&#x3D;&#x2F;cdrom&#x2F;ks.preseed --</span><br></pre></td></tr></table></figure><p>现在创建一个新的ISO。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># mkisofs -D -r -V &quot;ATTENDLESS_UBUNTU&quot; \</span><br><span class="line">     -cache-inodes -J -l -b isolinux&#x2F;isolinux.bin \</span><br><span class="line">     -c isolinux&#x2F;boot.cat -no-emul-boot -boot-load-size 4 \</span><br><span class="line">     -boot-info-table -o &#x2F;opt&#x2F;autoinstall.iso &#x2F;opt&#x2F;ubuntuiso</span><br></pre></td></tr></table></figure><p>现在，您将拥有一张CD。该CD可在从Ubuntu系统引导时安装，而无需一次击键。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;把Ubuntu镜像文件刻录到CD或U盘存储介质中，插入计算机上，引导起动，无需手动操作，自动安装Ubuntu。&lt;/p&gt;
    
    </summary>
    
    
      <category term="live" scheme="https://www.ling218.cn/categories/live/"/>
    
    
      <category term="ubuntu" scheme="https://www.ling218.cn/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>将自定义 Debian 安装到硬盘</title>
    <link href="https://www.ling218.cn/archives/df9fb8e4.html"/>
    <id>https://www.ling218.cn/archives/df9fb8e4.html</id>
    <published>2021-05-14T02:55:49.035Z</published>
    <updated>2021-05-11T15:31:45.887Z</updated>
    
    <content type="html"><![CDATA[<p>Debian提供的库存Debian安装程序非常棒。它直观，简单。但是，如果出于某种原因（特定配置，计算机部署，最小映像）想要自定义安装，则可以使用以下步骤来完成。</p><p>为此，我们将需要任何基于Debian的实时CD。您可以使用我的指南来<a href="https://willhaley.com/blog/custom-debian-live-environment/" target="_blank" rel="external nofollow noopener noreferrer">创建自定义的Debian Live CD或USB</a>来生成该文件，也可以仅使用Ubuntu或Debian Live CD或USB。</p><p>使用自定义实时环境的优势在于您可以将所需工具打包在实时环境中，以便它们始终可用。如果您使用库存的Ubuntu或Debian Live CD，则可能需要网络连接才能安装所需的工具。</p><p><strong>警告</strong>：我已<strong>突出显示</strong>您应该在目标安装chroot中的所有位置。</p><ol><li><p>使用实时CD或USB引导计算机并安装必要的工具（假设它们尚不可用）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install debootstrap</span><br></pre></td></tr></table></figure></li><li><p>确定要在其中安装自定义Debian的设备。</p><p>我假设您打算使用的硬盘位于<code>/dev/sdz</code>，您只希望该磁盘上有一个分区，并且希望将MBR与grub2一起使用。</p><p>您<strong>必须</strong>替换的任何实例<code>/dev/sdz</code>与同位置在这些步骤中<strong>您的</strong>硬盘驱动器或会不小心丢失数据。</p></li><li><p>用一个可引导的Linux分区创建一个MBR表。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo -e &quot;o\nn\np\n1\n\n\nw&quot; | sudo fdisk &#x2F;dev&#x2F;sdz</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo -e &quot;a\nw\n&quot; | sudo fdisk &#x2F;dev&#x2F;sdz</span><br></pre></td></tr></table></figure></li><li><p>格式化分区。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkfs.ext4 &#x2F;dev&#x2F;sdz1</span><br></pre></td></tr></table></figure></li><li><p>如果安装点尚不存在，请创建一个。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p &#x2F;mnt</span><br></pre></td></tr></table></figure></li><li><p>挂载分区。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount &#x2F;dev&#x2F;sdz1 &#x2F;mnt</span><br></pre></td></tr></table></figure></li><li><p>设置基本的Debian安装。我在我的发行版中使用Stretch，在架构上使用i386。如果您不在美国，或者您知道更近的镜子，请更换镜子。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo debootstrap \</span><br><span class="line">    --arch&#x3D;i386 \</span><br><span class="line">    --variant&#x3D;minbase \</span><br><span class="line">    stretch &#x2F;mnt http:&#x2F;&#x2F;ftp.us.debian.org&#x2F;debian&#x2F;</span><br></pre></td></tr></table></figure></li><li><p>绑定<code>/dev</code>并<code>/proc</code>从主机到chroot。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -o bind &#x2F;dev &#x2F;mnt&#x2F;dev</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -t proc &#x2F;proc &#x2F;mnt&#x2F;proc</span><br></pre></td></tr></table></figure></li><li><p>Chroot到我们的Debian安装。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chroot &#x2F;mnt</span><br></pre></td></tr></table></figure></li><li><p><strong>chroot</strong></p><p>找出要在安装中使用的Linux内核。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-cache search linux-image</span><br></pre></td></tr></table></figure><p>我选择了图像<code>linux-image-586</code>。<code>systemd-sys</code>（或等效项）是必须提供的<code>init</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; \</span><br><span class="line">apt-get install --no-install-recommends \</span><br><span class="line">    linux-image-586 systemd-sysv</span><br></pre></td></tr></table></figure></li><li><p><strong>chroot</strong></p><p>安装您选择的程序。我使用<code>--no-install-recommends</code>以避免多余的程序包。您应该确定安装所需的内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt-get install --no-install-recommends \</span><br><span class="line">    network-manager net-tools wireless-tools wpagui \</span><br><span class="line">    tcpdump wget openssh-client \</span><br><span class="line">    blackbox xserver-xorg-core xserver-xorg x11-xserver-utils \</span><br><span class="line">    xinit xterm \</span><br><span class="line">    pciutils usbutils gparted nano</span><br></pre></td></tr></table></figure></li><li><p><strong>chroot</strong></p><p>创建<code>/etc/fstab</code>用于安装的文件。</p><p>我们可以使用类似的脚本来生成它。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UUID&#x3D;&#96;blkid -s UUID -o value &#x2F;dev&#x2F;sdz1&#96;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;UUID&#x3D;$&#123;UUID&#125; &#x2F; ext4 defaults 1 1&quot; &gt; &#x2F;etc&#x2F;fstab</span><br></pre></td></tr></table></figure></li><li><p><strong>chroot</strong></p><p>安装grub引导加载程序。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install grub2</span><br></pre></td></tr></table></figure><p>出现提示时，请确保选择<code>/dev/sdz</code>（<strong>不是</strong> <code>/dev/sdz1</code>）作为<code>Grub install device</code>。</p></li><li><p><strong>chroot</strong></p><p>设置root密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd root</span><br></pre></td></tr></table></figure></li><li><p><strong>chroot</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure></li><li><p>重新启动您的Debian安装！</p></li></ol><h2 id="原文地址："><a href="#原文地址：" class="headerlink" title="原文地址："></a>原文地址：</h2><ul><li><a href="https://willhaley.com/blog/custom-debian-hard-drive-install/" target="_blank" rel="external nofollow noopener noreferrer">https://willhaley.com/blog/custom-debian-hard-drive-install/</a></li></ul>]]></content>
    
    <summary type="html">
    
      将自定义Debian安装到硬盘
    
    </summary>
    
    
      <category term="live" scheme="https://www.ling218.cn/categories/live/"/>
    
    
      <category term="debian" scheme="https://www.ling218.cn/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>将自定义 Debian Live 安装到USB驱动器 (img格式)</title>
    <link href="https://www.ling218.cn/archives/93f8863.html"/>
    <id>https://www.ling218.cn/archives/93f8863.html</id>
    <published>2021-05-14T02:55:49.031Z</published>
    <updated>2021-05-11T15:31:34.655Z</updated>
    
    <content type="html"><![CDATA[<p>这些说明<strong>不是</strong>用于实时安装，而是用于将Debian安装到USB闪存介质。</p><p>这里的一个额外好处是，我们将首先在<code>img</code>作为环回设备安装的文件中准备Debian chroot 。</p><p>然后，我们可以将该<code>img</code>文件用作通用基础映像，然后将其部署到大量USB驱动器中。</p><p>你为什么想做这个？好吧，一方面，该<code>img</code>文件有助于减少混乱，并为您提供易于管理的文件，该文件可以一次又一次地重新部署。这对于创建将在多台计算机上重用的通用映像也是理想的。就像您在网吧中所做的那样，每次启动时都会重新安装Debian，或者在教室中。</p><p><strong>警告</strong>：我已<strong>突出显示</strong>您应该在chroot环境中的所有位置。小心！在本地环境而不是chroot中运行其中一些命令可能会导致问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install \</span><br><span class="line">    debootstrap</span><br></pre></td></tr></table></figure><p>创建图像文件并将其格式化。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fallocate -l 2G debian.img</span><br><span class="line">echo -e &quot;o\nn\np\n1\n\n\nw&quot; | sudo fdisk debian.img</span><br><span class="line">echo -e &quot;a\nw\n&quot; | sudo fdisk debian.img</span><br></pre></td></tr></table></figure><p><strong>请注意以下命令返回的内容。</strong>对我来说，回送设备是<code>/dev/loop0</code>，但它可能因您而异。如果您的回送设备地址不同，请相应地更新以下说明。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo losetup --partscan --show --find debian.img</span><br></pre></td></tr></table></figure><p>格式化回送设备的linux分区，就像我们对真实物理设备所做的一样。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkfs.ext4 &#x2F;dev&#x2F;loop0p1</span><br></pre></td></tr></table></figure><p>挂载分区。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p &#x2F;mnt&#x2F;debian</span><br><span class="line">sudo mount &#x2F;dev&#x2F;loop0p1 &#x2F;mnt&#x2F;debian</span><br></pre></td></tr></table></figure><p>引导chroot。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo debootstrap \</span><br><span class="line">    --arch&#x3D;i386 \</span><br><span class="line">    --variant&#x3D;minbase \</span><br><span class="line">    stretch &#x2F;mnt&#x2F;debian http:&#x2F;&#x2F;ftp.us.debian.org&#x2F;debian&#x2F;</span><br></pre></td></tr></table></figure><p>将特殊设备安装到chroot。这对于以后安装grub非常重要。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -t proc &#x2F;proc &#x2F;mnt&#x2F;debian&#x2F;proc</span><br><span class="line">sudo mount -t sysfs &#x2F;sys &#x2F;mnt&#x2F;debian&#x2F;sys</span><br><span class="line">sudo mount -o bind &#x2F;dev &#x2F;mnt&#x2F;debian&#x2F;dev</span><br></pre></td></tr></table></figure><p>将root更改为chroot环境。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chroot &#x2F;mnt&#x2F;debian</span><br></pre></td></tr></table></figure><p><strong>chroot</strong></p><p>至少需要这些软件包，但根据需要添加更多。</p><p><strong>当提示您将grub安装到设备上时，请勿安装它。只需单击“ Enter”，然后选择不将其安装到任何设备。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; \</span><br><span class="line">apt-get install --no-install-recommends \</span><br><span class="line">    linux-image-586 systemd-sysv \</span><br><span class="line">grub2-common grub-pc</span><br></pre></td></tr></table></figure><p><strong>chroot</strong></p><p>我们要基于磁盘标签而不是UUID或类似的命名磁盘<code>fstab</code>进行装载。这是因为，根据计算机的不同，USB驱动器<em>可能不是/ dev / sda</em>，而且因为UUID会根据文件的部署位置而有所不同。<code>/``/dev/sda``img</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;LABEL&#x3D;DEBUSB &#x2F; ext4 defaults 0 1&quot; &gt; &#x2F;etc&#x2F;fstab</span><br></pre></td></tr></table></figure><p><strong>chroot</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd root</span><br></pre></td></tr></table></figure><p><strong>chroot</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">grub-install \</span><br><span class="line">    --target&#x3D;i386-pc \</span><br><span class="line">    --boot-directory&#x3D;&#x2F;boot \</span><br><span class="line">    --force-file-id \</span><br><span class="line">    --skip-fs-probe \</span><br><span class="line">    --recheck &#x2F;dev&#x2F;loop0</span><br></pre></td></tr></table></figure><p><strong>chroot</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure><p>在中编辑<code>grub.cfg</code>文件<code>img</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano &#x2F;mnt&#x2F;debian&#x2F;boot&#x2F;grub&#x2F;grub.cfg</span><br></pre></td></tr></table></figure><p>将此内容粘贴到<code>grub.cfg</code>文件中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># grub.cfg</span><br><span class="line">set default&#x3D;&quot;0&quot;</span><br><span class="line">set timeout&#x3D;10</span><br><span class="line"></span><br><span class="line">menuentry &quot;Debian&quot; &#123;</span><br><span class="line">    linux &#x2F;vmlinuz root&#x3D;&#x2F;dev&#x2F;disk&#x2F;by-label&#x2F;DEBUSB quiet</span><br><span class="line">    initrd &#x2F;initrd.img</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用与我们<code>fstab</code>上面相同的名称标记映像分区。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo e2label &#x2F;dev&#x2F;loop0p1 DEBUSB</span><br></pre></td></tr></table></figure><p>设置的主机名<code>img</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;debian-usb&quot; | sudo tee &#x2F;mnt&#x2F;debian&#x2F;etc&#x2F;hostname</span><br></pre></td></tr></table></figure><p>清理特殊设备。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo umount &#x2F;mnt&#x2F;debian&#x2F;&#123;dev,sys,proc&#125;</span><br></pre></td></tr></table></figure><p>卸载回路设备。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo umount &#x2F;mnt&#x2F;debian</span><br></pre></td></tr></table></figure><p>卸下<code>img</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo losetup -d &#x2F;dev&#x2F;loop0</span><br></pre></td></tr></table></figure><p>现在，您具有通用的Debian安装，可以像这样将其部署到多个设备。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if&#x3D;debian.img of&#x3D;&#x2F;dev&#x2F;sdz</span><br></pre></td></tr></table></figure><h1 id="引文"><a href="#引文" class="headerlink" title="引文"></a>引文</h1><ul><li><a href="https://wiki.archlinux.org/index.php/Installing_Arch_Linux_on_a_USB_key" target="_blank" rel="external nofollow noopener noreferrer">在USB密钥上安装Arch Linux</a></li><li><a href="http://www.wyae.de/docs/boot-usb3/" target="_blank" rel="external nofollow noopener noreferrer">从USB 3启动</a></li><li><a href="https://www.cyberciti.biz/faq/linux-partition-howto-set-labels/" target="_blank" rel="external nofollow noopener noreferrer">标记Linux分区</a></li><li><a href="https://ubuntuforums.org/showthread.php?t=1529777" target="_blank" rel="external nofollow noopener noreferrer">如何生成使用LABEL而不是UUID的grub.cfg？</a></li><li><a href="https://wiki.archlinux.org/index.php/GRUB" target="_blank" rel="external nofollow noopener noreferrer">格鲁布</a></li><li><a href="https://www.gnu.org/software/grub/manual/html_node/Multi_002dboot-manual-config.html" target="_blank" rel="external nofollow noopener noreferrer">6.3多引导手动配置</a></li><li><a href="https://unix.stackexchange.com/questions/10010/safe-to-delete-system-map-files-in-boot" target="_blank" rel="external nofollow noopener noreferrer">可以安全删除/ boot中的System.map- *文件吗？</a></li><li><a href="https://ubuntuforums.org/showthread.php?t=1530532" target="_blank" rel="external nofollow noopener noreferrer">使用标签引导GRUB2（无UUID）</a></li><li><a href="https://www.gnu.org/software/grub/manual/grub.html#search" target="_blank" rel="external nofollow noopener noreferrer">16.3.64搜索</a></li><li><a href="https://ubuntuforums.org/showthread.php?t=1854142" target="_blank" rel="external nofollow noopener noreferrer">错误：没有这样的设备：grub抢救&gt;</a></li><li><a href="https://askubuntu.com/questions/491604/grub-rescue-no-such-partition" target="_blank" rel="external nofollow noopener noreferrer">grub救援-&gt;没有这样的分区[重复]</a></li><li><a href="https://superuser.com/questions/130955/how-to-install-grub-into-an-img-file" target="_blank" rel="external nofollow noopener noreferrer">如何将grub安装到.img文件中？</a></li><li><a href="https://unix.stackexchange.com/questions/120198/how-to-fix-boot-into-initramfs-prompt-and-mount-cant-read-etc-fstab-no-su" target="_blank" rel="external nofollow noopener noreferrer">如何解决引导进入initramfs提示符和“装载：无法读取’/ etc / fstab’：无此文件或目录”和“找不到init”的问题？</a></li><li><a href="https://serverfault.com/questions/540492/sudo-echo-bla-etc-sysctl-conf-permission-denied" target="_blank" rel="external nofollow noopener noreferrer"><code>sudo echo “bla” &gt;&gt; /etc/sysctl.conf</code> 没有权限</a></li><li><a href="https://superuser.com/questions/165116/mount-dev-proc-sys-in-a-chroot-environment" target="_blank" rel="external nofollow noopener noreferrer">在chroot环境中挂载dev，proc，sys？</a></li></ul><h2 id="原文地址："><a href="#原文地址：" class="headerlink" title="原文地址："></a>原文地址：</h2><ul><li><a href="https://willhaley.com/blog/install-debian-usb/" target="_blank" rel="external nofollow noopener noreferrer">https://willhaley.com/blog/install-debian-usb/</a></li></ul>]]></content>
    
    <summary type="html">
    
      将自定义Debian Live安装到USB驱动器 (img格式)
    
    </summary>
    
    
      <category term="live" scheme="https://www.ling218.cn/categories/live/"/>
    
    
      <category term="debian" scheme="https://www.ling218.cn/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>官方：在基于 Debian 的系统上构建 Kali ISO</title>
    <link href="https://www.ling218.cn/archives/9308cb62.html"/>
    <id>https://www.ling218.cn/archives/9308cb62.html</id>
    <published>2021-05-14T02:55:49.028Z</published>
    <updated>2021-05-11T15:31:24.074Z</updated>
    
    <content type="html"><![CDATA[<p>您可以在Kali以外的基于Debian的系统上轻松运行实时构建。以下说明已经过测试，可以与Debian和Ubuntu一起使用。</p><p>首先，我们通过确保已完全更新来准备系统，然后继续下载Kali存档密钥环和实时构建软件包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br><span class="line">cd &#x2F;root&#x2F;</span><br><span class="line"></span><br><span class="line">wget http:&#x2F;&#x2F;http.kali.org&#x2F;pool&#x2F;main&#x2F;k&#x2F;kali-archive-keyring&#x2F;kali-archive-keyring_2018.2_all.deb</span><br><span class="line">wget https:&#x2F;&#x2F;archive.kali.org&#x2F;kali&#x2F;pool&#x2F;main&#x2F;l&#x2F;live-build&#x2F;live-build_20190311_all.deb</span><br></pre></td></tr></table></figure><p>完成后，我们将安装一些其他依赖项和以前下载的文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y git live-build cdebootstrap debootstrap curl</span><br><span class="line">sudo dpkg -i kali-archive-keyring_2018.2_all.deb</span><br><span class="line">sudo dpkg -i live-build_20190311_all.deb</span><br></pre></td></tr></table></figure><p>准备好所有环境后，我们通过设置构建脚本并签出构建配置来开始实时构建过程。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;share&#x2F;debootstrap&#x2F;scripts&#x2F;</span><br><span class="line">echo &quot;default_mirror http:&#x2F;&#x2F;http.kali.org&#x2F;kali&quot;; sed -e &quot;s&#x2F;debian-archive-keyring.gpg&#x2F;kali-archive-keyring.gpg&#x2F;g&quot; sid &gt; &#x2F;tmp&#x2F;kali</span><br><span class="line">sudo mv &#x2F;tmp&#x2F;kali .</span><br><span class="line">sudo ln -s kali kali-rolling</span><br><span class="line"></span><br><span class="line">cd ~</span><br><span class="line">git clone https:&#x2F;&#x2F;gitlab.com&#x2F;kalilinux&#x2F;build-scripts&#x2F;live-build-config.git</span><br><span class="line"></span><br><span class="line">cd live-build-config&#x2F;</span><br></pre></td></tr></table></figure><p>此时，我们必须编辑<code>build.sh</code>脚本以绕过版本检查。为此，我们注释掉下面的“出口1”。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Check we have a good debootstrap</span><br><span class="line">ver_debootstrap&#x3D;$(dpkg-query -f &#39;$&#123;Version&#125;&#39; -W debootstrap)</span><br><span class="line">if dpkg --compare-versions &quot;$ver_debootstrap&quot; lt &quot;1.0.97&quot;; then</span><br><span class="line">if ! echo &quot;$ver_debootstrap&quot; | grep -q kali; then</span><br><span class="line">echo &quot;ERROR: You need debootstrap &gt;&#x3D; 1.0.97 (or a Kali patched debootstrap). Your current version: $ver_debootstrap&quot; &gt;&amp;2</span><br><span class="line">exit 1</span><br><span class="line">fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>进行更改后，脚本应如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Check we have a good debootstrap</span><br><span class="line">ver_debootstrap&#x3D;$(dpkg-query -f &#39;$&#123;Version&#125;&#39; -W debootstrap)</span><br><span class="line">if dpkg --compare-versions &quot;$ver_debootstrap&quot; lt &quot;1.0.97&quot;; then</span><br><span class="line">if ! echo &quot;$ver_debootstrap&quot; | grep -q kali; then</span><br><span class="line">echo &quot;ERROR: You need debootstrap &gt;&#x3D; 1.0.97 (or a Kali patched debootstrap). Your current version: $ver_debootstrap&quot; &gt;&amp;2</span><br><span class="line"># exit 1</span><br><span class="line">fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>此时，我们可以正常建立ISO</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo .&#x2F;build.sh --variant light --verbose</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      可以在Kali以外的基于Debian的系统上轻松运行实时构建
    
    </summary>
    
    
      <category term="live" scheme="https://www.ling218.cn/categories/live/"/>
    
    
      <category term="kali" scheme="https://www.ling218.cn/tags/kali/"/>
    
  </entry>
  
  <entry>
    <title>实时构建自定义的 Kali ISO</title>
    <link href="https://www.ling218.cn/archives/fb169ff8.html"/>
    <id>https://www.ling218.cn/archives/fb169ff8.html</id>
    <published>2021-05-14T02:55:49.023Z</published>
    <updated>2021-05-11T15:31:14.058Z</updated>
    
    <content type="html"><![CDATA[<h2 id="建立自己的Kali-ISO简介"><a href="#建立自己的Kali-ISO简介" class="headerlink" title="建立自己的Kali ISO简介"></a>建立自己的Kali ISO简介</h2><p>构建自定义的Kali ISO既简单，有趣又有意义。您几乎可以使用Debian动态<a href="https://live-team.pages.debian.net/live-manual/html/live-manual/index.en.html" target="_blank" rel="external nofollow noopener noreferrer">构建</a>脚本来配置Kali ISO构建的任何方面。这些脚本使开发人员可以通过提供一个框架来轻松构建实时系统映像，该框架使用配置集来自动化和自定义构建映像的所有方面。Kali Linux开发团队已经采用了这些脚本，它们被用来制作Kali ISO正式发行版。</p><h2 id="您应该在哪里建立ISO？"><a href="#您应该在哪里建立ISO？" class="headerlink" title="您应该在哪里建立ISO？"></a>您应该在哪里建立ISO？</h2><p>理想情况下，您应该<strong>在现有的Kali环境中</strong>构建自定义的Kali ISO 。</p><h2 id="准备就绪-设置实时构建系统"><a href="#准备就绪-设置实时构建系统" class="headerlink" title="准备就绪-设置实时构建系统"></a>准备就绪-设置实时构建系统</h2><p>我们首先需要使用以下命令通过安装和设置实时构建及其要求来准备Kali ISO构建环境：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install -y curl git live-build cdebootstrap</span><br><span class="line">git clone https:&#x2F;&#x2F;gitlab.com&#x2F;kalilinux&#x2F;build-scripts&#x2F;live-build-config.git</span><br></pre></td></tr></table></figure><p>现在，您只需输入“ live-build-config”目录并运行我们的<strong>build.sh</strong>包装器脚本，即可简单地构建更新的Kali ISO ，如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd live-build-config&#x2F;</span><br><span class="line">.&#x2F;build.sh --verbose</span><br></pre></td></tr></table></figure><p>“ build.sh”脚本需要一段时间才能完成，因为它会下载创建ISO所需的所有必需软件包。喝咖啡的好时机。</p><h2 id="配置Kali-ISO构建（可选）"><a href="#配置Kali-ISO构建（可选）" class="headerlink" title="配置Kali ISO构建（可选）"></a>配置Kali ISO构建（可选）</h2><p>如果您想自定义您的Kali Linux ISO，本节将解释一些细节。通过<strong>kali-config</strong>目录，Kali Linux live build支持各种自定义选项，这些选项在Debian <a href="https://live-team.pages.debian.net/live-manual/html/live-manual/customization-overview.en.html" target="_blank" rel="external nofollow noopener noreferrer">live build 4.x</a>页面上有详细记录。但是，对于不耐烦的人，这里是一些重点。</p><h3 id="使用不同的桌面环境构建Kali"><a href="#使用不同的桌面环境构建Kali" class="headerlink" title="使用不同的桌面环境构建Kali"></a>使用不同的桌面环境构建Kali</h3><p>从Kali 2.0开始，我们现在支持各种桌面环境的内置配置，包括KDE，Gnome，E17，I3WM，LXDE，MATE和XFCE。要构建其中的任何一个，您将使用类似于以下内容的语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># These are the different Desktop Environment build options:</span><br><span class="line">#.&#x2F;build.sh --variant &#123;gnome,kde,xfce,mate,e17,lxde,i3wm&#125; --verbose</span><br><span class="line"></span><br><span class="line"># To build a KDE ISO:</span><br><span class="line">.&#x2F;build.sh --variant kde --verbose</span><br><span class="line"># To build a MATE ISO:</span><br><span class="line">.&#x2F;build.sh --variant mate --verbose</span><br><span class="line"></span><br><span class="line">#...and so on.</span><br></pre></td></tr></table></figure><h3 id="控制构建中包含的软件包"><a href="#控制构建中包含的软件包" class="headerlink" title="控制构建中包含的软件包"></a>控制构建中包含的软件包</h3><p>您的构建中包含的软件包列表将出现在相应的kali- $ variant目录中。例如，如果要构建默认的Gnome ISO，则应使用以下软件包列表文件<strong>-kali-config / variant-gnome / package-lists / kali.list.chroot</strong>。默认情况下，此列表包括“ kali-linux-full”元软件包以及其他一些软件包。可以将它们注释掉，并用手册的手动列表替换，以将其包括在ISO中以获得更大的粒度。</p><h3 id="构建钩子，二进制文件和chroot"><a href="#构建钩子，二进制文件和chroot" class="headerlink" title="构建钩子，二进制文件和chroot"></a>构建钩子，二进制文件和chroot</h3><p>实时构建挂钩允许我们在Kali ISO实时构建的各个阶段中钩挂脚本。有关钩子及其使用方法的更多详细信息，请参阅<a href="https://live-team.pages.debian.net/live-manual/html/live-manual/customizing-contents.en.html#507" target="_blank" rel="external nofollow noopener noreferrer">实时构建手册</a>。例如，我们建议您在<strong>kali-config / common / hooks /中</strong>检出现有的挂钩。</p><h3 id="覆盖构建中的文件"><a href="#覆盖构建中的文件" class="headerlink" title="覆盖构建中的文件"></a>覆盖构建中的文件</h3><p>您可以通过将其他文件或脚本分别覆盖在现有文件系统上的<strong>include。{chroot，binary，installer}</strong>目录中，来选择将其他文件或脚本包含在构建中。例如，如果我们想将自己的自定义脚本包括在ISO 的<strong>/ root /</strong>目录中（这将对应于“ chroot”阶段），则可以将该脚本文件放入<strong>kali-config / common / includes中。 chroot /</strong>目录，然后再建立ISO。</p><h2 id="为较早的i386架构构建Kali-Linux-ISO"><a href="#为较早的i386架构构建Kali-Linux-ISO" class="headerlink" title="为较早的i386架构构建Kali Linux ISO"></a>为较早的i386架构构建Kali Linux ISO</h2><p>Kali Linux i386 ISO已启用PAE。如果您需要禁用PAE的旧硬件的默认内核，则需要重建Kali Linux ISO。重建过程与上述过程基本相同，除了需要按如下所示在<strong>auto / config</strong>中将<strong>686-pae</strong>参数更改为<strong>586</strong>。首先，安装先决条件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install -y git live-build cdebootstrap debootstrap</span><br><span class="line">git clone https:&#x2F;&#x2F;gitlab.com&#x2F;kalilinux&#x2F;build-scripts&#x2F;live-build-config.git</span><br></pre></td></tr></table></figure><p>接下来，对auto / config进行更改以适合相应的体系结构：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd live-build-config&#x2F;</span><br><span class="line">sed -i &#39;s&#x2F;686-pae&#x2F;686&#x2F;g&#39; auto&#x2F;config</span><br></pre></td></tr></table></figure><p>最后，运行您的构建。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;build.sh --arch i386 --verbose</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      实时构建自定义的Kali ISO，被用来制作Kali ISO正式发行版
    
    </summary>
    
    
      <category term="live" scheme="https://www.ling218.cn/categories/live/"/>
    
    
      <category term="kali" scheme="https://www.ling218.cn/tags/kali/"/>
    
  </entry>
  
</feed>
